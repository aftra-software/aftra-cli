/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HistoricalScores struct for HistoricalScores
type HistoricalScores struct {
	CompanyScores []CompanyScore `json:"companyScores"`
	GlobalScores []GlobalStats `json:"globalScores"`
}

// NewHistoricalScores instantiates a new HistoricalScores object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHistoricalScores(companyScores []CompanyScore, globalScores []GlobalStats) *HistoricalScores {
	this := HistoricalScores{}
	this.CompanyScores = companyScores
	this.GlobalScores = globalScores
	return &this
}

// NewHistoricalScoresWithDefaults instantiates a new HistoricalScores object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHistoricalScoresWithDefaults() *HistoricalScores {
	this := HistoricalScores{}
	return &this
}

// GetCompanyScores returns the CompanyScores field value
func (o *HistoricalScores) GetCompanyScores() []CompanyScore {
	if o == nil {
		var ret []CompanyScore
		return ret
	}

	return o.CompanyScores
}

// GetCompanyScoresOk returns a tuple with the CompanyScores field value
// and a boolean to check if the value has been set.
func (o *HistoricalScores) GetCompanyScoresOk() ([]CompanyScore, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompanyScores, true
}

// SetCompanyScores sets field value
func (o *HistoricalScores) SetCompanyScores(v []CompanyScore) {
	o.CompanyScores = v
}

// GetGlobalScores returns the GlobalScores field value
func (o *HistoricalScores) GetGlobalScores() []GlobalStats {
	if o == nil {
		var ret []GlobalStats
		return ret
	}

	return o.GlobalScores
}

// GetGlobalScoresOk returns a tuple with the GlobalScores field value
// and a boolean to check if the value has been set.
func (o *HistoricalScores) GetGlobalScoresOk() ([]GlobalStats, bool) {
	if o == nil {
		return nil, false
	}
	return o.GlobalScores, true
}

// SetGlobalScores sets field value
func (o *HistoricalScores) SetGlobalScores(v []GlobalStats) {
	o.GlobalScores = v
}

func (o HistoricalScores) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["companyScores"] = o.CompanyScores
	}
	if true {
		toSerialize["globalScores"] = o.GlobalScores
	}
	return json.Marshal(toSerialize)
}

type NullableHistoricalScores struct {
	value *HistoricalScores
	isSet bool
}

func (v NullableHistoricalScores) Get() *HistoricalScores {
	return v.value
}

func (v *NullableHistoricalScores) Set(val *HistoricalScores) {
	v.value = val
	v.isSet = true
}

func (v NullableHistoricalScores) IsSet() bool {
	return v.isSet
}

func (v *NullableHistoricalScores) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHistoricalScores(val *HistoricalScores) *NullableHistoricalScores {
	return &NullableHistoricalScores{value: val, isSet: true}
}

func (v NullableHistoricalScores) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHistoricalScores) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


