/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OpportunityDetails struct for OpportunityDetails
type OpportunityDetails struct {
	ContextDescription string `json:"context_description"`
	Opportunity Opportunity1 `json:"opportunity"`
}

// NewOpportunityDetails instantiates a new OpportunityDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpportunityDetails(contextDescription string, opportunity Opportunity1) *OpportunityDetails {
	this := OpportunityDetails{}
	this.ContextDescription = contextDescription
	this.Opportunity = opportunity
	return &this
}

// NewOpportunityDetailsWithDefaults instantiates a new OpportunityDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpportunityDetailsWithDefaults() *OpportunityDetails {
	this := OpportunityDetails{}
	return &this
}

// GetContextDescription returns the ContextDescription field value
func (o *OpportunityDetails) GetContextDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContextDescription
}

// GetContextDescriptionOk returns a tuple with the ContextDescription field value
// and a boolean to check if the value has been set.
func (o *OpportunityDetails) GetContextDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContextDescription, true
}

// SetContextDescription sets field value
func (o *OpportunityDetails) SetContextDescription(v string) {
	o.ContextDescription = v
}

// GetOpportunity returns the Opportunity field value
func (o *OpportunityDetails) GetOpportunity() Opportunity1 {
	if o == nil {
		var ret Opportunity1
		return ret
	}

	return o.Opportunity
}

// GetOpportunityOk returns a tuple with the Opportunity field value
// and a boolean to check if the value has been set.
func (o *OpportunityDetails) GetOpportunityOk() (*Opportunity1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Opportunity, true
}

// SetOpportunity sets field value
func (o *OpportunityDetails) SetOpportunity(v Opportunity1) {
	o.Opportunity = v
}

func (o OpportunityDetails) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["context_description"] = o.ContextDescription
	}
	if true {
		toSerialize["opportunity"] = o.Opportunity
	}
	return json.Marshal(toSerialize)
}

type NullableOpportunityDetails struct {
	value *OpportunityDetails
	isSet bool
}

func (v NullableOpportunityDetails) Get() *OpportunityDetails {
	return v.value
}

func (v *NullableOpportunityDetails) Set(val *OpportunityDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableOpportunityDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableOpportunityDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpportunityDetails(val *OpportunityDetails) *NullableOpportunityDetails {
	return &NullableOpportunityDetails{value: val, isSet: true}
}

func (v NullableOpportunityDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpportunityDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


