/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AccountEntity struct for AccountEntity
type AccountEntity struct {
	Pk string `json:"pk"`
	Sk string `json:"sk"`
	EntityType *string `json:"entityType,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
	Name string `json:"name"`
	FullName *string `json:"fullName,omitempty"`
	Status *AccountStatusEnum `json:"status,omitempty"`
	CampaignOnNextScan *bool `json:"campaignOnNextScan,omitempty"`
	Verified *bool `json:"verified,omitempty"`
	SourceInformation Sourceinformation `json:"sourceInformation"`
	Metadata *AccountMetadata `json:"metadata,omitempty"`
}

// NewAccountEntity instantiates a new AccountEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountEntity(pk string, sk string, name string, sourceInformation Sourceinformation) *AccountEntity {
	this := AccountEntity{}
	this.Pk = pk
	this.Sk = sk
	this.Name = name
	var fullName string = ""
	this.FullName = &fullName
	var campaignOnNextScan bool = false
	this.CampaignOnNextScan = &campaignOnNextScan
	var verified bool = false
	this.Verified = &verified
	this.SourceInformation = sourceInformation
	return &this
}

// NewAccountEntityWithDefaults instantiates a new AccountEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountEntityWithDefaults() *AccountEntity {
	this := AccountEntity{}
	var fullName string = ""
	this.FullName = &fullName
	var campaignOnNextScan bool = false
	this.CampaignOnNextScan = &campaignOnNextScan
	var verified bool = false
	this.Verified = &verified
	return &this
}

// GetPk returns the Pk field value
func (o *AccountEntity) GetPk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetPkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *AccountEntity) SetPk(v string) {
	o.Pk = v
}

// GetSk returns the Sk field value
func (o *AccountEntity) GetSk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sk
}

// GetSkOk returns a tuple with the Sk field value
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetSkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sk, true
}

// SetSk sets field value
func (o *AccountEntity) SetSk(v string) {
	o.Sk = v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *AccountEntity) GetEntityType() string {
	if o == nil || o.EntityType == nil {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetEntityTypeOk() (*string, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *AccountEntity) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *AccountEntity) SetEntityType(v string) {
	o.EntityType = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AccountEntity) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AccountEntity) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *AccountEntity) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AccountEntity) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AccountEntity) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *AccountEntity) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetName returns the Name field value
func (o *AccountEntity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountEntity) SetName(v string) {
	o.Name = v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *AccountEntity) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *AccountEntity) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *AccountEntity) SetFullName(v string) {
	o.FullName = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AccountEntity) GetStatus() AccountStatusEnum {
	if o == nil || o.Status == nil {
		var ret AccountStatusEnum
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetStatusOk() (*AccountStatusEnum, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AccountEntity) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given AccountStatusEnum and assigns it to the Status field.
func (o *AccountEntity) SetStatus(v AccountStatusEnum) {
	o.Status = &v
}

// GetCampaignOnNextScan returns the CampaignOnNextScan field value if set, zero value otherwise.
func (o *AccountEntity) GetCampaignOnNextScan() bool {
	if o == nil || o.CampaignOnNextScan == nil {
		var ret bool
		return ret
	}
	return *o.CampaignOnNextScan
}

// GetCampaignOnNextScanOk returns a tuple with the CampaignOnNextScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetCampaignOnNextScanOk() (*bool, bool) {
	if o == nil || o.CampaignOnNextScan == nil {
		return nil, false
	}
	return o.CampaignOnNextScan, true
}

// HasCampaignOnNextScan returns a boolean if a field has been set.
func (o *AccountEntity) HasCampaignOnNextScan() bool {
	if o != nil && o.CampaignOnNextScan != nil {
		return true
	}

	return false
}

// SetCampaignOnNextScan gets a reference to the given bool and assigns it to the CampaignOnNextScan field.
func (o *AccountEntity) SetCampaignOnNextScan(v bool) {
	o.CampaignOnNextScan = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *AccountEntity) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *AccountEntity) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *AccountEntity) SetVerified(v bool) {
	o.Verified = &v
}

// GetSourceInformation returns the SourceInformation field value
func (o *AccountEntity) GetSourceInformation() Sourceinformation {
	if o == nil {
		var ret Sourceinformation
		return ret
	}

	return o.SourceInformation
}

// GetSourceInformationOk returns a tuple with the SourceInformation field value
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetSourceInformationOk() (*Sourceinformation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceInformation, true
}

// SetSourceInformation sets field value
func (o *AccountEntity) SetSourceInformation(v Sourceinformation) {
	o.SourceInformation = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AccountEntity) GetMetadata() AccountMetadata {
	if o == nil || o.Metadata == nil {
		var ret AccountMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountEntity) GetMetadataOk() (*AccountMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *AccountEntity) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given AccountMetadata and assigns it to the Metadata field.
func (o *AccountEntity) SetMetadata(v AccountMetadata) {
	o.Metadata = &v
}

func (o AccountEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if true {
		toSerialize["sk"] = o.Sk
	}
	if o.EntityType != nil {
		toSerialize["entityType"] = o.EntityType
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.FullName != nil {
		toSerialize["fullName"] = o.FullName
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.CampaignOnNextScan != nil {
		toSerialize["campaignOnNextScan"] = o.CampaignOnNextScan
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	if true {
		toSerialize["sourceInformation"] = o.SourceInformation
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return json.Marshal(toSerialize)
}

type NullableAccountEntity struct {
	value *AccountEntity
	isSet bool
}

func (v NullableAccountEntity) Get() *AccountEntity {
	return v.value
}

func (v *NullableAccountEntity) Set(val *AccountEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountEntity(val *AccountEntity) *NullableAccountEntity {
	return &NullableAccountEntity{value: val, isSet: true}
}

func (v NullableAccountEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


