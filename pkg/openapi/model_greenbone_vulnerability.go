/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GreenboneVulnerability struct for GreenboneVulnerability
type GreenboneVulnerability struct {
	Company string `json:"company"`
	Uid string `json:"uid"`
	Type *string `json:"type,omitempty"`
	Group *string `json:"group,omitempty"`
	Entity string `json:"entity"`
	Score *OpportunityScore `json:"score,omitempty"`
	Resolution *OpportunityResolution `json:"resolution,omitempty"`
	Name string `json:"name"`
	Affected *string `json:"affected,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Description []string `json:"description"`
	Solution *string `json:"solution,omitempty"`
	SolutionType *string `json:"solution_type,omitempty"`
	Insight *string `json:"insight,omitempty"`
	References []string `json:"references"`
	Host string `json:"host"`
	Hostname *string `json:"hostname,omitempty"`
}

// NewGreenboneVulnerability instantiates a new GreenboneVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGreenboneVulnerability(company string, uid string, entity string, name string, description []string, references []string, host string) *GreenboneVulnerability {
	this := GreenboneVulnerability{}
	this.Company = company
	this.Uid = uid
	var type_ string = "greenbone_vulnerability"
	this.Type = &type_
	var group string = "vulnerabilities"
	this.Group = &group
	this.Entity = entity
	this.Name = name
	this.Description = description
	this.References = references
	this.Host = host
	return &this
}

// NewGreenboneVulnerabilityWithDefaults instantiates a new GreenboneVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGreenboneVulnerabilityWithDefaults() *GreenboneVulnerability {
	this := GreenboneVulnerability{}
	var type_ string = "greenbone_vulnerability"
	this.Type = &type_
	var group string = "vulnerabilities"
	this.Group = &group
	return &this
}

// GetCompany returns the Company field value
func (o *GreenboneVulnerability) GetCompany() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *GreenboneVulnerability) SetCompany(v string) {
	o.Company = v
}

// GetUid returns the Uid field value
func (o *GreenboneVulnerability) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *GreenboneVulnerability) SetUid(v string) {
	o.Uid = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GreenboneVulnerability) SetType(v string) {
	o.Type = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *GreenboneVulnerability) SetGroup(v string) {
	o.Group = &v
}

// GetEntity returns the Entity field value
func (o *GreenboneVulnerability) GetEntity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetEntityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *GreenboneVulnerability) SetEntity(v string) {
	o.Entity = v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetScore() OpportunityScore {
	if o == nil || o.Score == nil {
		var ret OpportunityScore
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetScoreOk() (*OpportunityScore, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given OpportunityScore and assigns it to the Score field.
func (o *GreenboneVulnerability) SetScore(v OpportunityScore) {
	o.Score = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetResolution() OpportunityResolution {
	if o == nil || o.Resolution == nil {
		var ret OpportunityResolution
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetResolutionOk() (*OpportunityResolution, bool) {
	if o == nil || o.Resolution == nil {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasResolution() bool {
	if o != nil && o.Resolution != nil {
		return true
	}

	return false
}

// SetResolution gets a reference to the given OpportunityResolution and assigns it to the Resolution field.
func (o *GreenboneVulnerability) SetResolution(v OpportunityResolution) {
	o.Resolution = &v
}

// GetName returns the Name field value
func (o *GreenboneVulnerability) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GreenboneVulnerability) SetName(v string) {
	o.Name = v
}

// GetAffected returns the Affected field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetAffected() string {
	if o == nil || o.Affected == nil {
		var ret string
		return ret
	}
	return *o.Affected
}

// GetAffectedOk returns a tuple with the Affected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetAffectedOk() (*string, bool) {
	if o == nil || o.Affected == nil {
		return nil, false
	}
	return o.Affected, true
}

// HasAffected returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasAffected() bool {
	if o != nil && o.Affected != nil {
		return true
	}

	return false
}

// SetAffected gets a reference to the given string and assigns it to the Affected field.
func (o *GreenboneVulnerability) SetAffected(v string) {
	o.Affected = &v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetSummary() string {
	if o == nil || o.Summary == nil {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetSummaryOk() (*string, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *GreenboneVulnerability) SetSummary(v string) {
	o.Summary = &v
}

// GetDescription returns the Description field value
func (o *GreenboneVulnerability) GetDescription() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetDescriptionOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description, true
}

// SetDescription sets field value
func (o *GreenboneVulnerability) SetDescription(v []string) {
	o.Description = v
}

// GetSolution returns the Solution field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetSolution() string {
	if o == nil || o.Solution == nil {
		var ret string
		return ret
	}
	return *o.Solution
}

// GetSolutionOk returns a tuple with the Solution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetSolutionOk() (*string, bool) {
	if o == nil || o.Solution == nil {
		return nil, false
	}
	return o.Solution, true
}

// HasSolution returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasSolution() bool {
	if o != nil && o.Solution != nil {
		return true
	}

	return false
}

// SetSolution gets a reference to the given string and assigns it to the Solution field.
func (o *GreenboneVulnerability) SetSolution(v string) {
	o.Solution = &v
}

// GetSolutionType returns the SolutionType field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetSolutionType() string {
	if o == nil || o.SolutionType == nil {
		var ret string
		return ret
	}
	return *o.SolutionType
}

// GetSolutionTypeOk returns a tuple with the SolutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetSolutionTypeOk() (*string, bool) {
	if o == nil || o.SolutionType == nil {
		return nil, false
	}
	return o.SolutionType, true
}

// HasSolutionType returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasSolutionType() bool {
	if o != nil && o.SolutionType != nil {
		return true
	}

	return false
}

// SetSolutionType gets a reference to the given string and assigns it to the SolutionType field.
func (o *GreenboneVulnerability) SetSolutionType(v string) {
	o.SolutionType = &v
}

// GetInsight returns the Insight field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetInsight() string {
	if o == nil || o.Insight == nil {
		var ret string
		return ret
	}
	return *o.Insight
}

// GetInsightOk returns a tuple with the Insight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetInsightOk() (*string, bool) {
	if o == nil || o.Insight == nil {
		return nil, false
	}
	return o.Insight, true
}

// HasInsight returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasInsight() bool {
	if o != nil && o.Insight != nil {
		return true
	}

	return false
}

// SetInsight gets a reference to the given string and assigns it to the Insight field.
func (o *GreenboneVulnerability) SetInsight(v string) {
	o.Insight = &v
}

// GetReferences returns the References field value
func (o *GreenboneVulnerability) GetReferences() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.References
}

// GetReferencesOk returns a tuple with the References field value
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetReferencesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.References, true
}

// SetReferences sets field value
func (o *GreenboneVulnerability) SetReferences(v []string) {
	o.References = v
}

// GetHost returns the Host field value
func (o *GreenboneVulnerability) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *GreenboneVulnerability) SetHost(v string) {
	o.Host = v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *GreenboneVulnerability) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GreenboneVulnerability) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *GreenboneVulnerability) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *GreenboneVulnerability) SetHostname(v string) {
	o.Hostname = &v
}

func (o GreenboneVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["company"] = o.Company
	}
	if true {
		toSerialize["uid"] = o.Uid
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if true {
		toSerialize["entity"] = o.Entity
	}
	if o.Score != nil {
		toSerialize["score"] = o.Score
	}
	if o.Resolution != nil {
		toSerialize["resolution"] = o.Resolution
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Affected != nil {
		toSerialize["affected"] = o.Affected
	}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.Solution != nil {
		toSerialize["solution"] = o.Solution
	}
	if o.SolutionType != nil {
		toSerialize["solution_type"] = o.SolutionType
	}
	if o.Insight != nil {
		toSerialize["insight"] = o.Insight
	}
	if true {
		toSerialize["references"] = o.References
	}
	if true {
		toSerialize["host"] = o.Host
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	return json.Marshal(toSerialize)
}

type NullableGreenboneVulnerability struct {
	value *GreenboneVulnerability
	isSet bool
}

func (v NullableGreenboneVulnerability) Get() *GreenboneVulnerability {
	return v.value
}

func (v *NullableGreenboneVulnerability) Set(val *GreenboneVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableGreenboneVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableGreenboneVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGreenboneVulnerability(val *GreenboneVulnerability) *NullableGreenboneVulnerability {
	return &NullableGreenboneVulnerability{value: val, isSet: true}
}

func (v NullableGreenboneVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGreenboneVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


