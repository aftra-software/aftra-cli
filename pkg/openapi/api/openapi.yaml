openapi: 3.0.2
info:
  description: The main api for Vikingr
  title: Web backend for Vikingr
  version: 0.1.0
servers:
- url: /
paths:
  /api/auth/callback:
    get:
      operationId: callback_api_auth_callback_get
      parameters:
      - explode: true
        in: cookie
        name: state
        required: true
        schema:
          title: State
          type: string
        style: form
      - explode: true
        in: cookie
        name: post_login
        required: false
        schema:
          default: ""
          title: Post Login
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Callback
      tags:
      - auth
  /api/auth/logout:
    get:
      operationId: logout_api_auth_logout_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
      summary: Logout
      tags:
      - auth
  /api/auth/myself:
    get:
      operationId: myself_api_auth_myself_get
      parameters:
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CognitoIdentity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Myself
      tags:
      - auth
  /api/auth/profile:
    get:
      operationId: profile_api_auth_profile_get
      parameters:
      - explode: true
        in: cookie
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessUser'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Profile
      tags:
      - auth
  /api/auth/signup:
    post:
      operationId: signup_api_auth_signup_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
      tags:
      - auth
  /api/auth/confirm/{email}/{code}:
    get:
      operationId: confirm_signup_api_auth_confirm__email___code__get
      parameters:
      - explode: false
        in: path
        name: email
        required: true
        schema:
          title: Email
          type: string
        style: simple
      - explode: false
        in: path
        name: code
        required: true
        schema:
          title: Code
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Confirm Signup
      tags:
      - auth
  /api/auth/login:
    post:
      operationId: login_api_auth_login_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseMfaChallenge'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
      tags:
      - auth
  /api/auth/software-mfa-setup:
    post:
      operationId: software_mfa_setup_api_auth_software_mfa_setup_post
      parameters:
      - explode: true
        in: cookie
        name: authorization
        required: true
        schema:
          title: Authorization
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFASetupChallengeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Software Mfa Setup
      tags:
      - auth
  /api/auth/mfa-challenge:
    post:
      operationId: mfa_challenge_api_auth_mfa_challenge_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFALoginChallengeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Mfa Challenge
      tags:
      - auth
  /api/auth/google:
    get:
      operationId: google_redirect_api_auth_google_get
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
      summary: Google Redirect
      tags:
      - auth
  /api/auth/forgot-password:
    post:
      operationId: forgot_password_api_auth_forgot_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailBody'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Forgot Password
      tags:
      - auth
  /api/auth/reset-password:
    post:
      operationId: reset_password_api_auth_reset_password_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Reset Password
      tags:
      - auth
  /api/companies/:
    get:
      operationId: List companies
      parameters:
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CompanyWithUserAccess'
                title: Response List Companies
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: List Companies
      tags:
      - companies
    post:
      operationId: Create company
      parameters:
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Create Company
      tags:
      - companies
  /api/companies/{company_pk}:
    get:
      operationId: Get company
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Company
      tags:
      - companies
  /api/companies/{company_pk}/scan/{asset_type}:
    post:
      operationId: scan_company_asset_api_companies__company_pk__scan__asset_type__post
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: asset_type
        required: true
        schema:
          title: Asset Type
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Scan Company Asset
      tags:
      - companies
  /api/companies/{company_pk}/score/{back_date}:
    get:
      operationId: Get company score
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: back_date
        required: true
        schema:
          $ref: '#/components/schemas/BackDates'
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HistoricalScores'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Get Score
      tags:
      - companies
  /api/companies/{company_pk}/:
    patch:
      operationId: Update company
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Update Company
      tags:
      - companies
  /api/companies/{company_pk}/services-summary:
    get:
      operationId: get_saas_services_api_companies__company_pk__services_summary_get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedSaasEnumerationReport'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Saas Services
      tags:
      - companies
  /api/companies/{company_pk}/api-tokens/:
    get:
      operationId: List API tokens
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MaskedToken'
                title: Response List Api Tokens
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Tokens
      tags:
      - api_tokens
    post:
      operationId: Create API token
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Create
      tags:
      - api_tokens
  /api/companies/{company_pk}/api-tokens/{token_uid}/:
    delete:
      operationId: Delete API token
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: token_uid
        required: true
        schema:
          title: Token Uid
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Delete Token
      tags:
      - api_tokens
  /api/companies/{company_pk}/suggestions/:
    get:
      operationId: list_suggestions_api_companies__company_pk__suggestions__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: entity_type
        required: false
        schema:
          $ref: '#/components/schemas/SuggestionEntityTypes'
        style: form
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Suggestion'
                title: Response List Suggestions Api Companies  Company Pk  Suggestions  Get
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Suggestions
      tags:
      - suggestions
  /api/companies/{company_pk}/suggestions/{suggestion_id}:
    delete:
      operationId: reject_suggestion_api_companies__company_pk__suggestions__suggestion_id__delete
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: suggestion_id
        required: true
        schema:
          title: Suggestion Id
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Reject Suggestion
      tags:
      - suggestions
    get:
      operationId: get_suggestion_api_companies__company_pk__suggestions__suggestion_id__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: suggestion_id
        required: true
        schema:
          title: Suggestion Id
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Suggestion'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Suggestion
      tags:
      - suggestions
    post:
      operationId: accept_suggestion_api_companies__company_pk__suggestions__suggestion_id__post
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: suggestion_id
        required: true
        schema:
          title: Suggestion Id
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Accept_Suggestion_Api_Companies__Company_Pk__Suggestions__Suggestion_Id__Post'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Accept Suggestion
      tags:
      - suggestions
  /api/companies/{company_pk}/opportunities/:
    get:
      operationId: list_opportunities_api_companies__company_pk__opportunities__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: resolution
        required: false
        schema:
          items:
            $ref: '#/components/schemas/OpportunityResolution'
          type: array
        style: form
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Opportunity'
                title: Response List Opportunities Api Companies  Company Pk  Opportunities  Get
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Opportunities
      tags:
      - opportunities
    post:
      operationId: create_opportunity_api_companies__company_pk__opportunities__post
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOpportunity'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Create Opportunity
      tags:
      - opportunities
  /api/companies/{company_pk}/opportunities/{opportunity_uid}/details/:
    get:
      operationId: Get opportunity details object
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: opportunity_uid
        required: true
        schema:
          title: Opportunity Uid
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OpportunityDetails'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Opportunity Details
      tags:
      - opportunities
  /api/companies/{company_pk}/opportunities/{opportunity_uid}/:
    post:
      operationId: Post update opportunity resolution
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: opportunity_uid
        required: true
        schema:
          title: Opportunity Uid
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResolutionUpdate'
        required: true
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Post Update Resolution
      tags:
      - opportunities
  /api/companies/{company_pk}/questions/:
    get:
      operationId: Get security questions
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyQuestionList'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Questions
      tags:
      - questions
  /api/companies/{company_pk}/questions/{question_uid}/:
    post:
      operationId: Post update answer
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: question_uid
        required: true
        schema:
          title: Question Uid
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyQuestionList'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Post Update Answer
      tags:
      - questions
  /api/companies/{parent_pk}/domains/{entity_pk}/verified:
    get:
      operationId: check domain verified
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerificationResult'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Check Domain Verified
      tags:
      - domains
  /api/companies/{parent_pk}/domains/upload:
    post:
      operationId: upload_domain_list_api_companies__parent_pk__domains_upload_post
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_domain_list_api_companies__parent_pk__domains_upload_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Upload Domain List
      tags:
      - domains
  /api/companies/{parent_pk}/domains:
    get:
      operationId: list company domains
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: marker
        required: false
        schema:
          title: Marker
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          title: Limit
          type: integer
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntityCollection_DomainEntity_'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Company Domains
      tags:
      - domains
    post:
      operationId: add domain to company
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Add Domain To Company
      tags:
      - domains
  /api/companies/{parent_pk}/domains/{entity_pk}:
    delete:
      operationId: remove company domain
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Remove Company Domain
      tags:
      - domains
    get:
      operationId: get company domain
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainWithAssets'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Company Domain
      tags:
      - domains
    put:
      operationId: update company domain
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Update Company Domain
      tags:
      - domains
  /api/companies/domains/whois:
    get:
      operationId: whois domain
      parameters:
      - explode: true
        in: query
        name: domain_name
        required: true
        schema:
          title: Domain Name
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Whois_Domain'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Whois Domain
      tags:
      - domains
  /api/companies/domains/screenshot:
    get:
      operationId: domain screenshot
      parameters:
      - explode: true
        in: query
        name: domain_name
        required: true
        schema:
          title: Domain Name
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainScreenshot'
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Domain Screenshot
      tags:
      - domains
  /api/domains/{parent_pk}/subdomains:
    get:
      operationId: list domain subdomains
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: marker
        required: false
        schema:
          title: Marker
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          title: Limit
          type: integer
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntityCollection_SubdomainEntity_'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Domain Subdomains
      tags:
      - domains subdomains
    post:
      operationId: add subdomain to domain
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Add Subdomain To Domain
      tags:
      - domains subdomains
  /api/domains/{parent_pk}/subdomains/{entity_pk}:
    delete:
      operationId: remove domain subdomain
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Subdomain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Subdomain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Remove Domain Subdomain
      tags:
      - domains subdomains
    get:
      operationId: get domain subdomain
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Subdomain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Subdomain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainWithAssets'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Domain Subdomain
      tags:
      - domains subdomains
    put:
      operationId: update domain subdomain
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Subdomain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Subdomain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
        required: true
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Update Domain Subdomain
      tags:
      - domains subdomains
  /api/companies/{parent_pk}/accounts/upload:
    post:
      operationId: upload_account_list_api_companies__parent_pk__accounts_upload_post
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_account_list_api_companies__parent_pk__accounts_upload_post'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Upload Account List
      tags:
      - accounts
  /api/companies/{parent_pk}/accounts/{entity_pk}/services:
    get:
      operationId: get_account_exposed_services_api_companies__parent_pk__accounts__entity_pk__services_get
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                title: Response Get Account Exposed Services Api Companies  Parent
                  Pk  Accounts  Entity Pk  Services Get
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Account Exposed Services
      tags:
      - accounts
  /api/companies/{parent_pk}/accounts/services-summary:
    get:
      operationId: get_account_exposed_services_api_companies__parent_pk__accounts_services_summary_get
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountServicesSummary'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Account Exposed Services
      tags:
      - accounts
  /api/companies/{parent_pk}/accounts/{entity_pk}/create-campaign:
    post:
      operationId: create_account_campaign_api_companies__parent_pk__accounts__entity_pk__create_campaign_post
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Create Account Campaign
      tags:
      - accounts
  /api/companies/{parent_pk}/accounts/{entity_pk}/verify:
    post:
      operationId: send_email_verification_api_companies__parent_pk__accounts__entity_pk__verify_post
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Send Email Verification
      tags:
      - accounts
  /api/companies/{parent_pk}/accounts/{entity_pk}/verify/{verification_secret}:
    get:
      operationId: verify_account_api_companies__parent_pk__accounts__entity_pk__verify__verification_secret__get
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: verification_secret
        required: true
        schema:
          title: Verification Secret
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Verify Account
      tags:
      - accounts
  /api/companies/{parent_pk}/accounts:
    get:
      operationId: list company accounts
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: present_in_service
        required: false
        schema:
          title: Present In Service
          type: string
        style: form
      - explode: true
        in: query
        name: marker
        required: false
        schema:
          title: Marker
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          title: Limit
          type: integer
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntityCollection_AccountEntity_'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Company Accounts
      tags:
      - accounts
    post:
      operationId: add account to company
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Add Account To Company
      tags:
      - accounts
  /api/companies/{parent_pk}/accounts/{entity_pk}:
    delete:
      operationId: remove company account
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Remove Company Account
      tags:
      - accounts
    get:
      operationId: get company account
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWithAssets'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Company Account
      tags:
      - accounts
    put:
      operationId: update company account
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Update Company Account
      tags:
      - accounts
  /api/companies/{parent_pk}/repositories:
    get:
      operationId: list company repositories
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: marker
        required: false
        schema:
          title: Marker
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          title: Limit
          type: integer
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntityCollection_RepositoryEntity_'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Company Repositories
      tags:
      - repositories
  /api/companies/{parent_pk}/repositories/{entity_pk}:
    delete:
      operationId: remove company repository
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Repository-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Repository-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Remove Company Repository
      tags:
      - repositories
    get:
      operationId: get company repository
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Repository-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Repository-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryWithAssets'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Company Repository
      tags:
      - repositories
  /api/integrations/crud/{parent_pk}:
    get:
      operationId: list company integrations
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: marker
        required: false
        schema:
          title: Marker
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          title: Limit
          type: integer
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntityCollection_IntegrationEntity_'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Company Integrations
      tags:
      - integrations
  /api/integrations/crud/{parent_pk}/{entity_pk}:
    delete:
      operationId: remove company integration
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Integration-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Integration-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Remove Company Integration
      tags:
      - integrations
    get:
      operationId: get company integration
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Integration-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Integration-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntegrationWithAssets'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Company Integration
      tags:
      - integrations
  /api/integrations/google-workspaces/{company_pk}:
    get:
      description: Initiate google workspaces integration
      operationId: google_workspaces_api_integrations_google_workspaces__company_pk__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Google Workspaces
      tags:
      - integrations
  /api/integrations/google-workspaces:
    get:
      description: Callback for google workspaces integration
      operationId: google_workspaces_callback_api_integrations_google_workspaces_get
      parameters:
      - explode: true
        in: query
        name: state
        required: true
        schema:
          title: State
          type: string
        style: form
      - explode: true
        in: query
        name: code
        required: true
        schema:
          title: Code
          type: string
        style: form
      - explode: true
        in: cookie
        name: google_workspaces_state
        required: true
        schema:
          title: Google Workspaces State
          type: string
        style: form
      - explode: true
        in: cookie
        name: google_workspaces_company
        required: true
        schema:
          title: Google Workspaces Company
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Google Workspaces Callback
      tags:
      - integrations
  /api/integrations/microsoft-azure/{company_pk}:
    get:
      description: Initiate microsoft azure AD integration
      operationId: microsoft_azure_ad_api_integrations_microsoft_azure__company_pk__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Microsoft Azure Ad
      tags:
      - integrations
  /api/integrations/microsoft-azure:
    get:
      description: Callback for microsoft azure AD integration
      operationId: microsoft_azure_ad_callback_api_integrations_microsoft_azure_get
      parameters:
      - explode: true
        in: cookie
        name: microsoft_azure_ad_flow
        required: true
        schema:
          title: Microsoft Azure Ad Flow
          type: string
        style: form
      - explode: true
        in: cookie
        name: microsoft_azure_ad_company
        required: true
        schema:
          title: Microsoft Azure Ad Company
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Microsoft Azure Ad Callback
      tags:
      - integrations
  /api/integrations/gitlab/{company_pk}:
    get:
      description: Initiate gitlab integration
      operationId: gitlab_api_integrations_gitlab__company_pk__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Gitlab
      tags:
      - integrations
  /api/integrations/gitlab:
    get:
      description: Callback for gitlab integration
      operationId: gitlab_callback_api_integrations_gitlab_get
      parameters:
      - explode: true
        in: query
        name: state
        required: true
        schema:
          title: State
          type: string
        style: form
      - explode: true
        in: cookie
        name: gitlab_state
        required: true
        schema:
          title: Gitlab State
          type: string
        style: form
      - explode: true
        in: cookie
        name: gitlab_company
        required: true
        schema:
          title: Gitlab Company
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Gitlab Callback
      tags:
      - integrations
  /api/integrations/github/{company_pk}:
    get:
      description: Initiate github integration
      operationId: github_api_integrations_github__company_pk__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Github
      tags:
      - integrations
  /api/integrations/github:
    get:
      description: Callback for github integration
      operationId: github_callback_api_integrations_github_get
      parameters:
      - explode: true
        in: query
        name: installation_id
        required: true
        schema:
          title: Installation Id
          type: string
        style: form
      - explode: true
        in: cookie
        name: github_company
        required: true
        schema:
          title: Github Company
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Github Callback
      tags:
      - integrations
  /api/integrations/bitbucket/{company_pk}:
    get:
      description: Initiate bitbucket integration
      operationId: bitbucket_api_integrations_bitbucket__company_pk__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Bitbucket
      tags:
      - integrations
  /api/integrations/bitbucket:
    get:
      description: Callback for bitbucket integration
      operationId: bitbucket_callback_api_integrations_bitbucket_get
      parameters:
      - explode: true
        in: query
        name: state
        required: true
        schema:
          title: State
          type: string
        style: form
      - explode: true
        in: cookie
        name: bitbucket_state
        required: true
        schema:
          title: Bitbucket State
          type: string
        style: form
      - explode: true
        in: cookie
        name: bitbucket_company
        required: true
        schema:
          title: Bitbucket Company
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Bitbucket Callback
      tags:
      - integrations
  /api/integrations/aws/{company_pk}:
    get:
      description: Initiate aws integration
      operationId: aws_api_integrations_aws__company_pk__get
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: parent_pk
        required: false
        schema:
          title: Parent Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Aws
      tags:
      - integrations
  /api/integrations/aws/{company_pk}/{user_pk}:
    post:
      description: Callback for aws integration
      operationId: aws_callback_api_integrations_aws__company_pk___user_pk__post
      parameters:
      - explode: false
        in: path
        name: company_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: user_pk
        required: true
        schema:
          example: User-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^User-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: User Pk
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSRoute53IntegrationCallbackData'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Aws Callback
      tags:
      - integrations
  /api/companies/{parent_pk}/members/:
    get:
      operationId: Get company members
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: company_pk
        required: false
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCompanyAccessEntity'
                title: Response Get Company Members
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Company Members
      tags:
      - members
    post:
      operationId: Send company invite
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: company_pk
        required: false
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invite'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Create And Send Invite
      tags:
      - members
  /api/companies/{parent_pk}/members/{user_pk}/:
    delete:
      operationId: Delete company member
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: user_pk
        required: true
        schema:
          example: User-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^User-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: User Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: company_pk
        required: false
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Delete Company Member
      tags:
      - members
    put:
      operationId: Update member permission
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: user_pk
        required: true
        schema:
          example: User-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^User-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: User Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: company_pk
        required: false
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Company Pk
          type: string
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTypeUpdate'
        required: true
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Update Member Permission
      tags:
      - members
  /api/companies/{parent_pk}/invites/{invite_pk}/:
    get:
      operationId: Add user to company
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: invite_pk
        required: true
        schema:
          example: Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Invite Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      summary: Add User To Company
      tags:
      - invites
  /api/companies/{parent_pk}/invites:
    get:
      operationId: list company invites
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: marker
        required: false
        schema:
          title: Marker
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 1000
          title: Limit
          type: integer
        style: form
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEntityCollection_InviteEntity_'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: List Company Invites
      tags:
      - invites
    post:
      operationId: add invite to company
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invite'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Add Invite To Company
      tags:
      - invites
  /api/companies/{parent_pk}/invites/{entity_pk}:
    delete:
      operationId: remove company invite
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Remove Company Invite
      tags:
      - invites
    get:
      operationId: get company invite
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteWithAssets'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Get Company Invite
      tags:
      - invites
    put:
      operationId: update company invite
      parameters:
      - explode: false
        in: path
        name: parent_pk
        required: true
        schema:
          example: Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Parent Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_pk
        required: true
        schema:
          example: Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Entity Pk
          type: string
        style: simple
      - explode: true
        in: cookie
        name: identity
        required: false
        schema:
          title: Identity
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invite'
        required: true
      responses:
        "204":
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - HTTPBearer: []
      - APIKeyHeader: []
      summary: Update Company Invite
      tags:
      - invites
  /api/account-campaigns/{campaign_pk}/campaign/{campaign_sk}/view:
    get:
      operationId: view_account_campaign_api_account_campaigns__campaign_pk__campaign__campaign_sk__view_get
      parameters:
      - explode: false
        in: path
        name: campaign_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: campaign_sk
        required: true
        schema:
          example: AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Sk
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: View Account Campaign
      tags:
      - account-campaigns
  /api/account-campaigns/{campaign_pk}/campaign/{campaign_sk}:
    get:
      operationId: get_account_campaign_api_account_campaigns__campaign_pk__campaign__campaign_sk__get
      parameters:
      - explode: false
        in: path
        name: campaign_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: campaign_sk
        required: true
        schema:
          example: AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Sk
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountCampaignEntity'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Account Campaign
      tags:
      - account-campaigns
    post:
      operationId: resolve_account_campaign_api_account_campaigns__campaign_pk__campaign__campaign_sk__post
      parameters:
      - explode: false
        in: path
        name: campaign_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: campaign_sk
        required: true
        schema:
          example: AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Sk
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountResolvePayload'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Resolve Account Campaign
      tags:
      - account-campaigns
  /api/account-campaigns/{campaign_pk}/campaign/{campaign_sk}/leaks-info:
    get:
      operationId: get_account_campaign_leaks_info_api_account_campaigns__campaign_pk__campaign__campaign_sk__leaks_info_get
      parameters:
      - explode: false
        in: path
        name: campaign_pk
        required: true
        schema:
          example: Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Pk
          type: string
        style: simple
      - explode: false
        in: path
        name: campaign_sk
        required: true
        schema:
          example: AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5
          pattern: "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$"
          title: Campaign Sk
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeakInfo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Account Campaign Leaks Info
      tags:
      - account-campaigns
  /api/env:
    get:
      operationId: Get environment info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentInfo'
          description: Successful Response
      summary: Env
      tags:
      - environment
components:
  schemas:
    AWSIntegration:
      properties:
        source_lookup:
          default: ""
          title: Source Lookup
          type: string
        type:
          default: integration.aws
          enum:
          - integration.aws
          title: Type
          type: string
      title: AWSIntegration
      type: object
    AWSRoute53IntegrationCallbackData:
      example:
        roleArn: roleArn
      properties:
        roleArn:
          title: Rolearn
          type: string
      required:
      - roleArn
      title: AWSRoute53IntegrationCallbackData
      type: object
    AccessTypeUpdate:
      example:
        access_type: null
      properties:
        access_type:
          $ref: '#/components/schemas/CompanyAccessEnum'
      required:
      - access_type
      title: AccessTypeUpdate
      type: object
    AccessUser:
      example:
        sub: sub
      properties:
        sub:
          title: Sub
          type: string
      required:
      - sub
      title: AccessUser
      type: object
    Account:
      example:
        campaignOnNextScan: false
        name: name
        fullName: fullName
        status: ""
      properties:
        name:
          title: Name
          type: string
        fullName:
          default: ""
          title: Fullname
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatusEnum'
        campaignOnNextScan:
          default: false
          title: Campaignonnextscan
          type: boolean
      required:
      - name
      title: Account
      type: object
    AccountCampaignConclusion:
      description: An enumeration.
      enum:
      - CREATED
      - VIEWED
      - FINISHED
      title: AccountCampaignConclusion
      type: string
    AccountCampaignEntity:
      example:
        conclusion: ""
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        sk: sk
        name: name
        pk: pk
        services:
        - services
        - services
        riskScore: 0.8008281904610115
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        name:
          title: Name
          type: string
        services:
          items:
            type: string
          title: Services
          type: array
        riskScore:
          title: Riskscore
          type: number
        conclusion:
          allOf:
          - $ref: '#/components/schemas/AccountCampaignConclusion'
      required:
      - name
      - pk
      - riskScore
      - services
      - sk
      title: AccountCampaignEntity
      type: object
    AccountDiscoverability:
      properties:
        company:
          title: Company
          type: string
        uid:
          default: account_discoverability
          enum:
          - account_discoverability
          title: Uid
          type: string
        type:
          default: account_discoverability
          enum:
          - account_discoverability
          title: Type
          type: string
        group:
          default: human_exposure
          enum:
          - human_exposure
          title: Group
          type: string
        entity:
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        accounts_count:
          title: Accounts Count
          type: integer
        accounts_ratio:
          title: Accounts Ratio
          type: number
        accounts_by_source:
          additionalProperties:
            type: integer
          title: Accounts By Source
          type: object
      required:
      - accounts_by_source
      - accounts_count
      - accounts_ratio
      - company
      title: AccountDiscoverability
      type: object
    AccountEntity:
      example:
        metadata:
          serviceRunningCount: ""
          campaignConclusion: null
          riskScore: 0.8008281904610115
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        campaignOnNextScan: false
        sk: sk
        name: name
        verified: false
        fullName: fullName
        sourceInformation: null
        pk: pk
        updated: 2000-01-23T04:56:07.000+00:00
        status: ""
      properties:
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        name:
          title: Name
          type: string
        fullName:
          default: ""
          title: Fullname
          type: string
        status:
          allOf:
          - $ref: '#/components/schemas/AccountStatusEnum'
        campaignOnNextScan:
          default: false
          title: Campaignonnextscan
          type: boolean
        verified:
          default: false
          title: Verified
          type: boolean
        sourceInformation:
          $ref: '#/components/schemas/Sourceinformation'
        metadata:
          $ref: '#/components/schemas/AccountMetadata'
      required:
      - name
      - pk
      - sk
      - sourceInformation
      title: AccountEntity
      type: object
    AccountMetadata:
      example:
        serviceRunningCount: ""
        campaignConclusion: null
        riskScore: 0.8008281904610115
      properties:
        serviceRunningCount:
          allOf:
          - $ref: '#/components/schemas/ServiceRunningCount'
          title: Servicerunningcount
        riskScore:
          default: 0
          title: Riskscore
          type: number
        campaignConclusion:
          $ref: '#/components/schemas/AccountCampaignConclusion'
      title: AccountMetadata
      type: object
    AccountResolvePayload:
      example:
        acknowledge: true
      properties:
        acknowledge:
          title: Acknowledge
          type: boolean
      required:
      - acknowledge
      title: AccountResolvePayload
      type: object
    AccountServicesSummary:
      example:
        pk: pk
        type: account-services-summary
        updated: 2000-01-23T04:56:07.000+00:00
        serviceCounts:
          key: 0
      properties:
        pk:
          title: Pk
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        type:
          default: account-services-summary
          enum:
          - account-services-summary
          title: Type
          type: string
        serviceCounts:
          additionalProperties:
            type: integer
          title: Servicecounts
          type: object
      required:
      - pk
      - serviceCounts
      title: AccountServicesSummary
      type: object
    AccountStatusEnum:
      description: An enumeration.
      enum:
      - current
      - archived
      - system
      title: AccountStatusEnum
      type: string
    AccountWithAssets:
      example:
        assets:
          entities:
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          marker: marker
        entity:
          metadata:
            serviceRunningCount: ""
            campaignConclusion: null
            riskScore: 0.8008281904610115
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          campaignOnNextScan: false
          sk: sk
          name: name
          verified: false
          fullName: fullName
          sourceInformation: null
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
      properties:
        assets:
          $ref: '#/components/schemas/PaginatedEntityCollection_MetaEntity_'
        entity:
          $ref: '#/components/schemas/AccountEntity'
      required:
      - assets
      - entity
      title: AccountWithAssets
      type: object
    AggregatedSaasEnumerationReport:
      example:
        pk: pk
        services:
        - services
        - services
        type: aggregated-saas-enumeration
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        pk:
          title: Pk
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        type:
          default: aggregated-saas-enumeration
          enum:
          - aggregated-saas-enumeration
          title: Type
          type: string
        services:
          default: []
          items:
            type: string
          title: Services
          type: array
      required:
      - pk
      title: AggregatedSaasEnumerationReport
      type: object
    AmassEnum:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: scan.amass-enum
          enum:
          - scan.amass-enum
          title: Type
          type: string
      required:
      - source_lookup
      title: AmassEnum
      type: object
    AmassIntel:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: scan.amass-intel
          enum:
          - scan.amass-intel
          title: Type
          type: string
      required:
      - source_lookup
      title: AmassIntel
      type: object
    AnswerUpdate:
      example:
        answer: answer
      properties:
        answer:
          title: Answer
          type: string
      required:
      - answer
      title: AnswerUpdate
      type: object
    BackDates:
      description: An enumeration.
      enum:
      - 1w
      - 1m
      - 3m
      - 6m
      - 1y
      title: BackDates
      type: string
    BitBucketIntegration:
      properties:
        source_lookup:
          default: ""
          title: Source Lookup
          type: string
        type:
          default: integration.bitbucket
          enum:
          - integration.bitbucket
          title: Type
          type: string
      title: BitBucketIntegration
      type: object
    Body_upload_account_list_api_companies__parent_pk__accounts_upload_post:
      properties:
        account_list:
          format: binary
          title: Account List
          type: string
      required:
      - account_list
      title: Body_upload_account_list_api_companies__parent_pk__accounts_upload_post
      type: object
    Body_upload_domain_list_api_companies__parent_pk__domains_upload_post:
      properties:
        domain_list:
          format: binary
          title: Domain List
          type: string
      required:
      - domain_list
      title: Body_upload_domain_list_api_companies__parent_pk__domains_upload_post
      type: object
    BurpVulnerability:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: burp_vulnerability
          enum:
          - burp_vulnerability
          title: Type
          type: string
        group:
          default: vulnerabilities
          enum:
          - vulnerabilities
          title: Group
          type: string
        entity:
          pattern: "^(Sub)?[Dd]omain-"
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        type_index:
          title: Type Index
          type: string
        description:
          title: Description
          type: string
        origin:
          title: Origin
          type: string
        path:
          title: Path
          type: string
        background:
          title: Background
          type: string
        remediation:
          title: Remediation
          type: string
      required:
      - background
      - company
      - entity
      - name
      - origin
      - path
      - type_index
      - uid
      title: BurpVulnerability
      type: object
    ChallengeTypes:
      description: An enumeration.
      enum:
      - MFA_SETUP
      - SOFTWARE_TOKEN_MFA
      title: ChallengeTypes
      type: string
    CognitoIdentity:
      example:
        sub: sub
        name: name
        email: email
      properties:
        sub:
          title: Sub
          type: string
        name:
          title: Name
          type: string
        email:
          title: Email
          type: string
      required:
      - email
      - name
      - sub
      title: CognitoIdentity
      type: object
    Company:
      example:
        vulnScanFrequency: ""
        mainContact: mainContact
        website: https://openapi-generator.tech
        employeeCountIt: 6
        name: name
        employeeCount: 0
        sector: null
      properties:
        name:
          title: Name
          type: string
        mainContact:
          title: Maincontact
          type: string
        website:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Website
          type: string
        employeeCount:
          default: 1
          title: Employeecount
          type: integer
        employeeCountIt:
          default: 1
          title: Employeecountit
          type: integer
        sector:
          $ref: '#/components/schemas/CompanySector'
        vulnScanFrequency:
          allOf:
          - $ref: '#/components/schemas/ScanFrequency'
      required:
      - mainContact
      - name
      - website
      title: Company
      type: object
    CompanyAccessEnum:
      description: An enumeration.
      enum:
      - admin
      - read
      - token
      title: CompanyAccessEnum
      type: string
    CompanyEntity:
      example:
        vulnScanFrequency: ""
        website: https://openapi-generator.tech
        metadata: "{}"
        employeeCountIt: 6
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        employeeCount: 0
        mainContact: mainContact
        name: name
        sk: sk
        pk: pk
        sector: null
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          title: Name
          type: string
        mainContact:
          title: Maincontact
          type: string
        website:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Website
          type: string
        employeeCount:
          default: 1
          title: Employeecount
          type: integer
        employeeCountIt:
          default: 1
          title: Employeecountit
          type: integer
        sector:
          $ref: '#/components/schemas/CompanySector'
        vulnScanFrequency:
          allOf:
          - $ref: '#/components/schemas/ScanFrequency'
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        metadata:
          title: Metadata
          type: object
      required:
      - mainContact
      - name
      - pk
      - sk
      - website
      title: CompanyEntity
      type: object
    CompanyQuestionList:
      example:
        passwordScreen: ""
        vdp: ""
        mfa: ""
        passwordManager: ""
        vulnScan: ""
        pk: pk
        disclosurePolicy: ""
        type: company-questions
        vip: ""
        updated: 2000-01-23T04:56:07.000+00:00
        passwordLength: ""
      properties:
        pk:
          title: Pk
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        type:
          default: company-questions
          enum:
          - company-questions
          title: Type
          type: string
        mfa:
          allOf:
          - $ref: '#/components/schemas/MFAAnswer'
        passwordLength:
          allOf:
          - $ref: '#/components/schemas/PasswordLengthAnswer'
        passwordManager:
          allOf:
          - $ref: '#/components/schemas/PasswordManagerAnswer'
        passwordScreen:
          allOf:
          - $ref: '#/components/schemas/PasswordScreenAnswer'
        disclosurePolicy:
          allOf:
          - $ref: '#/components/schemas/DisclosurePolicyAnswer'
        vdp:
          allOf:
          - $ref: '#/components/schemas/VDPAnswer'
        vip:
          allOf:
          - $ref: '#/components/schemas/VIPAnswer'
        vulnScan:
          allOf:
          - $ref: '#/components/schemas/VulnScanAnswer'
      required:
      - pk
      title: CompanyQuestionList
      type: object
    CompanyScore:
      example:
        date: 2000-01-23
        total: 8
        breakdown:
          key: 60
        company: company
        type: COMPANY_SCORE
        ttl: 1.4658129805029452
      properties:
        type:
          default: COMPANY_SCORE
          enum:
          - COMPANY_SCORE
          title: Type
          type: string
        company:
          pattern: ^Company-
          title: Company
          type: string
        date:
          format: date
          title: Date
          type: string
        total:
          maximum: 100.0
          minimum: 0.0
          title: Total
          type: integer
        breakdown:
          additionalProperties:
            maximum: 100.0
            minimum: 0.0
            type: integer
          title: Breakdown
          type: object
        ttl:
          title: Ttl
          type: number
      required:
      - breakdown
      - company
      - total
      title: CompanyScore
      type: object
    CompanySector:
      description: An enumeration.
      enum:
      - ACCOUNTING
      - AIRLINES/AVIATION
      - ALTERNATIVE_DISPUTE_RESOLUTION
      - ALTERNATIVE_MEDICINE
      - ANIMATION
      - APPAREL_AND_FASHION
      - ARCHITECTURE_AND_PLANNING
      - ARTS_AND_CRAFTS
      - AUTOMOTIVE
      - AVIATION_AND_AEROSPACE
      - BANKING
      - BIOTECHNOLOGY
      - BROADCAST_MEDIA
      - BUILDING_MATERIALS
      - BUSINESS_SUPPLIES_AND_EQUIPMENT
      - CAPITAL_MARKETS
      - CHEMICALS
      - CIVIC_AND_SOCIAL_ORGANIZATION
      - CIVIL_ENGINEERING
      - COMMERCIAL_REAL_ESTATE
      - COMPUTER_AND_NETWORK_SECURITY
      - COMPUTER_GAMES
      - COMPUTER_HARDWARE
      - COMPUTER_NETWORKING
      - COMPUTER_SOFTWARE
      - CONSTRUCTION
      - CONSUMER_ELECTRONICS
      - CONSUMER_GOODS
      - CONSUMER_SERVICES
      - COSMETICS
      - DAIRY
      - DEFENSE_AND_SPACE
      - DESIGN
      - EDUCATION_MANAGEMENT
      - E-LEARNING
      - ELECTRICAL_AND_ELECTRONIC_MANUFACTURING
      - ENTERTAINMENT
      - ENVIRONMENTAL_SERVICES
      - EVENTS_SERVICES
      - EXECUTIVE_OFFICE
      - FACILITIES_SERVICES
      - FARMING
      - FINANCIAL_SERVICES
      - FINE_ART
      - FISHERY
      - FOOD_AND_BEVERAGES
      - FOOD_PRODUCTION
      - FUNDRAISING
      - FURNITURE
      - GAMBLING_AND_CASINOS
      - GLASS_CERAMICS_AND_CONCRETE
      - GOVERNMENT_ADMINISTRATION
      - GOVERNMENT_RELATIONS
      - GRAPHIC_DESIGN
      - HEALTH_WELLNESS_AND_FITNESS
      - HIGHER_EDUCATION
      - HOSPITAL_AND_HEALTH_CARE
      - HOSPITALITY
      - HUMAN_RESOURCES
      - IMPORT_AND_EXPORT
      - INDIVIDUAL_AND_FAMILY_SERVICES
      - INDUSTRIAL_AUTOMATION
      - INFORMATION_SERVICES
      - INFORMATION_TECHNOLOGY_AND_SERVICES
      - INSURANCE
      - INTERNATIONAL_AFFAIRS
      - INTERNATIONAL_TRADE_AND_DEVELOPMENT
      - INTERNET
      - INVESTMENT_BANKING/VENTURE
      - INVESTMENT_MANAGEMENT
      - JUDICIARY
      - LAW_ENFORCEMENT
      - LAW_PRACTICE
      - LEGAL_SERVICES
      - LEGISLATIVE_OFFICE
      - LEISURE_AND_TRAVEL
      - LIBRARIES
      - LOGISTICS_AND_SUPPLY_CHAIN
      - LUXURY_GOODS_AND_JEWELRY
      - MACHINERY
      - MANAGEMENT_CONSULTING
      - MARITIME
      - MARKETING_AND_ADVERTISING
      - MARKET_RESEARCH
      - MECHANICAL_OR_INDUSTRIAL_ENGINEERING
      - MEDIA_PRODUCTION
      - MEDICAL_DEVICE
      - MEDICAL_PRACTICE
      - MENTAL_HEALTH_CARE
      - MILITARY
      - MINING_AND_METALS
      - MOTION_PICTURES_AND_FILM
      - MUSEUMS_AND_INSTITUTIONS
      - MUSIC
      - NANOTECHNOLOGY
      - NEWSPAPERS
      - NONPROFIT_ORGANIZATION_MANAGEMENT
      - OIL_AND_ENERGY
      - ONLINE_PUBLISHING
      - OUTSOURCING/OFFSHORING
      - PACKAGE/FREIGHT_DELIVERY
      - PACKAGING_AND_CONTAINERS
      - PAPER_AND_FOREST_PRODUCTS
      - PERFORMING_ARTS
      - PHARMACEUTICALS
      - PHILANTHROPY
      - PHOTOGRAPHY
      - PLASTICS
      - POLITICAL_ORGANIZATION
      - PRIMARY/SECONDARY
      - PRINTING
      - PROFESSIONAL_TRAINING
      - PROGRAM_DEVELOPMENT
      - PUBLIC_POLICY
      - PUBLIC_RELATIONS
      - PUBLIC_SAFETY
      - PUBLISHING
      - RAILROAD_MANUFACTURE
      - RANCHING
      - REAL_ESTATE
      - RECREATIONAL
      - FACILITIES_AND_SERVICES
      - RELIGIOUS_INSTITUTIONS
      - RENEWABLES_AND_ENVIRONMENT
      - RESEARCH
      - RESTAURANTS
      - RETAIL
      - SECURITY_AND_INVESTIGATIONS
      - SEMICONDUCTORS
      - SHIPBUILDING
      - SPORTING_GOODS
      - SPORTS
      - STAFFING_AND_RECRUITING
      - SUPERMARKETS
      - TELECOMMUNICATIONS
      - TEXTILES
      - THINK_TANKS
      - TOBACCO
      - TRANSLATION_AND_LOCALIZATION
      - TRANSPORTATION/TRUCKING/RAILROAD
      - UTILITIES
      - VENTURE_CAPITAL
      - VETERINARY
      - WAREHOUSING
      - WHOLESALE
      - WINE_AND_SPIRITS
      - WIRELESS
      - WRITING_AND_EDITING
      title: CompanySector
      type: string
    CompanySectorScore:
      example:
        sector_mean: 56
        by_group:
          key: 23
      properties:
        sector_mean:
          maximum: 100.0
          minimum: 0.0
          title: Sector Mean
          type: integer
        by_group:
          additionalProperties:
            maximum: 100.0
            minimum: 0.0
            type: integer
          title: By Group
          type: object
      required:
      - by_group
      - sector_mean
      title: CompanySectorScore
      type: object
    CompanyUpdate:
      example:
        vulnScanFrequency: null
        mainContact: mainContact
        website: https://openapi-generator.tech
        employeeCountIt: 6
        employeeCount: 0
        sector: null
      properties:
        mainContact:
          title: Maincontact
          type: string
        website:
          format: uri
          maxLength: 2083
          minLength: 1
          title: Website
          type: string
        employeeCount:
          title: Employeecount
          type: integer
        employeeCountIt:
          title: Employeecountit
          type: integer
        sector:
          $ref: '#/components/schemas/CompanySector'
        vulnScanFrequency:
          $ref: '#/components/schemas/ScanFrequency'
      title: CompanyUpdate
      type: object
    CompanyWithUserAccess:
      example:
        access_type: null
        company:
          vulnScanFrequency: ""
          website: https://openapi-generator.tech
          metadata: "{}"
          employeeCountIt: 6
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          employeeCount: 0
          mainContact: mainContact
          name: name
          sk: sk
          pk: pk
          sector: null
          updated: 2000-01-23T04:56:07.000+00:00
      properties:
        company:
          $ref: '#/components/schemas/CompanyEntity'
        access_type:
          $ref: '#/components/schemas/CompanyAccessEnum'
      required:
      - access_type
      - company
      title: CompanyWithUserAccess
      type: object
    CreateOpportunity:
      example:
        uid: uid
        score: null
        name: name
        details:
          key: details
      properties:
        uid:
          title: Uid
          type: string
        name:
          title: Name
          type: string
        details:
          additionalProperties:
            type: string
          title: Details
          type: object
        score:
          $ref: '#/components/schemas/OpportunityScore'
      required:
      - details
      - name
      - score
      - uid
      title: CreateOpportunity
      type: object
    CreateToken:
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: CreateToken
      type: object
    DNSScan:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: dns.whois
          enum:
          - dns.whois
          title: Type
          type: string
      required:
      - source_lookup
      title: DNSScan
      type: object
    DNSScanReverse:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: dns.reverse-whois
          enum:
          - dns.reverse-whois
          title: Type
          type: string
      required:
      - source_lookup
      title: DNSScanReverse
      type: object
    DisclosurePolicyAnswer:
      description: An enumeration.
      enum:
      - "yes"
      - "no"
      title: DisclosurePolicyAnswer
      type: string
    Domain:
      example:
        name: name
        activeScanFrequency: ""
      properties:
        name:
          title: Name
          type: string
        activeScanFrequency:
          allOf:
          - $ref: '#/components/schemas/ScanFrequency'
      required:
      - name
      title: Domain
      type: object
    DomainEntity:
      example:
        metadata:
          subdomainCount: 0
          saasServices:
          - saasServices
          - saasServices
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        sk: sk
        activeScanFrequency: ""
        sourceInformation: null
        pk: pk
        adminVerified: false
        txtRecord: txtRecord
        updated: 2000-01-23T04:56:07.000+00:00
        dnsVerified: false
      properties:
        name:
          title: Name
          type: string
        activeScanFrequency:
          allOf:
          - $ref: '#/components/schemas/ScanFrequency'
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        dnsVerified:
          default: false
          title: Dnsverified
          type: boolean
        adminVerified:
          default: false
          title: Adminverified
          type: boolean
        metadata:
          $ref: '#/components/schemas/DomainMetadata'
        txtRecord:
          title: Txtrecord
          type: string
        sourceInformation:
          $ref: '#/components/schemas/Sourceinformation'
      required:
      - name
      - pk
      - sk
      - sourceInformation
      title: DomainEntity
      type: object
    DomainMetadata:
      example:
        subdomainCount: 0
        saasServices:
        - saasServices
        - saasServices
      properties:
        subdomainCount:
          default: 0
          title: Subdomaincount
          type: integer
        saasServices:
          default: []
          items:
            type: string
          title: Saasservices
          type: array
      title: DomainMetadata
      type: object
    DomainScreenshot:
      example:
        https_screenshot: https_screenshot
        http_screenshot: http_screenshot
      properties:
        http_screenshot:
          title: Http Screenshot
          type: string
        https_screenshot:
          title: Https Screenshot
          type: string
      title: DomainScreenshot
      type: object
    DomainWithAssets:
      example:
        assets:
          entities:
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          marker: marker
        entity:
          metadata:
            subdomainCount: 0
            saasServices:
            - saasServices
            - saasServices
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          activeScanFrequency: ""
          sourceInformation: null
          pk: pk
          adminVerified: false
          txtRecord: txtRecord
          updated: 2000-01-23T04:56:07.000+00:00
          dnsVerified: false
      properties:
        assets:
          $ref: '#/components/schemas/PaginatedEntityCollection_MetaEntity_'
        entity:
          $ref: '#/components/schemas/DomainEntity'
      required:
      - assets
      - entity
      title: DomainWithAssets
      type: object
    EmailBody:
      example:
        email: email
      properties:
        email:
          format: email
          title: Email
          type: string
      required:
      - email
      title: EmailBody
      type: object
    EnvironmentInfo:
      example:
        wasCidrs:
        - wasCidrs
        - wasCidrs
        vulnCidrs:
        - vulnCidrs
        - vulnCidrs
        externalIps:
        - externalIps
        - externalIps
        env: env
      properties:
        externalIps:
          items:
            type: string
          title: Externalips
          type: array
        wasCidrs:
          items:
            type: string
          title: Wascidrs
          type: array
        vulnCidrs:
          items:
            type: string
          title: Vulncidrs
          type: array
        env:
          title: Env
          type: string
      required:
      - env
      - externalIps
      - vulnCidrs
      - wasCidrs
      title: EnvironmentInfo
      type: object
    ExposedFileSecrets:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: exposed_secret
          enum:
          - exposed_secret
          title: Type
          type: string
        group:
          default: vulnerabilities
          enum:
          - vulnerabilities
          title: Group
          type: string
        entity:
          pattern: ^Repository-
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        filename:
          title: Filename
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/Secret'
          title: Secrets
          type: array
      required:
      - company
      - entity
      - filename
      - name
      - secrets
      - uid
      title: ExposedFileSecrets
      type: object
    ExposedServices:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: exposed_service
          enum:
          - exposed_service
          title: Type
          type: string
        group:
          default: human_exposure
          enum:
          - human_exposure
          title: Group
          type: string
        entity:
          pattern: ^Account-
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        exposure:
          items:
            $ref: '#/components/schemas/Exposure'
          type: array
      required:
      - company
      - entity
      - exposure
      - name
      - uid
      title: ExposedServices
      type: object
    Exposure:
      description: An enumeration.
      enum:
      - too-many-services
      - high-risk-services
      title: Exposure
      type: string
    GitLabIntegration:
      properties:
        source_lookup:
          default: ""
          title: Source Lookup
          type: string
        type:
          default: integration.gitlab
          enum:
          - integration.gitlab
          title: Type
          type: string
      title: GitLabIntegration
      type: object
    GitRepo:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: scan.git
          enum:
          - scan.git
          title: Type
          type: string
      required:
      - source_lookup
      title: GitRepo
      type: object
    GithubIntegration:
      properties:
        source_lookup:
          default: ""
          title: Source Lookup
          type: string
        type:
          default: integration.github
          enum:
          - integration.github
          title: Type
          type: string
      title: GithubIntegration
      type: object
    GlobalStats:
      example:
        date: 2000-01-23
        by_sector:
          key:
            sector_mean: 56
            by_group:
              key: 23
        global_mean: 59
        company: GLOBAL-STATS
        type: GLOBAL_STATS
      properties:
        type:
          default: GLOBAL_STATS
          enum:
          - GLOBAL_STATS
          title: Type
          type: string
        company:
          default: GLOBAL-STATS
          enum:
          - GLOBAL-STATS
          title: Company
          type: string
        date:
          format: date
          title: Date
          type: string
        global_mean:
          maximum: 100.0
          minimum: 0.0
          title: Global Mean
          type: integer
        by_sector:
          additionalProperties:
            $ref: '#/components/schemas/CompanySectorScore'
          title: By Sector
          type: object
      required:
      - by_sector
      - date
      - global_mean
      title: GlobalStats
      type: object
    GoogleIntegration:
      properties:
        source_lookup:
          default: ""
          title: Source Lookup
          type: string
        type:
          default: integration.google
          enum:
          - integration.google
          title: Type
          type: string
      title: GoogleIntegration
      type: object
    GreenboneVulnerability:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: greenbone_vulnerability
          enum:
          - greenbone_vulnerability
          title: Type
          type: string
        group:
          default: vulnerabilities
          enum:
          - vulnerabilities
          title: Group
          type: string
        entity:
          pattern: "^(Sub)?[Dd]omain-"
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        affected:
          title: Affected
          type: string
        summary:
          title: Summary
          type: string
        description:
          items:
            type: string
          title: Description
          type: array
        solution:
          title: Solution
          type: string
        solution_type:
          title: Solution Type
          type: string
        insight:
          title: Insight
          type: string
        references:
          items:
            type: string
          title: References
          type: array
        host:
          title: Host
          type: string
        hostname:
          title: Hostname
          type: string
      required:
      - company
      - description
      - entity
      - host
      - name
      - references
      - uid
      title: GreenboneVulnerability
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    HistoricalScores:
      example:
        companyScores:
        - date: 2000-01-23
          total: 8
          breakdown:
            key: 60
          company: company
          type: COMPANY_SCORE
          ttl: 1.4658129805029452
        - date: 2000-01-23
          total: 8
          breakdown:
            key: 60
          company: company
          type: COMPANY_SCORE
          ttl: 1.4658129805029452
        globalScores:
        - date: 2000-01-23
          by_sector:
            key:
              sector_mean: 56
              by_group:
                key: 23
          global_mean: 59
          company: GLOBAL-STATS
          type: GLOBAL_STATS
        - date: 2000-01-23
          by_sector:
            key:
              sector_mean: 56
              by_group:
                key: 23
          global_mean: 59
          company: GLOBAL-STATS
          type: GLOBAL_STATS
      properties:
        companyScores:
          items:
            $ref: '#/components/schemas/CompanyScore'
          title: Companyscores
          type: array
        globalScores:
          items:
            $ref: '#/components/schemas/GlobalStats'
          title: Globalscores
          type: array
      required:
      - companyScores
      - globalScores
      title: HistoricalScores
      type: object
    IndividualScore:
      properties:
        score:
          $ref: '#/components/schemas/ScoreLevel'
        reason:
          title: Reason
          type: string
      required:
      - reason
      - score
      title: IndividualScore
      type: object
    IntegrationEntity:
      example:
        integrationType: null
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        sk: sk
        installationId: installationId
        pk: pk
        user: user
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        installationId:
          title: Installationid
          type: string
        integrationType:
          $ref: '#/components/schemas/IntegrationTypeEnum'
        user:
          title: User
          type: string
        name:
          default: ""
          title: Name
          type: string
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
      required:
      - installationId
      - integrationType
      - pk
      - sk
      - user
      title: IntegrationEntity
      type: object
    IntegrationTypeEnum:
      description: An enumeration.
      enum:
      - github
      - gitlab
      - google-workspace
      - microsoft-azure-ad
      - bitbucket
      - aws
      title: IntegrationTypeEnum
      type: string
    IntegrationWithAssets:
      example:
        assets:
          entities:
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          marker: marker
        entity:
          integrationType: null
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          installationId: installationId
          pk: pk
          user: user
          updated: 2000-01-23T04:56:07.000+00:00
      properties:
        assets:
          $ref: '#/components/schemas/PaginatedEntityCollection_MetaEntity_'
        entity:
          $ref: '#/components/schemas/IntegrationEntity'
      required:
      - assets
      - entity
      title: IntegrationWithAssets
      type: object
    InternalOpportunity:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: internal
          enum:
          - internal
          title: Type
          type: string
        group:
          default: internal
          enum:
          - internal
          title: Group
          type: string
        entity:
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        details:
          additionalProperties:
            type: string
          title: Details
          type: object
      required:
      - company
      - details
      - name
      - uid
      title: InternalOpportunity
      type: object
    Invite:
      example:
        accessType: null
        name: name
      properties:
        name:
          title: Name
          type: string
        accessType:
          $ref: '#/components/schemas/CompanyAccessEnum'
      required:
      - accessType
      - name
      title: Invite
      type: object
    InviteEntity:
      example:
        accessType: null
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        sk: sk
        name: name
        pk: pk
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        name:
          title: Name
          type: string
        accessType:
          $ref: '#/components/schemas/CompanyAccessEnum'
      required:
      - accessType
      - name
      - pk
      - sk
      title: InviteEntity
      type: object
    InviteWithAssets:
      example:
        assets:
          entities:
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          marker: marker
        entity:
          accessType: null
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          sk: sk
          name: name
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
      properties:
        assets:
          $ref: '#/components/schemas/PaginatedEntityCollection_MetaEntity_'
        entity:
          $ref: '#/components/schemas/InviteEntity'
      required:
      - assets
      - entity
      title: InviteWithAssets
      type: object
    LeakData:
      example:
        password: password
        is_hash: true
        year: 0
        name: name
      properties:
        is_hash:
          title: Is Hash
          type: boolean
        name:
          title: Name
          type: string
        password:
          title: Password
          type: string
        year:
          title: Year
          type: integer
      title: LeakData
      type: object
    LeakInfo:
      example:
        leaks:
        - password: password
          is_hash: true
          year: 0
          name: name
        - password: password
          is_hash: true
          year: 0
          name: name
      properties:
        leaks:
          items:
            $ref: '#/components/schemas/LeakData'
          title: Leaks
          type: array
      required:
      - leaks
      title: LeakInfo
      type: object
    LeakedPassword:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: leaked_password
          enum:
          - leaked_password
          title: Type
          type: string
        group:
          default: human_exposure
          enum:
          - human_exposure
          title: Group
          type: string
        entity:
          pattern: ^Account-
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        password_hint:
          title: Password Hint
          type: string
        leak_name:
          title: Leak Name
          type: string
        leak_year:
          title: Leak Year
          type: integer
      required:
      - company
      - entity
      - leak_name
      - leak_year
      - name
      - password_hint
      - uid
      title: LeakedPassword
      type: object
    LoginRequest:
      example:
        password: password
        email: email
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          format: password
          title: Password
          type: string
          writeOnly: true
      required:
      - email
      - password
      title: LoginRequest
      type: object
    LoginResponseMfaChallenge:
      example:
        setupSecret: setupSecret
        session: session
        challenge: null
      properties:
        challenge:
          $ref: '#/components/schemas/ChallengeTypes'
        setupSecret:
          title: Setupsecret
          type: string
        session:
          title: Session
          type: string
      required:
      - challenge
      title: LoginResponseMfaChallenge
      type: object
    MFAAnswer:
      description: An enumeration.
      enum:
      - always
      - often
      - sometimes
      - never
      title: MFAAnswer
      type: string
    MFALoginChallengeRequest:
      example:
        session: session
        email: email
        token: token
      properties:
        email:
          format: email
          title: Email
          type: string
        token:
          title: Token
          type: string
        session:
          title: Session
          type: string
      required:
      - email
      - session
      - token
      title: MFALoginChallengeRequest
      type: object
    MFASetupChallengeRequest:
      example:
        token: token
      properties:
        token:
          title: Token
          type: string
      required:
      - token
      title: MFASetupChallengeRequest
      type: object
    MaskedToken:
      example:
        name: name
        company: company
        id: id
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
        company:
          title: Company
          type: string
      required:
      - company
      - id
      - name
      title: MaskedToken
      type: object
    MetaEntity:
      example:
        metadata: "{}"
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        sk: sk
        name: name
        pk: pk
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        name:
          title: Name
          type: string
        metadata:
          title: Metadata
          type: object
      required:
      - name
      - pk
      - sk
      title: MetaEntity
      type: object
    MicrosoftIntegration:
      properties:
        source_lookup:
          default: ""
          title: Source Lookup
          type: string
        type:
          default: integration.microsoft
          enum:
          - integration.microsoft
          title: Type
          type: string
      title: MicrosoftIntegration
      type: object
    ModelType:
      description: An enumeration.
      enum:
      - exposed_secret
      - exposed_service
      - leaked_password
      - web_app_vulnerability
      - burp_vulnerability
      - account_discoverability
      - suspicious_domain
      - greenbone_vulnerability
      - internal
      title: ModelType
      type: string
    Opportunity:
      example:
        uid: uid
        score: ""
        name: name
        company: company
        type: null
        resolution: ""
        entity: entity
        group: null
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          $ref: '#/components/schemas/ModelType'
        group:
          $ref: '#/components/schemas/OpportunityGroup'
        entity:
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
      required:
      - company
      - group
      - type
      - uid
      title: Opportunity
      type: object
    OpportunityDetails:
      example:
        opportunity: null
        context_description: context_description
      properties:
        context_description:
          title: Context Description
          type: string
        opportunity:
          $ref: '#/components/schemas/Opportunity_1'
      required:
      - context_description
      - opportunity
      title: OpportunityDetails
      type: object
    OpportunityGroup:
      description: An enumeration.
      enum:
      - domains
      - vulnerabilities
      - tech_profile
      - human_exposure
      - security_maturity
      - internal
      title: OpportunityGroup
      type: string
    OpportunityResolution:
      description: An enumeration.
      enum:
      - unacknowledged
      - accepted_risk
      - resolved
      - false_positive
      title: OpportunityResolution
      type: string
    OpportunityScore:
      description: An enumeration.
      enum:
      - none
      - info
      - low
      - medium
      - high
      - critical
      - unknown
      title: OpportunityScore
      type: string
    PaginatedEntityCollection_AccountEntity_:
      example:
        entities:
        - metadata:
            serviceRunningCount: ""
            campaignConclusion: null
            riskScore: 0.8008281904610115
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          campaignOnNextScan: false
          sk: sk
          name: name
          verified: false
          fullName: fullName
          sourceInformation: null
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
        - metadata:
            serviceRunningCount: ""
            campaignConclusion: null
            riskScore: 0.8008281904610115
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          campaignOnNextScan: false
          sk: sk
          name: name
          verified: false
          fullName: fullName
          sourceInformation: null
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
          status: ""
        marker: marker
      properties:
        entities:
          items:
            $ref: '#/components/schemas/AccountEntity'
          title: Entities
          type: array
        marker:
          title: Marker
          type: string
      required:
      - entities
      title: "PaginatedEntityCollection[AccountEntity]"
      type: object
    PaginatedEntityCollection_DomainEntity_:
      example:
        entities:
        - metadata:
            subdomainCount: 0
            saasServices:
            - saasServices
            - saasServices
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          activeScanFrequency: ""
          sourceInformation: null
          pk: pk
          adminVerified: false
          txtRecord: txtRecord
          updated: 2000-01-23T04:56:07.000+00:00
          dnsVerified: false
        - metadata:
            subdomainCount: 0
            saasServices:
            - saasServices
            - saasServices
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          activeScanFrequency: ""
          sourceInformation: null
          pk: pk
          adminVerified: false
          txtRecord: txtRecord
          updated: 2000-01-23T04:56:07.000+00:00
          dnsVerified: false
        marker: marker
      properties:
        entities:
          items:
            $ref: '#/components/schemas/DomainEntity'
          title: Entities
          type: array
        marker:
          title: Marker
          type: string
      required:
      - entities
      title: "PaginatedEntityCollection[DomainEntity]"
      type: object
    PaginatedEntityCollection_IntegrationEntity_:
      example:
        entities:
        - integrationType: null
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          installationId: installationId
          pk: pk
          user: user
          updated: 2000-01-23T04:56:07.000+00:00
        - integrationType: null
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          installationId: installationId
          pk: pk
          user: user
          updated: 2000-01-23T04:56:07.000+00:00
        marker: marker
      properties:
        entities:
          items:
            $ref: '#/components/schemas/IntegrationEntity'
          title: Entities
          type: array
        marker:
          title: Marker
          type: string
      required:
      - entities
      title: "PaginatedEntityCollection[IntegrationEntity]"
      type: object
    PaginatedEntityCollection_InviteEntity_:
      example:
        entities:
        - accessType: null
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          sk: sk
          name: name
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        - accessType: null
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          sk: sk
          name: name
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        marker: marker
      properties:
        entities:
          items:
            $ref: '#/components/schemas/InviteEntity'
          title: Entities
          type: array
        marker:
          title: Marker
          type: string
      required:
      - entities
      title: "PaginatedEntityCollection[InviteEntity]"
      type: object
    PaginatedEntityCollection_MetaEntity_:
      example:
        entities:
        - metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          sk: sk
          name: name
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        - metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          sk: sk
          name: name
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        marker: marker
      properties:
        entities:
          items:
            $ref: '#/components/schemas/MetaEntity'
          title: Entities
          type: array
        marker:
          title: Marker
          type: string
      required:
      - entities
      title: "PaginatedEntityCollection[MetaEntity]"
      type: object
    PaginatedEntityCollection_RepositoryEntity_:
      example:
        entities:
        - metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          installation: installation
          name: name
          sk: sk
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        - metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          installation: installation
          name: name
          sk: sk
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        marker: marker
      properties:
        entities:
          items:
            $ref: '#/components/schemas/RepositoryEntity'
          title: Entities
          type: array
        marker:
          title: Marker
          type: string
      required:
      - entities
      title: "PaginatedEntityCollection[RepositoryEntity]"
      type: object
    PaginatedEntityCollection_SubdomainEntity_:
      example:
        entities:
        - metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          activeScanFrequency: ""
          sourceInformation: null
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        - metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          activeScanFrequency: ""
          sourceInformation: null
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
        marker: marker
      properties:
        entities:
          items:
            $ref: '#/components/schemas/SubdomainEntity'
          title: Entities
          type: array
        marker:
          title: Marker
          type: string
      required:
      - entities
      title: "PaginatedEntityCollection[SubdomainEntity]"
      type: object
    PassDB:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: scan.passdb
          enum:
          - scan.passdb
          title: Type
          type: string
      required:
      - source_lookup
      title: PassDB
      type: object
    PasswordLengthAnswer:
      description: An enumeration.
      enum:
      - long
      - short
      - none
      title: PasswordLengthAnswer
      type: string
    PasswordManagerAnswer:
      description: An enumeration.
      enum:
      - provided
      - advised
      - none
      title: PasswordManagerAnswer
      type: string
    PasswordScreenAnswer:
      description: An enumeration.
      enum:
      - "yes"
      - "no"
      title: PasswordScreenAnswer
      type: string
    RepositoryEntity:
      example:
        metadata: "{}"
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        installation: installation
        name: name
        sk: sk
        pk: pk
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          title: Name
          type: string
        installation:
          title: Installation
          type: string
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        metadata:
          title: Metadata
          type: object
      required:
      - installation
      - name
      - pk
      - sk
      title: RepositoryEntity
      type: object
    RepositoryWithAssets:
      example:
        assets:
          entities:
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          marker: marker
        entity:
          metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          installation: installation
          name: name
          sk: sk
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
      properties:
        assets:
          $ref: '#/components/schemas/PaginatedEntityCollection_MetaEntity_'
        entity:
          $ref: '#/components/schemas/RepositoryEntity'
      required:
      - assets
      - entity
      title: RepositoryWithAssets
      type: object
    ResetPasswordRequest:
      example:
        password: password
        code: code
        email: email
      properties:
        email:
          format: email
          title: Email
          type: string
        code:
          title: Code
          type: string
        password:
          format: password
          minLength: 12
          title: Password
          type: string
          writeOnly: true
      required:
      - code
      - email
      - password
      title: ResetPasswordRequest
      type: object
    ResetPasswordResponse:
      example:
        reason: reason
        success: true
      properties:
        success:
          title: Success
          type: boolean
        reason:
          title: Reason
          type: string
      required:
      - success
      title: ResetPasswordResponse
      type: object
    ResolutionUpdate:
      example:
        resolution: resolution
      properties:
        resolution:
          title: Resolution
          type: string
      required:
      - resolution
      title: ResolutionUpdate
      type: object
    ScanFrequency:
      description: An enumeration.
      enum:
      - NEVER
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
      title: ScanFrequency
      type: string
    ScoreLevel:
      description: An enumeration.
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      title: ScoreLevel
      type: integer
    Secret:
      properties:
        type:
          title: Type
          type: string
        secret:
          title: Secret
          type: string
        filename:
          title: Filename
          type: string
        commit_hash:
          title: Commit Hash
          type: string
        line_number:
          title: Line Number
          type: string
        repo_url:
          default: ""
          title: Repo Url
          type: string
        branch:
          title: Branch
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
      required:
      - branch
      - commit_hash
      - filename
      - line_number
      - secret
      - type
      title: Secret
      type: object
    ServiceRunningCount:
      additionalProperties:
        type: integer
      properties: {}
      title: ServiceRunningCount
      type: object
    SignupRequest:
      example:
        password: password
        name: name
        email: email
      properties:
        email:
          format: email
          title: Email
          type: string
        password:
          format: password
          minLength: 12
          title: Password
          type: string
          writeOnly: true
        name:
          minLength: 4
          title: Name
          type: string
      required:
      - email
      - name
      - password
      title: SignupRequest
      type: object
    SignupResponse:
      example:
        confirmed: true
      properties:
        confirmed:
          title: Confirmed
          type: boolean
      required:
      - confirmed
      title: SignupResponse
      type: object
    SubdomainEntity:
      example:
        metadata: "{}"
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        name: name
        sk: sk
        activeScanFrequency: ""
        sourceInformation: null
        pk: pk
        updated: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          title: Name
          type: string
        activeScanFrequency:
          allOf:
          - $ref: '#/components/schemas/ScanFrequency'
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        metadata:
          title: Metadata
          type: object
        sourceInformation:
          $ref: '#/components/schemas/Sourceinformation'
      required:
      - name
      - pk
      - sk
      - sourceInformation
      title: SubdomainEntity
      type: object
    SubdomainEnumerationScan:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: scan.subdomain
          enum:
          - scan.subdomain
          title: Type
          type: string
      required:
      - source_lookup
      title: SubdomainEnumerationScan
      type: object
    SubdomainWithAssets:
      example:
        assets:
          entities:
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          - metadata: "{}"
            entityType: entityType
            created: 2000-01-23T04:56:07.000+00:00
            sk: sk
            name: name
            pk: pk
            updated: 2000-01-23T04:56:07.000+00:00
          marker: marker
        entity:
          metadata: "{}"
          entityType: entityType
          created: 2000-01-23T04:56:07.000+00:00
          name: name
          sk: sk
          activeScanFrequency: ""
          sourceInformation: null
          pk: pk
          updated: 2000-01-23T04:56:07.000+00:00
      properties:
        assets:
          $ref: '#/components/schemas/PaginatedEntityCollection_MetaEntity_'
        entity:
          $ref: '#/components/schemas/SubdomainEntity'
      required:
      - assets
      - entity
      title: SubdomainWithAssets
      type: object
    SuccessResponse:
      example:
        success: true
      properties:
        success:
          title: Success
          type: boolean
      required:
      - success
      title: SuccessResponse
      type: object
    Suggestion:
      example:
        data: "{}"
        entityType: null
        name: name
        id: id
        pk: pk
      properties:
        data:
          title: Data
          type: object
        id:
          default: ""
          title: Id
          type: string
        name:
          title: Name
          type: string
        entityType:
          $ref: '#/components/schemas/SuggestionEntityTypes'
        pk:
          title: Pk
          type: string
      required:
      - data
      - entityType
      - id
      - name
      - pk
      title: Suggestion
      type: object
    SuggestionEntityTypes:
      description: An enumeration.
      enum:
      - Domain
      - Subdomain
      - Account
      - Repository
      title: SuggestionEntityTypes
      type: string
    SuspiciousDomain:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: suspicious_domain
          enum:
          - suspicious_domain
          title: Type
          type: string
        group:
          default: domains
          enum:
          - domains
          title: Group
          type: string
        entity:
          pattern: ^Domain-
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        score_details:
          additionalProperties:
            items:
              $ref: '#/components/schemas/IndividualScore'
            type: array
          title: Score Details
          type: object
      required:
      - company
      - entity
      - name
      - score_details
      - uid
      title: SuspiciousDomain
      type: object
    Token:
      example:
        name: name
        company: company
        id: id
        token: token
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: string
        token:
          title: Token
          type: string
        company:
          title: Company
          type: string
      required:
      - company
      - id
      - name
      - token
      title: Token
      type: object
    UploadFailure:
      example:
        reason: null
        line: line
      properties:
        line:
          title: Line
          type: string
        reason:
          $ref: '#/components/schemas/UploadFailureReasonEnum'
      required:
      - line
      - reason
      title: UploadFailure
      type: object
    UploadFailureReasonEnum:
      description: An enumeration.
      enum:
      - internal-error
      - decode-error
      - invalid-domain-name
      - already-exists
      title: UploadFailureReasonEnum
      type: string
    UploadResponse:
      example:
        failures:
        - reason: null
          line: line
        - reason: null
          line: line
        success_count: 0
        failed_count: 6
      properties:
        success_count:
          title: Success Count
          type: integer
        failed_count:
          title: Failed Count
          type: integer
        failures:
          items:
            $ref: '#/components/schemas/UploadFailure'
          title: Failures
          type: array
      required:
      - failed_count
      - failures
      - success_count
      title: UploadResponse
      type: object
    UserCompanyAccessEntity:
      example:
        accessType: null
        entityType: entityType
        created: 2000-01-23T04:56:07.000+00:00
        sk: sk
        name: name
        pk: pk
        updated: 2000-01-23T04:56:07.000+00:00
        email: email
      properties:
        pk:
          title: Pk
          type: string
        sk:
          title: Sk
          type: string
        entityType:
          title: Entitytype
          type: string
        created:
          format: date-time
          title: Created
          type: string
        updated:
          format: date-time
          title: Updated
          type: string
        name:
          title: Name
          type: string
        accessType:
          $ref: '#/components/schemas/CompanyAccessEnum'
        email:
          title: Email
          type: string
      required:
      - accessType
      - email
      - name
      - pk
      - sk
      title: UserCompanyAccessEntity
      type: object
    UserEntry:
      properties:
        source_lookup:
          default: ""
          title: Source Lookup
          type: string
        type:
          default: user
          enum:
          - user
          title: Type
          type: string
      title: UserEntry
      type: object
    VDPAnswer:
      description: An enumeration.
      enum:
      - managed
      - self_hosted
      - exploring
      - none
      title: VDPAnswer
      type: string
    VIPAnswer:
      description: An enumeration.
      enum:
      - "yes"
      - "no"
      title: VIPAnswer
      type: string
    ValidationError:
      properties:
        loc:
          items:
            $ref: '#/components/schemas/Location_inner'
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    VerificationResult:
      example:
        verified: true
      properties:
        verified:
          title: Verified
          type: boolean
      required:
      - verified
      title: VerificationResult
      type: object
    VulnScanAnswer:
      description: An enumeration.
      enum:
      - quarterly
      - yearly
      - none
      title: VulnScanAnswer
      type: string
    WebApplicationVulnerability:
      properties:
        company:
          title: Company
          type: string
        uid:
          title: Uid
          type: string
        type:
          default: web_app_vulnerability
          enum:
          - web_app_vulnerability
          title: Type
          type: string
        group:
          default: vulnerabilities
          enum:
          - vulnerabilities
          title: Group
          type: string
        entity:
          pattern: "^(Sub)?[Dd]omain-"
          title: Entity
          type: string
        score:
          allOf:
          - $ref: '#/components/schemas/OpportunityScore'
        resolution:
          allOf:
          - $ref: '#/components/schemas/OpportunityResolution'
        name:
          title: Name
          type: string
        nuclei_template_id:
          title: Nuclei Template Id
          type: string
      required:
      - company
      - entity
      - name
      - nuclei_template_id
      - uid
      title: WebApplicationVulnerability
      type: object
    WebCrawl:
      properties:
        source_lookup:
          title: Source Lookup
          type: string
        type:
          default: scan.webpage
          enum:
          - scan.webpage
          title: Type
          type: string
      required:
      - source_lookup
      title: WebCrawl
      type: object
    WhoisData:
      properties:
        success:
          default: true
          enum:
          - true
          title: Success
          type: boolean
        address:
          items:
            type: string
          title: Address
          type: array
        creationDate:
          items:
            format: date-time
            type: string
          title: Creationdate
          type: array
        dnssec:
          items:
            type: string
          title: Dnssec
          type: array
        domainName:
          title: Domainname
          type: string
        email:
          items:
            type: string
          title: Email
          type: array
        expirationDate:
          format: date-time
          title: Expirationdate
          type: string
        name:
          items:
            type: string
          title: Name
          type: array
        nameServers:
          items:
            type: string
          title: Nameservers
          type: array
        registrantName:
          items:
            type: string
          title: Registrantname
          type: array
        rawText:
          title: Rawtext
          type: string
      required:
      - rawText
      title: WhoisData
      type: object
    WhoisError:
      properties:
        success:
          default: false
          enum:
          - false
          title: Success
          type: boolean
        error:
          maxItems: 1
          minItems: 1
          title: Error
          type: array
      required:
      - error
      title: WhoisError
      type: object
    Response_Accept_Suggestion_Api_Companies__Company_Pk__Suggestions__Suggestion_Id__Post:
      anyOf:
      - $ref: '#/components/schemas/DomainEntity'
      - $ref: '#/components/schemas/SubdomainEntity'
      - $ref: '#/components/schemas/AccountEntity'
      - $ref: '#/components/schemas/RepositoryEntity'
      title: Response Accept Suggestion Api Companies  Company Pk  Suggestions  Suggestion
        Id  Post
    Response_Whois_Domain:
      anyOf:
      - $ref: '#/components/schemas/WhoisData'
      - $ref: '#/components/schemas/WhoisError'
      title: Response Whois Domain
    Sourceinformation:
      anyOf:
      - $ref: '#/components/schemas/UserEntry'
      - $ref: '#/components/schemas/GitRepo'
      - $ref: '#/components/schemas/WebCrawl'
      - $ref: '#/components/schemas/AmassIntel'
      - $ref: '#/components/schemas/AmassEnum'
      - $ref: '#/components/schemas/PassDB'
      - $ref: '#/components/schemas/DNSScan'
      - $ref: '#/components/schemas/DNSScanReverse'
      - $ref: '#/components/schemas/SubdomainEnumerationScan'
      - $ref: '#/components/schemas/MicrosoftIntegration'
      - $ref: '#/components/schemas/GoogleIntegration'
      - $ref: '#/components/schemas/GithubIntegration'
      - $ref: '#/components/schemas/GitLabIntegration'
      - $ref: '#/components/schemas/BitBucketIntegration'
      - $ref: '#/components/schemas/AWSIntegration'
      title: Sourceinformation
    Opportunity_1:
      discriminator:
        mapping:
          account_discoverability: '#/components/schemas/AccountDiscoverability'
          burp_vulnerability: '#/components/schemas/BurpVulnerability'
          exposed_secret: '#/components/schemas/ExposedFileSecrets'
          exposed_service: '#/components/schemas/ExposedServices'
          greenbone_vulnerability: '#/components/schemas/GreenboneVulnerability'
          leaked_password: '#/components/schemas/LeakedPassword'
          web_app_vulnerability: '#/components/schemas/WebApplicationVulnerability'
          suspicious_domain: '#/components/schemas/SuspiciousDomain'
          internal: '#/components/schemas/InternalOpportunity'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AccountDiscoverability'
      - $ref: '#/components/schemas/BurpVulnerability'
      - $ref: '#/components/schemas/ExposedFileSecrets'
      - $ref: '#/components/schemas/ExposedServices'
      - $ref: '#/components/schemas/GreenboneVulnerability'
      - $ref: '#/components/schemas/LeakedPassword'
      - $ref: '#/components/schemas/WebApplicationVulnerability'
      - $ref: '#/components/schemas/SuspiciousDomain'
      - $ref: '#/components/schemas/InternalOpportunity'
      title: Opportunity
    Location_inner:
      anyOf:
      - type: string
      - type: integer
  securitySchemes:
    HTTPBearer:
      scheme: bearer
      type: http
    APIKeyHeader:
      in: header
      name: x-api-key
      type: apiKey
