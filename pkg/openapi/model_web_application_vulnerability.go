/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// WebApplicationVulnerability struct for WebApplicationVulnerability
type WebApplicationVulnerability struct {
	Company string `json:"company"`
	Uid string `json:"uid"`
	Type *string `json:"type,omitempty"`
	Group *string `json:"group,omitempty"`
	Entity string `json:"entity"`
	Score *OpportunityScore `json:"score,omitempty"`
	Resolution *OpportunityResolution `json:"resolution,omitempty"`
	Name string `json:"name"`
	NucleiTemplateId string `json:"nuclei_template_id"`
}

// NewWebApplicationVulnerability instantiates a new WebApplicationVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebApplicationVulnerability(company string, uid string, entity string, name string, nucleiTemplateId string) *WebApplicationVulnerability {
	this := WebApplicationVulnerability{}
	this.Company = company
	this.Uid = uid
	var type_ string = "web_app_vulnerability"
	this.Type = &type_
	var group string = "vulnerabilities"
	this.Group = &group
	this.Entity = entity
	this.Name = name
	this.NucleiTemplateId = nucleiTemplateId
	return &this
}

// NewWebApplicationVulnerabilityWithDefaults instantiates a new WebApplicationVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebApplicationVulnerabilityWithDefaults() *WebApplicationVulnerability {
	this := WebApplicationVulnerability{}
	var type_ string = "web_app_vulnerability"
	this.Type = &type_
	var group string = "vulnerabilities"
	this.Group = &group
	return &this
}

// GetCompany returns the Company field value
func (o *WebApplicationVulnerability) GetCompany() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *WebApplicationVulnerability) SetCompany(v string) {
	o.Company = v
}

// GetUid returns the Uid field value
func (o *WebApplicationVulnerability) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *WebApplicationVulnerability) SetUid(v string) {
	o.Uid = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WebApplicationVulnerability) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WebApplicationVulnerability) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WebApplicationVulnerability) SetType(v string) {
	o.Type = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *WebApplicationVulnerability) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *WebApplicationVulnerability) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *WebApplicationVulnerability) SetGroup(v string) {
	o.Group = &v
}

// GetEntity returns the Entity field value
func (o *WebApplicationVulnerability) GetEntity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetEntityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *WebApplicationVulnerability) SetEntity(v string) {
	o.Entity = v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *WebApplicationVulnerability) GetScore() OpportunityScore {
	if o == nil || o.Score == nil {
		var ret OpportunityScore
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetScoreOk() (*OpportunityScore, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *WebApplicationVulnerability) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given OpportunityScore and assigns it to the Score field.
func (o *WebApplicationVulnerability) SetScore(v OpportunityScore) {
	o.Score = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *WebApplicationVulnerability) GetResolution() OpportunityResolution {
	if o == nil || o.Resolution == nil {
		var ret OpportunityResolution
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetResolutionOk() (*OpportunityResolution, bool) {
	if o == nil || o.Resolution == nil {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *WebApplicationVulnerability) HasResolution() bool {
	if o != nil && o.Resolution != nil {
		return true
	}

	return false
}

// SetResolution gets a reference to the given OpportunityResolution and assigns it to the Resolution field.
func (o *WebApplicationVulnerability) SetResolution(v OpportunityResolution) {
	o.Resolution = &v
}

// GetName returns the Name field value
func (o *WebApplicationVulnerability) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WebApplicationVulnerability) SetName(v string) {
	o.Name = v
}

// GetNucleiTemplateId returns the NucleiTemplateId field value
func (o *WebApplicationVulnerability) GetNucleiTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NucleiTemplateId
}

// GetNucleiTemplateIdOk returns a tuple with the NucleiTemplateId field value
// and a boolean to check if the value has been set.
func (o *WebApplicationVulnerability) GetNucleiTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NucleiTemplateId, true
}

// SetNucleiTemplateId sets field value
func (o *WebApplicationVulnerability) SetNucleiTemplateId(v string) {
	o.NucleiTemplateId = v
}

func (o WebApplicationVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["company"] = o.Company
	}
	if true {
		toSerialize["uid"] = o.Uid
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if true {
		toSerialize["entity"] = o.Entity
	}
	if o.Score != nil {
		toSerialize["score"] = o.Score
	}
	if o.Resolution != nil {
		toSerialize["resolution"] = o.Resolution
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["nuclei_template_id"] = o.NucleiTemplateId
	}
	return json.Marshal(toSerialize)
}

type NullableWebApplicationVulnerability struct {
	value *WebApplicationVulnerability
	isSet bool
}

func (v NullableWebApplicationVulnerability) Get() *WebApplicationVulnerability {
	return v.value
}

func (v *NullableWebApplicationVulnerability) Set(val *WebApplicationVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableWebApplicationVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableWebApplicationVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebApplicationVulnerability(val *WebApplicationVulnerability) *NullableWebApplicationVulnerability {
	return &NullableWebApplicationVulnerability{value: val, isSet: true}
}

func (v NullableWebApplicationVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebApplicationVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


