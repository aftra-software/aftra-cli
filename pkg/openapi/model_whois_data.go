/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// WhoisData struct for WhoisData
type WhoisData struct {
	Success *bool `json:"success,omitempty"`
	Address []string `json:"address,omitempty"`
	CreationDate []time.Time `json:"creationDate,omitempty"`
	Dnssec []string `json:"dnssec,omitempty"`
	DomainName *string `json:"domainName,omitempty"`
	Email []string `json:"email,omitempty"`
	ExpirationDate *time.Time `json:"expirationDate,omitempty"`
	Name []string `json:"name,omitempty"`
	NameServers []string `json:"nameServers,omitempty"`
	RegistrantName []string `json:"registrantName,omitempty"`
	RawText string `json:"rawText"`
}

// NewWhoisData instantiates a new WhoisData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhoisData(rawText string) *WhoisData {
	this := WhoisData{}
	var success bool = true
	this.Success = &success
	this.RawText = rawText
	return &this
}

// NewWhoisDataWithDefaults instantiates a new WhoisData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhoisDataWithDefaults() *WhoisData {
	this := WhoisData{}
	var success bool = true
	this.Success = &success
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *WhoisData) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *WhoisData) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *WhoisData) SetSuccess(v bool) {
	o.Success = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *WhoisData) GetAddress() []string {
	if o == nil || o.Address == nil {
		var ret []string
		return ret
	}
	return o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetAddressOk() ([]string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *WhoisData) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given []string and assigns it to the Address field.
func (o *WhoisData) SetAddress(v []string) {
	o.Address = v
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *WhoisData) GetCreationDate() []time.Time {
	if o == nil || o.CreationDate == nil {
		var ret []time.Time
		return ret
	}
	return o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetCreationDateOk() ([]time.Time, bool) {
	if o == nil || o.CreationDate == nil {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *WhoisData) HasCreationDate() bool {
	if o != nil && o.CreationDate != nil {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given []time.Time and assigns it to the CreationDate field.
func (o *WhoisData) SetCreationDate(v []time.Time) {
	o.CreationDate = v
}

// GetDnssec returns the Dnssec field value if set, zero value otherwise.
func (o *WhoisData) GetDnssec() []string {
	if o == nil || o.Dnssec == nil {
		var ret []string
		return ret
	}
	return o.Dnssec
}

// GetDnssecOk returns a tuple with the Dnssec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetDnssecOk() ([]string, bool) {
	if o == nil || o.Dnssec == nil {
		return nil, false
	}
	return o.Dnssec, true
}

// HasDnssec returns a boolean if a field has been set.
func (o *WhoisData) HasDnssec() bool {
	if o != nil && o.Dnssec != nil {
		return true
	}

	return false
}

// SetDnssec gets a reference to the given []string and assigns it to the Dnssec field.
func (o *WhoisData) SetDnssec(v []string) {
	o.Dnssec = v
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *WhoisData) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *WhoisData) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *WhoisData) SetDomainName(v string) {
	o.DomainName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *WhoisData) GetEmail() []string {
	if o == nil || o.Email == nil {
		var ret []string
		return ret
	}
	return o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetEmailOk() ([]string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *WhoisData) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given []string and assigns it to the Email field.
func (o *WhoisData) SetEmail(v []string) {
	o.Email = v
}

// GetExpirationDate returns the ExpirationDate field value if set, zero value otherwise.
func (o *WhoisData) GetExpirationDate() time.Time {
	if o == nil || o.ExpirationDate == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpirationDate
}

// GetExpirationDateOk returns a tuple with the ExpirationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetExpirationDateOk() (*time.Time, bool) {
	if o == nil || o.ExpirationDate == nil {
		return nil, false
	}
	return o.ExpirationDate, true
}

// HasExpirationDate returns a boolean if a field has been set.
func (o *WhoisData) HasExpirationDate() bool {
	if o != nil && o.ExpirationDate != nil {
		return true
	}

	return false
}

// SetExpirationDate gets a reference to the given time.Time and assigns it to the ExpirationDate field.
func (o *WhoisData) SetExpirationDate(v time.Time) {
	o.ExpirationDate = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WhoisData) GetName() []string {
	if o == nil || o.Name == nil {
		var ret []string
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetNameOk() ([]string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WhoisData) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given []string and assigns it to the Name field.
func (o *WhoisData) SetName(v []string) {
	o.Name = v
}

// GetNameServers returns the NameServers field value if set, zero value otherwise.
func (o *WhoisData) GetNameServers() []string {
	if o == nil || o.NameServers == nil {
		var ret []string
		return ret
	}
	return o.NameServers
}

// GetNameServersOk returns a tuple with the NameServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetNameServersOk() ([]string, bool) {
	if o == nil || o.NameServers == nil {
		return nil, false
	}
	return o.NameServers, true
}

// HasNameServers returns a boolean if a field has been set.
func (o *WhoisData) HasNameServers() bool {
	if o != nil && o.NameServers != nil {
		return true
	}

	return false
}

// SetNameServers gets a reference to the given []string and assigns it to the NameServers field.
func (o *WhoisData) SetNameServers(v []string) {
	o.NameServers = v
}

// GetRegistrantName returns the RegistrantName field value if set, zero value otherwise.
func (o *WhoisData) GetRegistrantName() []string {
	if o == nil || o.RegistrantName == nil {
		var ret []string
		return ret
	}
	return o.RegistrantName
}

// GetRegistrantNameOk returns a tuple with the RegistrantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhoisData) GetRegistrantNameOk() ([]string, bool) {
	if o == nil || o.RegistrantName == nil {
		return nil, false
	}
	return o.RegistrantName, true
}

// HasRegistrantName returns a boolean if a field has been set.
func (o *WhoisData) HasRegistrantName() bool {
	if o != nil && o.RegistrantName != nil {
		return true
	}

	return false
}

// SetRegistrantName gets a reference to the given []string and assigns it to the RegistrantName field.
func (o *WhoisData) SetRegistrantName(v []string) {
	o.RegistrantName = v
}

// GetRawText returns the RawText field value
func (o *WhoisData) GetRawText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RawText
}

// GetRawTextOk returns a tuple with the RawText field value
// and a boolean to check if the value has been set.
func (o *WhoisData) GetRawTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RawText, true
}

// SetRawText sets field value
func (o *WhoisData) SetRawText(v string) {
	o.RawText = v
}

func (o WhoisData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.CreationDate != nil {
		toSerialize["creationDate"] = o.CreationDate
	}
	if o.Dnssec != nil {
		toSerialize["dnssec"] = o.Dnssec
	}
	if o.DomainName != nil {
		toSerialize["domainName"] = o.DomainName
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.ExpirationDate != nil {
		toSerialize["expirationDate"] = o.ExpirationDate
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NameServers != nil {
		toSerialize["nameServers"] = o.NameServers
	}
	if o.RegistrantName != nil {
		toSerialize["registrantName"] = o.RegistrantName
	}
	if true {
		toSerialize["rawText"] = o.RawText
	}
	return json.Marshal(toSerialize)
}

type NullableWhoisData struct {
	value *WhoisData
	isSet bool
}

func (v NullableWhoisData) Get() *WhoisData {
	return v.value
}

func (v *NullableWhoisData) Set(val *WhoisData) {
	v.value = val
	v.isSet = true
}

func (v NullableWhoisData) IsSet() bool {
	return v.isSet
}

func (v *NullableWhoisData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhoisData(val *WhoisData) *NullableWhoisData {
	return &NullableWhoisData{value: val, isSet: true}
}

func (v NullableWhoisData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhoisData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


