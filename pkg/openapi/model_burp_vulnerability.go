/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BurpVulnerability struct for BurpVulnerability
type BurpVulnerability struct {
	Company string `json:"company"`
	Uid string `json:"uid"`
	Type *string `json:"type,omitempty"`
	Group *string `json:"group,omitempty"`
	Entity string `json:"entity"`
	Score *OpportunityScore `json:"score,omitempty"`
	Resolution *OpportunityResolution `json:"resolution,omitempty"`
	Name string `json:"name"`
	TypeIndex string `json:"type_index"`
	Description *string `json:"description,omitempty"`
	Origin string `json:"origin"`
	Path string `json:"path"`
	Background string `json:"background"`
	Remediation *string `json:"remediation,omitempty"`
}

// NewBurpVulnerability instantiates a new BurpVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBurpVulnerability(company string, uid string, entity string, name string, typeIndex string, origin string, path string, background string) *BurpVulnerability {
	this := BurpVulnerability{}
	this.Company = company
	this.Uid = uid
	var type_ string = "burp_vulnerability"
	this.Type = &type_
	var group string = "vulnerabilities"
	this.Group = &group
	this.Entity = entity
	this.Name = name
	this.TypeIndex = typeIndex
	this.Origin = origin
	this.Path = path
	this.Background = background
	return &this
}

// NewBurpVulnerabilityWithDefaults instantiates a new BurpVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBurpVulnerabilityWithDefaults() *BurpVulnerability {
	this := BurpVulnerability{}
	var type_ string = "burp_vulnerability"
	this.Type = &type_
	var group string = "vulnerabilities"
	this.Group = &group
	return &this
}

// GetCompany returns the Company field value
func (o *BurpVulnerability) GetCompany() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *BurpVulnerability) SetCompany(v string) {
	o.Company = v
}

// GetUid returns the Uid field value
func (o *BurpVulnerability) GetUid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uid
}

// GetUidOk returns a tuple with the Uid field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetUidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uid, true
}

// SetUid sets field value
func (o *BurpVulnerability) SetUid(v string) {
	o.Uid = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BurpVulnerability) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BurpVulnerability) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BurpVulnerability) SetType(v string) {
	o.Type = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *BurpVulnerability) GetGroup() string {
	if o == nil || o.Group == nil {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetGroupOk() (*string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *BurpVulnerability) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *BurpVulnerability) SetGroup(v string) {
	o.Group = &v
}

// GetEntity returns the Entity field value
func (o *BurpVulnerability) GetEntity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetEntityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *BurpVulnerability) SetEntity(v string) {
	o.Entity = v
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *BurpVulnerability) GetScore() OpportunityScore {
	if o == nil || o.Score == nil {
		var ret OpportunityScore
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetScoreOk() (*OpportunityScore, bool) {
	if o == nil || o.Score == nil {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *BurpVulnerability) HasScore() bool {
	if o != nil && o.Score != nil {
		return true
	}

	return false
}

// SetScore gets a reference to the given OpportunityScore and assigns it to the Score field.
func (o *BurpVulnerability) SetScore(v OpportunityScore) {
	o.Score = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *BurpVulnerability) GetResolution() OpportunityResolution {
	if o == nil || o.Resolution == nil {
		var ret OpportunityResolution
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetResolutionOk() (*OpportunityResolution, bool) {
	if o == nil || o.Resolution == nil {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *BurpVulnerability) HasResolution() bool {
	if o != nil && o.Resolution != nil {
		return true
	}

	return false
}

// SetResolution gets a reference to the given OpportunityResolution and assigns it to the Resolution field.
func (o *BurpVulnerability) SetResolution(v OpportunityResolution) {
	o.Resolution = &v
}

// GetName returns the Name field value
func (o *BurpVulnerability) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BurpVulnerability) SetName(v string) {
	o.Name = v
}

// GetTypeIndex returns the TypeIndex field value
func (o *BurpVulnerability) GetTypeIndex() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TypeIndex
}

// GetTypeIndexOk returns a tuple with the TypeIndex field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetTypeIndexOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeIndex, true
}

// SetTypeIndex sets field value
func (o *BurpVulnerability) SetTypeIndex(v string) {
	o.TypeIndex = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BurpVulnerability) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BurpVulnerability) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BurpVulnerability) SetDescription(v string) {
	o.Description = &v
}

// GetOrigin returns the Origin field value
func (o *BurpVulnerability) GetOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Origin, true
}

// SetOrigin sets field value
func (o *BurpVulnerability) SetOrigin(v string) {
	o.Origin = v
}

// GetPath returns the Path field value
func (o *BurpVulnerability) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *BurpVulnerability) SetPath(v string) {
	o.Path = v
}

// GetBackground returns the Background field value
func (o *BurpVulnerability) GetBackground() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Background
}

// GetBackgroundOk returns a tuple with the Background field value
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetBackgroundOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Background, true
}

// SetBackground sets field value
func (o *BurpVulnerability) SetBackground(v string) {
	o.Background = v
}

// GetRemediation returns the Remediation field value if set, zero value otherwise.
func (o *BurpVulnerability) GetRemediation() string {
	if o == nil || o.Remediation == nil {
		var ret string
		return ret
	}
	return *o.Remediation
}

// GetRemediationOk returns a tuple with the Remediation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BurpVulnerability) GetRemediationOk() (*string, bool) {
	if o == nil || o.Remediation == nil {
		return nil, false
	}
	return o.Remediation, true
}

// HasRemediation returns a boolean if a field has been set.
func (o *BurpVulnerability) HasRemediation() bool {
	if o != nil && o.Remediation != nil {
		return true
	}

	return false
}

// SetRemediation gets a reference to the given string and assigns it to the Remediation field.
func (o *BurpVulnerability) SetRemediation(v string) {
	o.Remediation = &v
}

func (o BurpVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["company"] = o.Company
	}
	if true {
		toSerialize["uid"] = o.Uid
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if true {
		toSerialize["entity"] = o.Entity
	}
	if o.Score != nil {
		toSerialize["score"] = o.Score
	}
	if o.Resolution != nil {
		toSerialize["resolution"] = o.Resolution
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type_index"] = o.TypeIndex
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["origin"] = o.Origin
	}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["background"] = o.Background
	}
	if o.Remediation != nil {
		toSerialize["remediation"] = o.Remediation
	}
	return json.Marshal(toSerialize)
}

type NullableBurpVulnerability struct {
	value *BurpVulnerability
	isSet bool
}

func (v NullableBurpVulnerability) Get() *BurpVulnerability {
	return v.value
}

func (v *NullableBurpVulnerability) Set(val *BurpVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableBurpVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableBurpVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBurpVulnerability(val *BurpVulnerability) *NullableBurpVulnerability {
	return &NullableBurpVulnerability{value: val, isSet: true}
}

func (v NullableBurpVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBurpVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


