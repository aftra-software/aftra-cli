/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// CompanyQuestionList struct for CompanyQuestionList
type CompanyQuestionList struct {
	Pk string `json:"pk"`
	Updated *time.Time `json:"updated,omitempty"`
	Type *string `json:"type,omitempty"`
	Mfa *MFAAnswer `json:"mfa,omitempty"`
	PasswordLength *PasswordLengthAnswer `json:"passwordLength,omitempty"`
	PasswordManager *PasswordManagerAnswer `json:"passwordManager,omitempty"`
	PasswordScreen *PasswordScreenAnswer `json:"passwordScreen,omitempty"`
	DisclosurePolicy *DisclosurePolicyAnswer `json:"disclosurePolicy,omitempty"`
	Vdp *VDPAnswer `json:"vdp,omitempty"`
	Vip *VIPAnswer `json:"vip,omitempty"`
	VulnScan *VulnScanAnswer `json:"vulnScan,omitempty"`
}

// NewCompanyQuestionList instantiates a new CompanyQuestionList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyQuestionList(pk string) *CompanyQuestionList {
	this := CompanyQuestionList{}
	this.Pk = pk
	var type_ string = "company-questions"
	this.Type = &type_
	return &this
}

// NewCompanyQuestionListWithDefaults instantiates a new CompanyQuestionList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyQuestionListWithDefaults() *CompanyQuestionList {
	this := CompanyQuestionList{}
	var type_ string = "company-questions"
	this.Type = &type_
	return &this
}

// GetPk returns the Pk field value
func (o *CompanyQuestionList) GetPk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetPkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *CompanyQuestionList) SetPk(v string) {
	o.Pk = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *CompanyQuestionList) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CompanyQuestionList) SetType(v string) {
	o.Type = &v
}

// GetMfa returns the Mfa field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetMfa() MFAAnswer {
	if o == nil || o.Mfa == nil {
		var ret MFAAnswer
		return ret
	}
	return *o.Mfa
}

// GetMfaOk returns a tuple with the Mfa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetMfaOk() (*MFAAnswer, bool) {
	if o == nil || o.Mfa == nil {
		return nil, false
	}
	return o.Mfa, true
}

// HasMfa returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasMfa() bool {
	if o != nil && o.Mfa != nil {
		return true
	}

	return false
}

// SetMfa gets a reference to the given MFAAnswer and assigns it to the Mfa field.
func (o *CompanyQuestionList) SetMfa(v MFAAnswer) {
	o.Mfa = &v
}

// GetPasswordLength returns the PasswordLength field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetPasswordLength() PasswordLengthAnswer {
	if o == nil || o.PasswordLength == nil {
		var ret PasswordLengthAnswer
		return ret
	}
	return *o.PasswordLength
}

// GetPasswordLengthOk returns a tuple with the PasswordLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetPasswordLengthOk() (*PasswordLengthAnswer, bool) {
	if o == nil || o.PasswordLength == nil {
		return nil, false
	}
	return o.PasswordLength, true
}

// HasPasswordLength returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasPasswordLength() bool {
	if o != nil && o.PasswordLength != nil {
		return true
	}

	return false
}

// SetPasswordLength gets a reference to the given PasswordLengthAnswer and assigns it to the PasswordLength field.
func (o *CompanyQuestionList) SetPasswordLength(v PasswordLengthAnswer) {
	o.PasswordLength = &v
}

// GetPasswordManager returns the PasswordManager field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetPasswordManager() PasswordManagerAnswer {
	if o == nil || o.PasswordManager == nil {
		var ret PasswordManagerAnswer
		return ret
	}
	return *o.PasswordManager
}

// GetPasswordManagerOk returns a tuple with the PasswordManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetPasswordManagerOk() (*PasswordManagerAnswer, bool) {
	if o == nil || o.PasswordManager == nil {
		return nil, false
	}
	return o.PasswordManager, true
}

// HasPasswordManager returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasPasswordManager() bool {
	if o != nil && o.PasswordManager != nil {
		return true
	}

	return false
}

// SetPasswordManager gets a reference to the given PasswordManagerAnswer and assigns it to the PasswordManager field.
func (o *CompanyQuestionList) SetPasswordManager(v PasswordManagerAnswer) {
	o.PasswordManager = &v
}

// GetPasswordScreen returns the PasswordScreen field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetPasswordScreen() PasswordScreenAnswer {
	if o == nil || o.PasswordScreen == nil {
		var ret PasswordScreenAnswer
		return ret
	}
	return *o.PasswordScreen
}

// GetPasswordScreenOk returns a tuple with the PasswordScreen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetPasswordScreenOk() (*PasswordScreenAnswer, bool) {
	if o == nil || o.PasswordScreen == nil {
		return nil, false
	}
	return o.PasswordScreen, true
}

// HasPasswordScreen returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasPasswordScreen() bool {
	if o != nil && o.PasswordScreen != nil {
		return true
	}

	return false
}

// SetPasswordScreen gets a reference to the given PasswordScreenAnswer and assigns it to the PasswordScreen field.
func (o *CompanyQuestionList) SetPasswordScreen(v PasswordScreenAnswer) {
	o.PasswordScreen = &v
}

// GetDisclosurePolicy returns the DisclosurePolicy field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetDisclosurePolicy() DisclosurePolicyAnswer {
	if o == nil || o.DisclosurePolicy == nil {
		var ret DisclosurePolicyAnswer
		return ret
	}
	return *o.DisclosurePolicy
}

// GetDisclosurePolicyOk returns a tuple with the DisclosurePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetDisclosurePolicyOk() (*DisclosurePolicyAnswer, bool) {
	if o == nil || o.DisclosurePolicy == nil {
		return nil, false
	}
	return o.DisclosurePolicy, true
}

// HasDisclosurePolicy returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasDisclosurePolicy() bool {
	if o != nil && o.DisclosurePolicy != nil {
		return true
	}

	return false
}

// SetDisclosurePolicy gets a reference to the given DisclosurePolicyAnswer and assigns it to the DisclosurePolicy field.
func (o *CompanyQuestionList) SetDisclosurePolicy(v DisclosurePolicyAnswer) {
	o.DisclosurePolicy = &v
}

// GetVdp returns the Vdp field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetVdp() VDPAnswer {
	if o == nil || o.Vdp == nil {
		var ret VDPAnswer
		return ret
	}
	return *o.Vdp
}

// GetVdpOk returns a tuple with the Vdp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetVdpOk() (*VDPAnswer, bool) {
	if o == nil || o.Vdp == nil {
		return nil, false
	}
	return o.Vdp, true
}

// HasVdp returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasVdp() bool {
	if o != nil && o.Vdp != nil {
		return true
	}

	return false
}

// SetVdp gets a reference to the given VDPAnswer and assigns it to the Vdp field.
func (o *CompanyQuestionList) SetVdp(v VDPAnswer) {
	o.Vdp = &v
}

// GetVip returns the Vip field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetVip() VIPAnswer {
	if o == nil || o.Vip == nil {
		var ret VIPAnswer
		return ret
	}
	return *o.Vip
}

// GetVipOk returns a tuple with the Vip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetVipOk() (*VIPAnswer, bool) {
	if o == nil || o.Vip == nil {
		return nil, false
	}
	return o.Vip, true
}

// HasVip returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasVip() bool {
	if o != nil && o.Vip != nil {
		return true
	}

	return false
}

// SetVip gets a reference to the given VIPAnswer and assigns it to the Vip field.
func (o *CompanyQuestionList) SetVip(v VIPAnswer) {
	o.Vip = &v
}

// GetVulnScan returns the VulnScan field value if set, zero value otherwise.
func (o *CompanyQuestionList) GetVulnScan() VulnScanAnswer {
	if o == nil || o.VulnScan == nil {
		var ret VulnScanAnswer
		return ret
	}
	return *o.VulnScan
}

// GetVulnScanOk returns a tuple with the VulnScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyQuestionList) GetVulnScanOk() (*VulnScanAnswer, bool) {
	if o == nil || o.VulnScan == nil {
		return nil, false
	}
	return o.VulnScan, true
}

// HasVulnScan returns a boolean if a field has been set.
func (o *CompanyQuestionList) HasVulnScan() bool {
	if o != nil && o.VulnScan != nil {
		return true
	}

	return false
}

// SetVulnScan gets a reference to the given VulnScanAnswer and assigns it to the VulnScan field.
func (o *CompanyQuestionList) SetVulnScan(v VulnScanAnswer) {
	o.VulnScan = &v
}

func (o CompanyQuestionList) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Mfa != nil {
		toSerialize["mfa"] = o.Mfa
	}
	if o.PasswordLength != nil {
		toSerialize["passwordLength"] = o.PasswordLength
	}
	if o.PasswordManager != nil {
		toSerialize["passwordManager"] = o.PasswordManager
	}
	if o.PasswordScreen != nil {
		toSerialize["passwordScreen"] = o.PasswordScreen
	}
	if o.DisclosurePolicy != nil {
		toSerialize["disclosurePolicy"] = o.DisclosurePolicy
	}
	if o.Vdp != nil {
		toSerialize["vdp"] = o.Vdp
	}
	if o.Vip != nil {
		toSerialize["vip"] = o.Vip
	}
	if o.VulnScan != nil {
		toSerialize["vulnScan"] = o.VulnScan
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyQuestionList struct {
	value *CompanyQuestionList
	isSet bool
}

func (v NullableCompanyQuestionList) Get() *CompanyQuestionList {
	return v.value
}

func (v *NullableCompanyQuestionList) Set(val *CompanyQuestionList) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyQuestionList) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyQuestionList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyQuestionList(val *CompanyQuestionList) *NullableCompanyQuestionList {
	return &NullableCompanyQuestionList{value: val, isSet: true}
}

func (v NullableCompanyQuestionList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyQuestionList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


