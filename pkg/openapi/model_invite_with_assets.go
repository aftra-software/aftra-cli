/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InviteWithAssets struct for InviteWithAssets
type InviteWithAssets struct {
	Assets PaginatedEntityCollectionMetaEntity `json:"assets"`
	Entity InviteEntity `json:"entity"`
}

// NewInviteWithAssets instantiates a new InviteWithAssets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteWithAssets(assets PaginatedEntityCollectionMetaEntity, entity InviteEntity) *InviteWithAssets {
	this := InviteWithAssets{}
	this.Assets = assets
	this.Entity = entity
	return &this
}

// NewInviteWithAssetsWithDefaults instantiates a new InviteWithAssets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteWithAssetsWithDefaults() *InviteWithAssets {
	this := InviteWithAssets{}
	return &this
}

// GetAssets returns the Assets field value
func (o *InviteWithAssets) GetAssets() PaginatedEntityCollectionMetaEntity {
	if o == nil {
		var ret PaginatedEntityCollectionMetaEntity
		return ret
	}

	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value
// and a boolean to check if the value has been set.
func (o *InviteWithAssets) GetAssetsOk() (*PaginatedEntityCollectionMetaEntity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Assets, true
}

// SetAssets sets field value
func (o *InviteWithAssets) SetAssets(v PaginatedEntityCollectionMetaEntity) {
	o.Assets = v
}

// GetEntity returns the Entity field value
func (o *InviteWithAssets) GetEntity() InviteEntity {
	if o == nil {
		var ret InviteEntity
		return ret
	}

	return o.Entity
}

// GetEntityOk returns a tuple with the Entity field value
// and a boolean to check if the value has been set.
func (o *InviteWithAssets) GetEntityOk() (*InviteEntity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Entity, true
}

// SetEntity sets field value
func (o *InviteWithAssets) SetEntity(v InviteEntity) {
	o.Entity = v
}

func (o InviteWithAssets) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["assets"] = o.Assets
	}
	if true {
		toSerialize["entity"] = o.Entity
	}
	return json.Marshal(toSerialize)
}

type NullableInviteWithAssets struct {
	value *InviteWithAssets
	isSet bool
}

func (v NullableInviteWithAssets) Get() *InviteWithAssets {
	return v.value
}

func (v *NullableInviteWithAssets) Set(val *InviteWithAssets) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteWithAssets) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteWithAssets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteWithAssets(val *InviteWithAssets) *NullableInviteWithAssets {
	return &NullableInviteWithAssets{value: val, isSet: true}
}

func (v NullableInviteWithAssets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteWithAssets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


