/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CompanyUpdate struct for CompanyUpdate
type CompanyUpdate struct {
	MainContact *string `json:"mainContact,omitempty"`
	Website *string `json:"website,omitempty"`
	EmployeeCount *int32 `json:"employeeCount,omitempty"`
	EmployeeCountIt *int32 `json:"employeeCountIt,omitempty"`
	Sector *CompanySector `json:"sector,omitempty"`
	VulnScanFrequency *ScanFrequency `json:"vulnScanFrequency,omitempty"`
}

// NewCompanyUpdate instantiates a new CompanyUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompanyUpdate() *CompanyUpdate {
	this := CompanyUpdate{}
	return &this
}

// NewCompanyUpdateWithDefaults instantiates a new CompanyUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompanyUpdateWithDefaults() *CompanyUpdate {
	this := CompanyUpdate{}
	return &this
}

// GetMainContact returns the MainContact field value if set, zero value otherwise.
func (o *CompanyUpdate) GetMainContact() string {
	if o == nil || o.MainContact == nil {
		var ret string
		return ret
	}
	return *o.MainContact
}

// GetMainContactOk returns a tuple with the MainContact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyUpdate) GetMainContactOk() (*string, bool) {
	if o == nil || o.MainContact == nil {
		return nil, false
	}
	return o.MainContact, true
}

// HasMainContact returns a boolean if a field has been set.
func (o *CompanyUpdate) HasMainContact() bool {
	if o != nil && o.MainContact != nil {
		return true
	}

	return false
}

// SetMainContact gets a reference to the given string and assigns it to the MainContact field.
func (o *CompanyUpdate) SetMainContact(v string) {
	o.MainContact = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CompanyUpdate) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyUpdate) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CompanyUpdate) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CompanyUpdate) SetWebsite(v string) {
	o.Website = &v
}

// GetEmployeeCount returns the EmployeeCount field value if set, zero value otherwise.
func (o *CompanyUpdate) GetEmployeeCount() int32 {
	if o == nil || o.EmployeeCount == nil {
		var ret int32
		return ret
	}
	return *o.EmployeeCount
}

// GetEmployeeCountOk returns a tuple with the EmployeeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyUpdate) GetEmployeeCountOk() (*int32, bool) {
	if o == nil || o.EmployeeCount == nil {
		return nil, false
	}
	return o.EmployeeCount, true
}

// HasEmployeeCount returns a boolean if a field has been set.
func (o *CompanyUpdate) HasEmployeeCount() bool {
	if o != nil && o.EmployeeCount != nil {
		return true
	}

	return false
}

// SetEmployeeCount gets a reference to the given int32 and assigns it to the EmployeeCount field.
func (o *CompanyUpdate) SetEmployeeCount(v int32) {
	o.EmployeeCount = &v
}

// GetEmployeeCountIt returns the EmployeeCountIt field value if set, zero value otherwise.
func (o *CompanyUpdate) GetEmployeeCountIt() int32 {
	if o == nil || o.EmployeeCountIt == nil {
		var ret int32
		return ret
	}
	return *o.EmployeeCountIt
}

// GetEmployeeCountItOk returns a tuple with the EmployeeCountIt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyUpdate) GetEmployeeCountItOk() (*int32, bool) {
	if o == nil || o.EmployeeCountIt == nil {
		return nil, false
	}
	return o.EmployeeCountIt, true
}

// HasEmployeeCountIt returns a boolean if a field has been set.
func (o *CompanyUpdate) HasEmployeeCountIt() bool {
	if o != nil && o.EmployeeCountIt != nil {
		return true
	}

	return false
}

// SetEmployeeCountIt gets a reference to the given int32 and assigns it to the EmployeeCountIt field.
func (o *CompanyUpdate) SetEmployeeCountIt(v int32) {
	o.EmployeeCountIt = &v
}

// GetSector returns the Sector field value if set, zero value otherwise.
func (o *CompanyUpdate) GetSector() CompanySector {
	if o == nil || o.Sector == nil {
		var ret CompanySector
		return ret
	}
	return *o.Sector
}

// GetSectorOk returns a tuple with the Sector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyUpdate) GetSectorOk() (*CompanySector, bool) {
	if o == nil || o.Sector == nil {
		return nil, false
	}
	return o.Sector, true
}

// HasSector returns a boolean if a field has been set.
func (o *CompanyUpdate) HasSector() bool {
	if o != nil && o.Sector != nil {
		return true
	}

	return false
}

// SetSector gets a reference to the given CompanySector and assigns it to the Sector field.
func (o *CompanyUpdate) SetSector(v CompanySector) {
	o.Sector = &v
}

// GetVulnScanFrequency returns the VulnScanFrequency field value if set, zero value otherwise.
func (o *CompanyUpdate) GetVulnScanFrequency() ScanFrequency {
	if o == nil || o.VulnScanFrequency == nil {
		var ret ScanFrequency
		return ret
	}
	return *o.VulnScanFrequency
}

// GetVulnScanFrequencyOk returns a tuple with the VulnScanFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompanyUpdate) GetVulnScanFrequencyOk() (*ScanFrequency, bool) {
	if o == nil || o.VulnScanFrequency == nil {
		return nil, false
	}
	return o.VulnScanFrequency, true
}

// HasVulnScanFrequency returns a boolean if a field has been set.
func (o *CompanyUpdate) HasVulnScanFrequency() bool {
	if o != nil && o.VulnScanFrequency != nil {
		return true
	}

	return false
}

// SetVulnScanFrequency gets a reference to the given ScanFrequency and assigns it to the VulnScanFrequency field.
func (o *CompanyUpdate) SetVulnScanFrequency(v ScanFrequency) {
	o.VulnScanFrequency = &v
}

func (o CompanyUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MainContact != nil {
		toSerialize["mainContact"] = o.MainContact
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.EmployeeCount != nil {
		toSerialize["employeeCount"] = o.EmployeeCount
	}
	if o.EmployeeCountIt != nil {
		toSerialize["employeeCountIt"] = o.EmployeeCountIt
	}
	if o.Sector != nil {
		toSerialize["sector"] = o.Sector
	}
	if o.VulnScanFrequency != nil {
		toSerialize["vulnScanFrequency"] = o.VulnScanFrequency
	}
	return json.Marshal(toSerialize)
}

type NullableCompanyUpdate struct {
	value *CompanyUpdate
	isSet bool
}

func (v NullableCompanyUpdate) Get() *CompanyUpdate {
	return v.value
}

func (v *NullableCompanyUpdate) Set(val *CompanyUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCompanyUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCompanyUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompanyUpdate(val *CompanyUpdate) *NullableCompanyUpdate {
	return &NullableCompanyUpdate{value: val, isSet: true}
}

func (v NullableCompanyUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompanyUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


