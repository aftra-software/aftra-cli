/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MaskedToken struct for MaskedToken
type MaskedToken struct {
	Name string `json:"name"`
	Id string `json:"id"`
	Company string `json:"company"`
}

// NewMaskedToken instantiates a new MaskedToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaskedToken(name string, id string, company string) *MaskedToken {
	this := MaskedToken{}
	this.Name = name
	this.Id = id
	this.Company = company
	return &this
}

// NewMaskedTokenWithDefaults instantiates a new MaskedToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaskedTokenWithDefaults() *MaskedToken {
	this := MaskedToken{}
	return &this
}

// GetName returns the Name field value
func (o *MaskedToken) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MaskedToken) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MaskedToken) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *MaskedToken) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MaskedToken) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MaskedToken) SetId(v string) {
	o.Id = v
}

// GetCompany returns the Company field value
func (o *MaskedToken) GetCompany() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Company
}

// GetCompanyOk returns a tuple with the Company field value
// and a boolean to check if the value has been set.
func (o *MaskedToken) GetCompanyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Company, true
}

// SetCompany sets field value
func (o *MaskedToken) SetCompany(v string) {
	o.Company = v
}

func (o MaskedToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["company"] = o.Company
	}
	return json.Marshal(toSerialize)
}

type NullableMaskedToken struct {
	value *MaskedToken
	isSet bool
}

func (v NullableMaskedToken) Get() *MaskedToken {
	return v.value
}

func (v *NullableMaskedToken) Set(val *MaskedToken) {
	v.value = val
	v.isSet = true
}

func (v NullableMaskedToken) IsSet() bool {
	return v.isSet
}

func (v *NullableMaskedToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaskedToken(val *MaskedToken) *NullableMaskedToken {
	return &NullableMaskedToken{value: val, isSet: true}
}

func (v NullableMaskedToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaskedToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


