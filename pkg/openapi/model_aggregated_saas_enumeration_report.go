/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AggregatedSaasEnumerationReport struct for AggregatedSaasEnumerationReport
type AggregatedSaasEnumerationReport struct {
	Pk string `json:"pk"`
	Updated *time.Time `json:"updated,omitempty"`
	Type *string `json:"type,omitempty"`
	Services []string `json:"services,omitempty"`
}

// NewAggregatedSaasEnumerationReport instantiates a new AggregatedSaasEnumerationReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregatedSaasEnumerationReport(pk string) *AggregatedSaasEnumerationReport {
	this := AggregatedSaasEnumerationReport{}
	this.Pk = pk
	var type_ string = "aggregated-saas-enumeration"
	this.Type = &type_
	return &this
}

// NewAggregatedSaasEnumerationReportWithDefaults instantiates a new AggregatedSaasEnumerationReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregatedSaasEnumerationReportWithDefaults() *AggregatedSaasEnumerationReport {
	this := AggregatedSaasEnumerationReport{}
	var type_ string = "aggregated-saas-enumeration"
	this.Type = &type_
	return &this
}

// GetPk returns the Pk field value
func (o *AggregatedSaasEnumerationReport) GetPk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *AggregatedSaasEnumerationReport) GetPkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *AggregatedSaasEnumerationReport) SetPk(v string) {
	o.Pk = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AggregatedSaasEnumerationReport) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregatedSaasEnumerationReport) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AggregatedSaasEnumerationReport) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *AggregatedSaasEnumerationReport) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AggregatedSaasEnumerationReport) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregatedSaasEnumerationReport) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AggregatedSaasEnumerationReport) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AggregatedSaasEnumerationReport) SetType(v string) {
	o.Type = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *AggregatedSaasEnumerationReport) GetServices() []string {
	if o == nil || o.Services == nil {
		var ret []string
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregatedSaasEnumerationReport) GetServicesOk() ([]string, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *AggregatedSaasEnumerationReport) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []string and assigns it to the Services field.
func (o *AggregatedSaasEnumerationReport) SetServices(v []string) {
	o.Services = v
}

func (o AggregatedSaasEnumerationReport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	return json.Marshal(toSerialize)
}

type NullableAggregatedSaasEnumerationReport struct {
	value *AggregatedSaasEnumerationReport
	isSet bool
}

func (v NullableAggregatedSaasEnumerationReport) Get() *AggregatedSaasEnumerationReport {
	return v.value
}

func (v *NullableAggregatedSaasEnumerationReport) Set(val *AggregatedSaasEnumerationReport) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregatedSaasEnumerationReport) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregatedSaasEnumerationReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregatedSaasEnumerationReport(val *AggregatedSaasEnumerationReport) *NullableAggregatedSaasEnumerationReport {
	return &NullableAggregatedSaasEnumerationReport{value: val, isSet: true}
}

func (v NullableAggregatedSaasEnumerationReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregatedSaasEnumerationReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


