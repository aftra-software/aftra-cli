/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AccountCampaignEntity struct for AccountCampaignEntity
type AccountCampaignEntity struct {
	Pk string `json:"pk"`
	Sk string `json:"sk"`
	EntityType *string `json:"entityType,omitempty"`
	Created *time.Time `json:"created,omitempty"`
	Updated *time.Time `json:"updated,omitempty"`
	Name string `json:"name"`
	Services []string `json:"services"`
	RiskScore float32 `json:"riskScore"`
	Conclusion *AccountCampaignConclusion `json:"conclusion,omitempty"`
}

// NewAccountCampaignEntity instantiates a new AccountCampaignEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountCampaignEntity(pk string, sk string, name string, services []string, riskScore float32) *AccountCampaignEntity {
	this := AccountCampaignEntity{}
	this.Pk = pk
	this.Sk = sk
	this.Name = name
	this.Services = services
	this.RiskScore = riskScore
	return &this
}

// NewAccountCampaignEntityWithDefaults instantiates a new AccountCampaignEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountCampaignEntityWithDefaults() *AccountCampaignEntity {
	this := AccountCampaignEntity{}
	return &this
}

// GetPk returns the Pk field value
func (o *AccountCampaignEntity) GetPk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetPkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *AccountCampaignEntity) SetPk(v string) {
	o.Pk = v
}

// GetSk returns the Sk field value
func (o *AccountCampaignEntity) GetSk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sk
}

// GetSkOk returns a tuple with the Sk field value
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetSkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sk, true
}

// SetSk sets field value
func (o *AccountCampaignEntity) SetSk(v string) {
	o.Sk = v
}

// GetEntityType returns the EntityType field value if set, zero value otherwise.
func (o *AccountCampaignEntity) GetEntityType() string {
	if o == nil || o.EntityType == nil {
		var ret string
		return ret
	}
	return *o.EntityType
}

// GetEntityTypeOk returns a tuple with the EntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetEntityTypeOk() (*string, bool) {
	if o == nil || o.EntityType == nil {
		return nil, false
	}
	return o.EntityType, true
}

// HasEntityType returns a boolean if a field has been set.
func (o *AccountCampaignEntity) HasEntityType() bool {
	if o != nil && o.EntityType != nil {
		return true
	}

	return false
}

// SetEntityType gets a reference to the given string and assigns it to the EntityType field.
func (o *AccountCampaignEntity) SetEntityType(v string) {
	o.EntityType = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *AccountCampaignEntity) GetCreated() time.Time {
	if o == nil || o.Created == nil {
		var ret time.Time
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetCreatedOk() (*time.Time, bool) {
	if o == nil || o.Created == nil {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *AccountCampaignEntity) HasCreated() bool {
	if o != nil && o.Created != nil {
		return true
	}

	return false
}

// SetCreated gets a reference to the given time.Time and assigns it to the Created field.
func (o *AccountCampaignEntity) SetCreated(v time.Time) {
	o.Created = &v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AccountCampaignEntity) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AccountCampaignEntity) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *AccountCampaignEntity) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetName returns the Name field value
func (o *AccountCampaignEntity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AccountCampaignEntity) SetName(v string) {
	o.Name = v
}

// GetServices returns the Services field value
func (o *AccountCampaignEntity) GetServices() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Services
}

// GetServicesOk returns a tuple with the Services field value
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetServicesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Services, true
}

// SetServices sets field value
func (o *AccountCampaignEntity) SetServices(v []string) {
	o.Services = v
}

// GetRiskScore returns the RiskScore field value
func (o *AccountCampaignEntity) GetRiskScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RiskScore
}

// GetRiskScoreOk returns a tuple with the RiskScore field value
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetRiskScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RiskScore, true
}

// SetRiskScore sets field value
func (o *AccountCampaignEntity) SetRiskScore(v float32) {
	o.RiskScore = v
}

// GetConclusion returns the Conclusion field value if set, zero value otherwise.
func (o *AccountCampaignEntity) GetConclusion() AccountCampaignConclusion {
	if o == nil || o.Conclusion == nil {
		var ret AccountCampaignConclusion
		return ret
	}
	return *o.Conclusion
}

// GetConclusionOk returns a tuple with the Conclusion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountCampaignEntity) GetConclusionOk() (*AccountCampaignConclusion, bool) {
	if o == nil || o.Conclusion == nil {
		return nil, false
	}
	return o.Conclusion, true
}

// HasConclusion returns a boolean if a field has been set.
func (o *AccountCampaignEntity) HasConclusion() bool {
	if o != nil && o.Conclusion != nil {
		return true
	}

	return false
}

// SetConclusion gets a reference to the given AccountCampaignConclusion and assigns it to the Conclusion field.
func (o *AccountCampaignEntity) SetConclusion(v AccountCampaignConclusion) {
	o.Conclusion = &v
}

func (o AccountCampaignEntity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if true {
		toSerialize["sk"] = o.Sk
	}
	if o.EntityType != nil {
		toSerialize["entityType"] = o.EntityType
	}
	if o.Created != nil {
		toSerialize["created"] = o.Created
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["services"] = o.Services
	}
	if true {
		toSerialize["riskScore"] = o.RiskScore
	}
	if o.Conclusion != nil {
		toSerialize["conclusion"] = o.Conclusion
	}
	return json.Marshal(toSerialize)
}

type NullableAccountCampaignEntity struct {
	value *AccountCampaignEntity
	isSet bool
}

func (v NullableAccountCampaignEntity) Get() *AccountCampaignEntity {
	return v.value
}

func (v *NullableAccountCampaignEntity) Set(val *AccountCampaignEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountCampaignEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountCampaignEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountCampaignEntity(val *AccountCampaignEntity) *NullableAccountCampaignEntity {
	return &NullableAccountCampaignEntity{value: val, isSet: true}
}

func (v NullableAccountCampaignEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountCampaignEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


