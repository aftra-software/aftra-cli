/*
Web backend for Vikingr

The main api for Vikingr

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// AccountServicesSummary struct for AccountServicesSummary
type AccountServicesSummary struct {
	Pk string `json:"pk"`
	Updated *time.Time `json:"updated,omitempty"`
	Type *string `json:"type,omitempty"`
	ServiceCounts map[string]int32 `json:"serviceCounts"`
}

// NewAccountServicesSummary instantiates a new AccountServicesSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccountServicesSummary(pk string, serviceCounts map[string]int32) *AccountServicesSummary {
	this := AccountServicesSummary{}
	this.Pk = pk
	var type_ string = "account-services-summary"
	this.Type = &type_
	this.ServiceCounts = serviceCounts
	return &this
}

// NewAccountServicesSummaryWithDefaults instantiates a new AccountServicesSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccountServicesSummaryWithDefaults() *AccountServicesSummary {
	this := AccountServicesSummary{}
	var type_ string = "account-services-summary"
	this.Type = &type_
	return &this
}

// GetPk returns the Pk field value
func (o *AccountServicesSummary) GetPk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pk
}

// GetPkOk returns a tuple with the Pk field value
// and a boolean to check if the value has been set.
func (o *AccountServicesSummary) GetPkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pk, true
}

// SetPk sets field value
func (o *AccountServicesSummary) SetPk(v string) {
	o.Pk = v
}

// GetUpdated returns the Updated field value if set, zero value otherwise.
func (o *AccountServicesSummary) GetUpdated() time.Time {
	if o == nil || o.Updated == nil {
		var ret time.Time
		return ret
	}
	return *o.Updated
}

// GetUpdatedOk returns a tuple with the Updated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountServicesSummary) GetUpdatedOk() (*time.Time, bool) {
	if o == nil || o.Updated == nil {
		return nil, false
	}
	return o.Updated, true
}

// HasUpdated returns a boolean if a field has been set.
func (o *AccountServicesSummary) HasUpdated() bool {
	if o != nil && o.Updated != nil {
		return true
	}

	return false
}

// SetUpdated gets a reference to the given time.Time and assigns it to the Updated field.
func (o *AccountServicesSummary) SetUpdated(v time.Time) {
	o.Updated = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AccountServicesSummary) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccountServicesSummary) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AccountServicesSummary) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AccountServicesSummary) SetType(v string) {
	o.Type = &v
}

// GetServiceCounts returns the ServiceCounts field value
func (o *AccountServicesSummary) GetServiceCounts() map[string]int32 {
	if o == nil {
		var ret map[string]int32
		return ret
	}

	return o.ServiceCounts
}

// GetServiceCountsOk returns a tuple with the ServiceCounts field value
// and a boolean to check if the value has been set.
func (o *AccountServicesSummary) GetServiceCountsOk() (*map[string]int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceCounts, true
}

// SetServiceCounts sets field value
func (o *AccountServicesSummary) SetServiceCounts(v map[string]int32) {
	o.ServiceCounts = v
}

func (o AccountServicesSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pk"] = o.Pk
	}
	if o.Updated != nil {
		toSerialize["updated"] = o.Updated
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["serviceCounts"] = o.ServiceCounts
	}
	return json.Marshal(toSerialize)
}

type NullableAccountServicesSummary struct {
	value *AccountServicesSummary
	isSet bool
}

func (v NullableAccountServicesSummary) Get() *AccountServicesSummary {
	return v.value
}

func (v *NullableAccountServicesSummary) Set(val *AccountServicesSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableAccountServicesSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableAccountServicesSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccountServicesSummary(val *AccountServicesSummary) *NullableAccountServicesSummary {
	return &NullableAccountServicesSummary{value: val, isSet: true}
}

func (v NullableAccountServicesSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccountServicesSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


