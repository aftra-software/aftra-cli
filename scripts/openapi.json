{
  "openapi": "3.0.2",
  "info": {
    "title": "Web backend for Vikingr",
    "description": "The main api for Vikingr",
    "version": "0.1.0"
  },
  "paths": {
    "/api/auth/callback": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Callback",
        "operationId": "callback_api_auth_callback_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "State",
              "type": "string"
            },
            "name": "state",
            "in": "cookie"
          },
          {
            "required": false,
            "schema": {
              "title": "Post Login",
              "type": "string",
              "default": ""
            },
            "name": "post_login",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "operationId": "logout_api_auth_logout_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/auth/myself": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Myself",
        "operationId": "myself_api_auth_myself_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CognitoIdentity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Profile",
        "operationId": "profile_api_auth_profile_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Authorization",
              "type": "string"
            },
            "name": "authorization",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessUser"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Signup",
        "operationId": "signup_api_auth_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/confirm/{email}/{code}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Confirm Signup",
        "operationId": "confirm_signup_api_auth_confirm__email___code__get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Email",
              "type": "string"
            },
            "name": "email",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Code",
              "type": "string"
            },
            "name": "code",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login",
        "operationId": "login_api_auth_login_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponseMfaChallenge"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/software-mfa-setup": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Software Mfa Setup",
        "operationId": "software_mfa_setup_api_auth_software_mfa_setup_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Authorization",
              "type": "string"
            },
            "name": "authorization",
            "in": "cookie"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFASetupChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/mfa-challenge": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Mfa Challenge",
        "operationId": "mfa_challenge_api_auth_mfa_challenge_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MFALoginChallengeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Google Redirect",
        "operationId": "google_redirect_api_auth_google_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/api/auth/forgot-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Forgot Password",
        "operationId": "forgot_password_api_auth_forgot_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/reset-password": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Reset Password",
        "operationId": "reset_password_api_auth_reset_password_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "List Companies",
        "operationId": "List companies",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Companies",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyWithUserAccess"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "companies"
        ],
        "summary": "Create Company",
        "operationId": "Create company",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/companies/{company_pk}": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get Company",
        "operationId": "Get company",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/scan/{asset_type}": {
      "post": {
        "tags": [
          "companies"
        ],
        "summary": "Scan Company Asset",
        "operationId": "scan_company_asset_api_companies__company_pk__scan__asset_type__post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "asset_type",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Asset Type",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/score/{back_date}": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get Score",
        "operationId": "Get company score",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "back_date",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BackDates"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HistoricalScores"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/": {
      "patch": {
        "tags": [
          "companies"
        ],
        "summary": "Update Company",
        "operationId": "Update company",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/services-summary": {
      "get": {
        "tags": [
          "companies"
        ],
        "summary": "Get Saas Services",
        "operationId": "get_saas_services_api_companies__company_pk__services_summary_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AggregatedSaasEnumerationReport"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/api-tokens/": {
      "post": {
        "tags": [
          "api_tokens"
        ],
        "summary": "Create",
        "operationId": "Create API token",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "api_tokens"
        ],
        "summary": "List Tokens",
        "operationId": "List API tokens",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Api Tokens",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaskedToken"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/api-tokens/{token_uid}/": {
      "delete": {
        "tags": [
          "api_tokens"
        ],
        "summary": "Delete Token",
        "operationId": "Delete API token",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "token_uid",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Token Uid",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/suggestions/": {
      "get": {
        "tags": [
          "suggestions"
        ],
        "summary": "List Suggestions",
        "operationId": "list_suggestions_api_companies__company_pk__suggestions__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_type",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SuggestionEntityTypes"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Suggestions Api Companies  Company Pk  Suggestions  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Suggestion"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/suggestions/{suggestion_id}": {
      "get": {
        "tags": [
          "suggestions"
        ],
        "summary": "Get Suggestion",
        "operationId": "get_suggestion_api_companies__company_pk__suggestions__suggestion_id__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "suggestion_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Suggestion Id",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Suggestion"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "suggestions"
        ],
        "summary": "Accept Suggestion",
        "operationId": "accept_suggestion_api_companies__company_pk__suggestions__suggestion_id__post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "suggestion_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Suggestion Id",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Accept Suggestion Api Companies  Company Pk  Suggestions  Suggestion Id  Post",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DomainEntity"
                    },
                    {
                      "$ref": "#/components/schemas/SubdomainEntity"
                    },
                    {
                      "$ref": "#/components/schemas/AccountEntity"
                    },
                    {
                      "$ref": "#/components/schemas/RepositoryEntity"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "suggestions"
        ],
        "summary": "Reject Suggestion",
        "operationId": "reject_suggestion_api_companies__company_pk__suggestions__suggestion_id__delete",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "suggestion_id",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Suggestion Id",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/opportunities/": {
      "get": {
        "tags": [
          "opportunities"
        ],
        "summary": "List Opportunities",
        "operationId": "list_opportunities_api_companies__company_pk__opportunities__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "resolution",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response List Opportunities Api Companies  Company Pk  Opportunities  Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Opportunity"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "opportunities"
        ],
        "summary": "Create Opportunity",
        "operationId": "create_opportunity_api_companies__company_pk__opportunities__post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOpportunity"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/opportunities/{opportunity_uid}/details/": {
      "get": {
        "tags": [
          "opportunities"
        ],
        "summary": "Get Opportunity Details",
        "operationId": "Get opportunity details object",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "opportunity_uid",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Opportunity Uid",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpportunityDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/opportunities/{opportunity_uid}/": {
      "post": {
        "tags": [
          "opportunities"
        ],
        "summary": "Post Update Resolution",
        "operationId": "Post update opportunity resolution",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "opportunity_uid",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Opportunity Uid",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResolutionUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/questions/": {
      "get": {
        "tags": [
          "questions"
        ],
        "summary": "Get Questions",
        "operationId": "Get security questions",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyQuestionList"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{company_pk}/questions/{question_uid}/": {
      "post": {
        "tags": [
          "questions"
        ],
        "summary": "Post Update Answer",
        "operationId": "Post update answer",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "question_uid",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Question Uid",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyQuestionList"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/domains/{entity_pk}/verified": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Check Domain Verified",
        "operationId": "check domain verified",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerificationResult"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/domains/upload": {
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Upload Domain List",
        "operationId": "upload_domain_list_api_companies__parent_pk__domains_upload_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_domain_list_api_companies__parent_pk__domains_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/domains": {
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Add Domain To Company",
        "operationId": "add domain to company",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "List Company Domains",
        "operationId": "list company domains",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Marker",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Limit",
              "default": 1000,
              "type": "integer"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEntityCollection_DomainEntity_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/domains/{entity_pk}": {
      "put": {
        "tags": [
          "domains"
        ],
        "summary": "Update Company Domain",
        "operationId": "update company domain",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get Company Domain",
        "operationId": "get company domain",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainWithAssets"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "domains"
        ],
        "summary": "Remove Company Domain",
        "operationId": "remove company domain",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/domains/whois": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Whois Domain",
        "operationId": "whois domain",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Domain Name",
              "type": "string"
            },
            "name": "domain_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Whois Domain",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/WhoisData"
                    },
                    {
                      "$ref": "#/components/schemas/WhoisError"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/companies/domains/screenshot": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Domain Screenshot",
        "operationId": "domain screenshot",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Domain Name",
              "type": "string"
            },
            "name": "domain_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DomainScreenshot"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/domains/{parent_pk}/subdomains": {
      "post": {
        "tags": [
          "domains subdomains"
        ],
        "summary": "Add Subdomain To Domain",
        "operationId": "add subdomain to domain",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubdomainEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "domains subdomains"
        ],
        "summary": "List Domain Subdomains",
        "operationId": "list domain subdomains",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Marker",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Limit",
              "default": 1000,
              "type": "integer"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEntityCollection_SubdomainEntity_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/domains/{parent_pk}/subdomains/{entity_pk}": {
      "put": {
        "tags": [
          "domains subdomains"
        ],
        "summary": "Update Domain Subdomain",
        "operationId": "update domain subdomain",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Subdomain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Subdomain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Domain"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "domains subdomains"
        ],
        "summary": "Get Domain Subdomain",
        "operationId": "get domain subdomain",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Subdomain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Subdomain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubdomainWithAssets"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "domains subdomains"
        ],
        "summary": "Remove Domain Subdomain",
        "operationId": "remove domain subdomain",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Domain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Domain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Subdomain-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Subdomain-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts/upload": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Upload Account List",
        "operationId": "upload_account_list_api_companies__parent_pk__accounts_upload_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_account_list_api_companies__parent_pk__accounts_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts/{entity_pk}/services": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get Account Exposed Services",
        "operationId": "get_account_exposed_services_api_companies__parent_pk__accounts__entity_pk__services_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Account Exposed Services Api Companies  Parent Pk  Accounts  Entity Pk  Services Get",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts/services-summary": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get Account Exposed Services",
        "operationId": "get_account_exposed_services_api_companies__parent_pk__accounts_services_summary_get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountServicesSummary"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts/{entity_pk}/create-campaign": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Create Account Campaign",
        "operationId": "create_account_campaign_api_companies__parent_pk__accounts__entity_pk__create_campaign_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts/{entity_pk}/verify": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Send Email Verification",
        "operationId": "send_email_verification_api_companies__parent_pk__accounts__entity_pk__verify_post",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts/{entity_pk}/verify/{verification_secret}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Verify Account",
        "operationId": "verify_account_api_companies__parent_pk__accounts__entity_pk__verify__verification_secret__get",
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "verification_secret",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Verification Secret",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Add Account To Company",
        "operationId": "add account to company",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "List Company Accounts",
        "operationId": "list company accounts",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "name": "present_in_service",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Present In Service",
              "type": "string"
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Marker",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Limit",
              "default": 1000,
              "type": "integer"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEntityCollection_AccountEntity_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/accounts/{entity_pk}": {
      "put": {
        "tags": [
          "accounts"
        ],
        "summary": "Update Company Account",
        "operationId": "update company account",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Account"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get Company Account",
        "operationId": "get company account",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountWithAssets"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "accounts"
        ],
        "summary": "Remove Company Account",
        "operationId": "remove company account",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/repositories": {
      "get": {
        "tags": [
          "repositories"
        ],
        "summary": "List Company Repositories",
        "operationId": "list company repositories",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Marker",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Limit",
              "default": 1000,
              "type": "integer"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEntityCollection_RepositoryEntity_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/repositories/{entity_pk}": {
      "get": {
        "tags": [
          "repositories"
        ],
        "summary": "Get Company Repository",
        "operationId": "get company repository",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Repository-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Repository-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepositoryWithAssets"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "repositories"
        ],
        "summary": "Remove Company Repository",
        "operationId": "remove company repository",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Repository-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Repository-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/crud/{parent_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "List Company Integrations",
        "operationId": "list company integrations",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Marker",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Limit",
              "default": 1000,
              "type": "integer"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEntityCollection_IntegrationEntity_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/crud/{parent_pk}/{entity_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Get Company Integration",
        "operationId": "get company integration",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Integration-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Integration-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationWithAssets"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "integrations"
        ],
        "summary": "Remove Company Integration",
        "operationId": "remove company integration",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Integration-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Integration-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/google-workspaces/{company_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Google Workspaces",
        "description": "Initiate google workspaces integration",
        "operationId": "google_workspaces_api_integrations_google_workspaces__company_pk__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/google-workspaces": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Google Workspaces Callback",
        "description": "Callback for google workspaces integration",
        "operationId": "google_workspaces_callback_api_integrations_google_workspaces_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "State",
              "type": "string"
            },
            "name": "state",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Code",
              "type": "string"
            },
            "name": "code",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Google Workspaces State",
              "type": "string"
            },
            "name": "google_workspaces_state",
            "in": "cookie"
          },
          {
            "required": true,
            "schema": {
              "title": "Google Workspaces Company",
              "type": "string"
            },
            "name": "google_workspaces_company",
            "in": "cookie"
          },
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/integrations/microsoft-azure/{company_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Microsoft Azure Ad",
        "description": "Initiate microsoft azure AD integration",
        "operationId": "microsoft_azure_ad_api_integrations_microsoft_azure__company_pk__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/microsoft-azure": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Microsoft Azure Ad Callback",
        "description": "Callback for microsoft azure AD integration",
        "operationId": "microsoft_azure_ad_callback_api_integrations_microsoft_azure_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Microsoft Azure Ad Flow",
              "type": "string"
            },
            "name": "microsoft_azure_ad_flow",
            "in": "cookie"
          },
          {
            "required": true,
            "schema": {
              "title": "Microsoft Azure Ad Company",
              "type": "string"
            },
            "name": "microsoft_azure_ad_company",
            "in": "cookie"
          },
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/integrations/gitlab/{company_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Gitlab",
        "description": "Initiate gitlab integration",
        "operationId": "gitlab_api_integrations_gitlab__company_pk__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/gitlab": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Gitlab Callback",
        "description": "Callback for gitlab integration",
        "operationId": "gitlab_callback_api_integrations_gitlab_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "State",
              "type": "string"
            },
            "name": "state",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Gitlab State",
              "type": "string"
            },
            "name": "gitlab_state",
            "in": "cookie"
          },
          {
            "required": true,
            "schema": {
              "title": "Gitlab Company",
              "type": "string"
            },
            "name": "gitlab_company",
            "in": "cookie"
          },
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/integrations/github/{company_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Github",
        "description": "Initiate github integration",
        "operationId": "github_api_integrations_github__company_pk__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/github": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Github Callback",
        "description": "Callback for github integration",
        "operationId": "github_callback_api_integrations_github_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Installation Id",
              "type": "string"
            },
            "name": "installation_id",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Github Company",
              "type": "string"
            },
            "name": "github_company",
            "in": "cookie"
          },
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/integrations/bitbucket/{company_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Bitbucket",
        "description": "Initiate bitbucket integration",
        "operationId": "bitbucket_api_integrations_bitbucket__company_pk__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/bitbucket": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Bitbucket Callback",
        "description": "Callback for bitbucket integration",
        "operationId": "bitbucket_callback_api_integrations_bitbucket_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "State",
              "type": "string"
            },
            "name": "state",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Bitbucket State",
              "type": "string"
            },
            "name": "bitbucket_state",
            "in": "cookie"
          },
          {
            "required": true,
            "schema": {
              "title": "Bitbucket Company",
              "type": "string"
            },
            "name": "bitbucket_company",
            "in": "cookie"
          },
          {
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            },
            "name": "identity",
            "in": "cookie"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/integrations/aws/{company_pk}": {
      "get": {
        "tags": [
          "integrations"
        ],
        "summary": "Aws",
        "description": "Initiate aws integration",
        "operationId": "aws_api_integrations_aws__company_pk__get",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "parent_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/integrations/aws/{company_pk}/{user_pk}": {
      "post": {
        "tags": [
          "integrations"
        ],
        "summary": "Aws Callback",
        "description": "Callback for aws integration",
        "operationId": "aws_callback_api_integrations_aws__company_pk___user_pk__post",
        "parameters": [
          {
            "name": "company_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "user_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Pk",
              "pattern": "^User-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "User-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWSRoute53IntegrationCallbackData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/members/": {
      "get": {
        "tags": [
          "members"
        ],
        "summary": "Get Company Members",
        "operationId": "Get company members",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "company_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Company Members",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserCompanyAccessEntity"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "members"
        ],
        "summary": "Create And Send Invite",
        "operationId": "Send company invite",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "company_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invite"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/members/{user_pk}/": {
      "put": {
        "tags": [
          "members"
        ],
        "summary": "Update Member Permission",
        "operationId": "Update member permission",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "user_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Pk",
              "pattern": "^User-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "User-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "company_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessTypeUpdate"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "members"
        ],
        "summary": "Delete Company Member",
        "operationId": "Delete company member",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "type": "string"
            }
          },
          {
            "name": "user_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "User Pk",
              "pattern": "^User-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "User-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "company_pk",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Company Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/invites/{invite_pk}/": {
      "get": {
        "tags": [
          "invites"
        ],
        "summary": "Add User To Company",
        "operationId": "Add user to company",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "invite_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Invite Pk",
              "pattern": "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/invites": {
      "post": {
        "tags": [
          "invites"
        ],
        "summary": "Add Invite To Company",
        "operationId": "add invite to company",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invite"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "invites"
        ],
        "summary": "List Company Invites",
        "operationId": "list company invites",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Search",
              "type": "string"
            }
          },
          {
            "name": "marker",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Marker",
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Limit",
              "default": 1000,
              "type": "integer"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedEntityCollection_InviteEntity_"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/companies/{parent_pk}/invites/{entity_pk}": {
      "put": {
        "tags": [
          "invites"
        ],
        "summary": "Update Company Invite",
        "operationId": "update company invite",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Invite"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "invites"
        ],
        "summary": "Get Company Invite",
        "operationId": "get company invite",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InviteWithAssets"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "invites"
        ],
        "summary": "Remove Company Invite",
        "operationId": "remove company invite",
        "security": [
          {
            "HTTPBearer": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "parent_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Parent Pk",
              "pattern": "^Company-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Company-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "entity_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Entity Pk",
              "pattern": "^Invite-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Invite-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "identity",
            "in": "cookie",
            "required": false,
            "schema": {
              "title": "Identity",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/account-campaigns/{campaign_pk}/campaign/{campaign_sk}/view": {
      "get": {
        "tags": [
          "account-campaigns"
        ],
        "summary": "View Account Campaign",
        "operationId": "view_account_campaign_api_account_campaigns__campaign_pk__campaign__campaign_sk__view_get",
        "parameters": [
          {
            "name": "campaign_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "campaign_sk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Sk",
              "pattern": "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/account-campaigns/{campaign_pk}/campaign/{campaign_sk}": {
      "get": {
        "tags": [
          "account-campaigns"
        ],
        "summary": "Get Account Campaign",
        "operationId": "get_account_campaign_api_account_campaigns__campaign_pk__campaign__campaign_sk__get",
        "parameters": [
          {
            "name": "campaign_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "campaign_sk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Sk",
              "pattern": "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCampaignEntity"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "account-campaigns"
        ],
        "summary": "Resolve Account Campaign",
        "operationId": "resolve_account_campaign_api_account_campaigns__campaign_pk__campaign__campaign_sk__post",
        "parameters": [
          {
            "name": "campaign_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "campaign_sk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Sk",
              "pattern": "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountResolvePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/account-campaigns/{campaign_pk}/campaign/{campaign_sk}/leaks-info": {
      "get": {
        "tags": [
          "account-campaigns"
        ],
        "summary": "Get Account Campaign Leaks Info",
        "operationId": "get_account_campaign_leaks_info_api_account_campaigns__campaign_pk__campaign__campaign_sk__leaks_info_get",
        "parameters": [
          {
            "name": "campaign_pk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Pk",
              "pattern": "^Account-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "Account-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          },
          {
            "name": "campaign_sk",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Campaign Sk",
              "pattern": "^AccountCampaign-[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$",
              "example": "AccountCampaign-8ccfcc01-da99-4f5a-8ad7-946d6a6f48f5",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LeakInfo"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/env": {
      "get": {
        "tags": [
          "environment"
        ],
        "summary": "Env",
        "operationId": "Get environment info",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentInfo"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AWSIntegration": {
        "title": "AWSIntegration",
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string",
            "default": ""
          },
          "type": {
            "title": "Type",
            "enum": [
              "integration.aws"
            ],
            "type": "string",
            "default": "integration.aws"
          }
        }
      },
      "AWSRoute53IntegrationCallbackData": {
        "title": "AWSRoute53IntegrationCallbackData",
        "required": [
          "roleArn"
        ],
        "type": "object",
        "properties": {
          "roleArn": {
            "title": "Rolearn",
            "type": "string"
          }
        }
      },
      "AccessTypeUpdate": {
        "title": "AccessTypeUpdate",
        "required": [
          "access_type"
        ],
        "type": "object",
        "properties": {
          "access_type": {
            "$ref": "#/components/schemas/CompanyAccessEnum"
          }
        }
      },
      "AccessUser": {
        "title": "AccessUser",
        "required": [
          "sub"
        ],
        "type": "object",
        "properties": {
          "sub": {
            "title": "Sub",
            "type": "string"
          }
        }
      },
      "Account": {
        "title": "Account",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "fullName": {
            "title": "Fullname",
            "type": "string",
            "default": ""
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountStatusEnum"
              }
            ],
            "default": "current"
          },
          "campaignOnNextScan": {
            "title": "Campaignonnextscan",
            "type": "boolean",
            "default": false
          }
        }
      },
      "AccountCampaignConclusion": {
        "title": "AccountCampaignConclusion",
        "enum": [
          "CREATED",
          "VIEWED",
          "FINISHED"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "AccountCampaignEntity": {
        "title": "AccountCampaignEntity",
        "required": [
          "name",
          "services",
          "riskScore",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "services": {
            "title": "Services",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "riskScore": {
            "title": "Riskscore",
            "type": "number"
          },
          "conclusion": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountCampaignConclusion"
              }
            ],
            "default": "CREATED"
          }
        }
      },
      "AccountDiscoverability": {
        "title": "AccountDiscoverability",
        "required": [
          "company",
          "accounts_count",
          "accounts_ratio",
          "accounts_by_source"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "enum": [
              "account_discoverability"
            ],
            "type": "string",
            "default": "account_discoverability"
          },
          "type": {
            "title": "Type",
            "enum": [
              "account_discoverability"
            ],
            "type": "string",
            "default": "account_discoverability"
          },
          "group": {
            "title": "Group",
            "enum": [
              "human_exposure"
            ],
            "type": "string",
            "default": "human_exposure"
          },
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "accounts_count": {
            "title": "Accounts Count",
            "type": "integer"
          },
          "accounts_ratio": {
            "title": "Accounts Ratio",
            "type": "number"
          },
          "accounts_by_source": {
            "title": "Accounts By Source",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      },
      "AccountEntity": {
        "title": "AccountEntity",
        "required": [
          "name",
          "sourceInformation",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "fullName": {
            "title": "Fullname",
            "type": "string",
            "default": ""
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountStatusEnum"
              }
            ],
            "default": "current"
          },
          "campaignOnNextScan": {
            "title": "Campaignonnextscan",
            "type": "boolean",
            "default": false
          },
          "verified": {
            "title": "Verified",
            "type": "boolean",
            "default": false
          },
          "sourceInformation": {
            "title": "Sourceinformation",
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserEntry"
              },
              {
                "$ref": "#/components/schemas/GitRepo"
              },
              {
                "$ref": "#/components/schemas/WebCrawl"
              },
              {
                "$ref": "#/components/schemas/AmassIntel"
              },
              {
                "$ref": "#/components/schemas/AmassEnum"
              },
              {
                "$ref": "#/components/schemas/PassDB"
              },
              {
                "$ref": "#/components/schemas/DNSScan"
              },
              {
                "$ref": "#/components/schemas/DNSScanReverse"
              },
              {
                "$ref": "#/components/schemas/SubdomainEnumerationScan"
              },
              {
                "$ref": "#/components/schemas/MicrosoftIntegration"
              },
              {
                "$ref": "#/components/schemas/GoogleIntegration"
              },
              {
                "$ref": "#/components/schemas/GithubIntegration"
              },
              {
                "$ref": "#/components/schemas/GitLabIntegration"
              },
              {
                "$ref": "#/components/schemas/BitBucketIntegration"
              },
              {
                "$ref": "#/components/schemas/AWSIntegration"
              }
            ]
          },
          "metadata": {
            "$ref": "#/components/schemas/AccountMetadata"
          }
        }
      },
      "AccountMetadata": {
        "title": "AccountMetadata",
        "type": "object",
        "properties": {
          "serviceRunningCount": {
            "title": "Servicerunningcount",
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceRunningCount"
              }
            ],
            "default": {}
          },
          "riskScore": {
            "title": "Riskscore",
            "type": "number",
            "default": 0
          },
          "campaignConclusion": {
            "$ref": "#/components/schemas/AccountCampaignConclusion"
          }
        }
      },
      "AccountResolvePayload": {
        "title": "AccountResolvePayload",
        "required": [
          "acknowledge"
        ],
        "type": "object",
        "properties": {
          "acknowledge": {
            "title": "Acknowledge",
            "type": "boolean"
          }
        }
      },
      "AccountServicesSummary": {
        "title": "AccountServicesSummary",
        "required": [
          "pk",
          "serviceCounts"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "title": "Type",
            "enum": [
              "account-services-summary"
            ],
            "type": "string",
            "default": "account-services-summary"
          },
          "serviceCounts": {
            "title": "Servicecounts",
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        }
      },
      "AccountStatusEnum": {
        "title": "AccountStatusEnum",
        "enum": [
          "current",
          "archived",
          "system"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "AccountWithAssets": {
        "title": "AccountWithAssets",
        "required": [
          "assets",
          "entity"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PaginatedEntityCollection_MetaEntity_"
          },
          "entity": {
            "$ref": "#/components/schemas/AccountEntity"
          }
        }
      },
      "AggregatedSaasEnumerationReport": {
        "title": "AggregatedSaasEnumerationReport",
        "required": [
          "pk"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "title": "Type",
            "enum": [
              "aggregated-saas-enumeration"
            ],
            "type": "string",
            "default": "aggregated-saas-enumeration"
          },
          "services": {
            "title": "Services",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "AmassEnum": {
        "title": "AmassEnum",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "scan.amass-enum"
            ],
            "type": "string",
            "default": "scan.amass-enum"
          }
        }
      },
      "AmassIntel": {
        "title": "AmassIntel",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "scan.amass-intel"
            ],
            "type": "string",
            "default": "scan.amass-intel"
          }
        }
      },
      "AnswerUpdate": {
        "title": "AnswerUpdate",
        "required": [
          "answer"
        ],
        "type": "object",
        "properties": {
          "answer": {
            "title": "Answer",
            "type": "string"
          }
        }
      },
      "BackDates": {
        "title": "BackDates",
        "enum": [
          "1w",
          "1m",
          "3m",
          "6m",
          "1y"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "BitBucketIntegration": {
        "title": "BitBucketIntegration",
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string",
            "default": ""
          },
          "type": {
            "title": "Type",
            "enum": [
              "integration.bitbucket"
            ],
            "type": "string",
            "default": "integration.bitbucket"
          }
        }
      },
      "Body_upload_account_list_api_companies__parent_pk__accounts_upload_post": {
        "title": "Body_upload_account_list_api_companies__parent_pk__accounts_upload_post",
        "required": [
          "account_list"
        ],
        "type": "object",
        "properties": {
          "account_list": {
            "title": "Account List",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Body_upload_domain_list_api_companies__parent_pk__domains_upload_post": {
        "title": "Body_upload_domain_list_api_companies__parent_pk__domains_upload_post",
        "required": [
          "domain_list"
        ],
        "type": "object",
        "properties": {
          "domain_list": {
            "title": "Domain List",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "BurpVulnerability": {
        "title": "BurpVulnerability",
        "required": [
          "company",
          "uid",
          "entity",
          "name",
          "type_index",
          "origin",
          "path",
          "background"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "burp_vulnerability"
            ],
            "type": "string",
            "default": "burp_vulnerability"
          },
          "group": {
            "title": "Group",
            "enum": [
              "vulnerabilities"
            ],
            "type": "string",
            "default": "vulnerabilities"
          },
          "entity": {
            "title": "Entity",
            "pattern": "^(Sub)?[Dd]omain-",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "type_index": {
            "title": "Type Index",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "origin": {
            "title": "Origin",
            "type": "string"
          },
          "path": {
            "title": "Path",
            "type": "string"
          },
          "background": {
            "title": "Background",
            "type": "string"
          },
          "remediation": {
            "title": "Remediation",
            "type": "string"
          }
        }
      },
      "ChallengeTypes": {
        "title": "ChallengeTypes",
        "enum": [
          "MFA_SETUP",
          "SOFTWARE_TOKEN_MFA"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CognitoIdentity": {
        "title": "CognitoIdentity",
        "required": [
          "sub",
          "name",
          "email"
        ],
        "type": "object",
        "properties": {
          "sub": {
            "title": "Sub",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "string"
          }
        }
      },
      "Company": {
        "title": "Company",
        "required": [
          "name",
          "mainContact",
          "website"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "mainContact": {
            "title": "Maincontact",
            "type": "string"
          },
          "website": {
            "title": "Website",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "employeeCount": {
            "title": "Employeecount",
            "type": "integer",
            "default": 1
          },
          "employeeCountIt": {
            "title": "Employeecountit",
            "type": "integer",
            "default": 1
          },
          "sector": {
            "$ref": "#/components/schemas/CompanySector"
          },
          "vulnScanFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanFrequency"
              }
            ],
            "default": "NEVER"
          }
        }
      },
      "CompanyAccessEnum": {
        "title": "CompanyAccessEnum",
        "enum": [
          "admin",
          "read",
          "token"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CompanyEntity": {
        "title": "CompanyEntity",
        "required": [
          "name",
          "mainContact",
          "website",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "mainContact": {
            "title": "Maincontact",
            "type": "string"
          },
          "website": {
            "title": "Website",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "employeeCount": {
            "title": "Employeecount",
            "type": "integer",
            "default": 1
          },
          "employeeCountIt": {
            "title": "Employeecountit",
            "type": "integer",
            "default": 1
          },
          "sector": {
            "$ref": "#/components/schemas/CompanySector"
          },
          "vulnScanFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanFrequency"
              }
            ],
            "default": "NEVER"
          },
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object"
          }
        }
      },
      "CompanyQuestionList": {
        "title": "CompanyQuestionList",
        "required": [
          "pk"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "title": "Type",
            "enum": [
              "company-questions"
            ],
            "type": "string",
            "default": "company-questions"
          },
          "mfa": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MFAAnswer"
              }
            ],
            "default": "never"
          },
          "passwordLength": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PasswordLengthAnswer"
              }
            ],
            "default": "none"
          },
          "passwordManager": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PasswordManagerAnswer"
              }
            ],
            "default": "none"
          },
          "passwordScreen": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PasswordScreenAnswer"
              }
            ],
            "default": "no"
          },
          "disclosurePolicy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DisclosurePolicyAnswer"
              }
            ],
            "default": "no"
          },
          "vdp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VDPAnswer"
              }
            ],
            "default": "none"
          },
          "vip": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VIPAnswer"
              }
            ],
            "default": "no"
          },
          "vulnScan": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VulnScanAnswer"
              }
            ],
            "default": "none"
          }
        }
      },
      "CompanyScore": {
        "title": "CompanyScore",
        "required": [
          "company",
          "total",
          "breakdown"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "enum": [
              "COMPANY_SCORE"
            ],
            "type": "string",
            "default": "COMPANY_SCORE"
          },
          "company": {
            "title": "Company",
            "pattern": "^Company-",
            "type": "string"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "format": "date"
          },
          "total": {
            "title": "Total",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "integer"
          },
          "breakdown": {
            "title": "Breakdown",
            "type": "object",
            "additionalProperties": {
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer"
            }
          },
          "ttl": {
            "title": "Ttl",
            "type": "number"
          }
        }
      },
      "CompanySector": {
        "title": "CompanySector",
        "enum": [
          "ACCOUNTING",
          "AIRLINES/AVIATION",
          "ALTERNATIVE_DISPUTE_RESOLUTION",
          "ALTERNATIVE_MEDICINE",
          "ANIMATION",
          "APPAREL_AND_FASHION",
          "ARCHITECTURE_AND_PLANNING",
          "ARTS_AND_CRAFTS",
          "AUTOMOTIVE",
          "AVIATION_AND_AEROSPACE",
          "BANKING",
          "BIOTECHNOLOGY",
          "BROADCAST_MEDIA",
          "BUILDING_MATERIALS",
          "BUSINESS_SUPPLIES_AND_EQUIPMENT",
          "CAPITAL_MARKETS",
          "CHEMICALS",
          "CIVIC_AND_SOCIAL_ORGANIZATION",
          "CIVIL_ENGINEERING",
          "COMMERCIAL_REAL_ESTATE",
          "COMPUTER_AND_NETWORK_SECURITY",
          "COMPUTER_GAMES",
          "COMPUTER_HARDWARE",
          "COMPUTER_NETWORKING",
          "COMPUTER_SOFTWARE",
          "CONSTRUCTION",
          "CONSUMER_ELECTRONICS",
          "CONSUMER_GOODS",
          "CONSUMER_SERVICES",
          "COSMETICS",
          "DAIRY",
          "DEFENSE_AND_SPACE",
          "DESIGN",
          "EDUCATION_MANAGEMENT",
          "E-LEARNING",
          "ELECTRICAL_AND_ELECTRONIC_MANUFACTURING",
          "ENTERTAINMENT",
          "ENVIRONMENTAL_SERVICES",
          "EVENTS_SERVICES",
          "EXECUTIVE_OFFICE",
          "FACILITIES_SERVICES",
          "FARMING",
          "FINANCIAL_SERVICES",
          "FINE_ART",
          "FISHERY",
          "FOOD_AND_BEVERAGES",
          "FOOD_PRODUCTION",
          "FUNDRAISING",
          "FURNITURE",
          "GAMBLING_AND_CASINOS",
          "GLASS_CERAMICS_AND_CONCRETE",
          "GOVERNMENT_ADMINISTRATION",
          "GOVERNMENT_RELATIONS",
          "GRAPHIC_DESIGN",
          "HEALTH_WELLNESS_AND_FITNESS",
          "HIGHER_EDUCATION",
          "HOSPITAL_AND_HEALTH_CARE",
          "HOSPITALITY",
          "HUMAN_RESOURCES",
          "IMPORT_AND_EXPORT",
          "INDIVIDUAL_AND_FAMILY_SERVICES",
          "INDUSTRIAL_AUTOMATION",
          "INFORMATION_SERVICES",
          "INFORMATION_TECHNOLOGY_AND_SERVICES",
          "INSURANCE",
          "INTERNATIONAL_AFFAIRS",
          "INTERNATIONAL_TRADE_AND_DEVELOPMENT",
          "INTERNET",
          "INVESTMENT_BANKING/VENTURE",
          "INVESTMENT_MANAGEMENT",
          "JUDICIARY",
          "LAW_ENFORCEMENT",
          "LAW_PRACTICE",
          "LEGAL_SERVICES",
          "LEGISLATIVE_OFFICE",
          "LEISURE_AND_TRAVEL",
          "LIBRARIES",
          "LOGISTICS_AND_SUPPLY_CHAIN",
          "LUXURY_GOODS_AND_JEWELRY",
          "MACHINERY",
          "MANAGEMENT_CONSULTING",
          "MARITIME",
          "MARKETING_AND_ADVERTISING",
          "MARKET_RESEARCH",
          "MECHANICAL_OR_INDUSTRIAL_ENGINEERING",
          "MEDIA_PRODUCTION",
          "MEDICAL_DEVICE",
          "MEDICAL_PRACTICE",
          "MENTAL_HEALTH_CARE",
          "MILITARY",
          "MINING_AND_METALS",
          "MOTION_PICTURES_AND_FILM",
          "MUSEUMS_AND_INSTITUTIONS",
          "MUSIC",
          "NANOTECHNOLOGY",
          "NEWSPAPERS",
          "NONPROFIT_ORGANIZATION_MANAGEMENT",
          "OIL_AND_ENERGY",
          "ONLINE_PUBLISHING",
          "OUTSOURCING/OFFSHORING",
          "PACKAGE/FREIGHT_DELIVERY",
          "PACKAGING_AND_CONTAINERS",
          "PAPER_AND_FOREST_PRODUCTS",
          "PERFORMING_ARTS",
          "PHARMACEUTICALS",
          "PHILANTHROPY",
          "PHOTOGRAPHY",
          "PLASTICS",
          "POLITICAL_ORGANIZATION",
          "PRIMARY/SECONDARY",
          "PRINTING",
          "PROFESSIONAL_TRAINING",
          "PROGRAM_DEVELOPMENT",
          "PUBLIC_POLICY",
          "PUBLIC_RELATIONS",
          "PUBLIC_SAFETY",
          "PUBLISHING",
          "RAILROAD_MANUFACTURE",
          "RANCHING",
          "REAL_ESTATE",
          "RECREATIONAL",
          "FACILITIES_AND_SERVICES",
          "RELIGIOUS_INSTITUTIONS",
          "RENEWABLES_AND_ENVIRONMENT",
          "RESEARCH",
          "RESTAURANTS",
          "RETAIL",
          "SECURITY_AND_INVESTIGATIONS",
          "SEMICONDUCTORS",
          "SHIPBUILDING",
          "SPORTING_GOODS",
          "SPORTS",
          "STAFFING_AND_RECRUITING",
          "SUPERMARKETS",
          "TELECOMMUNICATIONS",
          "TEXTILES",
          "THINK_TANKS",
          "TOBACCO",
          "TRANSLATION_AND_LOCALIZATION",
          "TRANSPORTATION/TRUCKING/RAILROAD",
          "UTILITIES",
          "VENTURE_CAPITAL",
          "VETERINARY",
          "WAREHOUSING",
          "WHOLESALE",
          "WINE_AND_SPIRITS",
          "WIRELESS",
          "WRITING_AND_EDITING"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "CompanySectorScore": {
        "title": "CompanySectorScore",
        "required": [
          "sector_mean",
          "by_group"
        ],
        "type": "object",
        "properties": {
          "sector_mean": {
            "title": "Sector Mean",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "integer"
          },
          "by_group": {
            "title": "By Group",
            "type": "object",
            "additionalProperties": {
              "maximum": 100.0,
              "minimum": 0.0,
              "type": "integer"
            }
          }
        }
      },
      "CompanyUpdate": {
        "title": "CompanyUpdate",
        "type": "object",
        "properties": {
          "mainContact": {
            "title": "Maincontact",
            "type": "string"
          },
          "website": {
            "title": "Website",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          },
          "employeeCount": {
            "title": "Employeecount",
            "type": "integer"
          },
          "employeeCountIt": {
            "title": "Employeecountit",
            "type": "integer"
          },
          "sector": {
            "$ref": "#/components/schemas/CompanySector"
          },
          "vulnScanFrequency": {
            "$ref": "#/components/schemas/ScanFrequency"
          }
        }
      },
      "CompanyWithUserAccess": {
        "title": "CompanyWithUserAccess",
        "required": [
          "company",
          "access_type"
        ],
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/components/schemas/CompanyEntity"
          },
          "access_type": {
            "$ref": "#/components/schemas/CompanyAccessEnum"
          }
        }
      },
      "CreateOpportunity": {
        "title": "CreateOpportunity",
        "required": [
          "uid",
          "name",
          "details",
          "score"
        ],
        "type": "object",
        "properties": {
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "details": {
            "title": "Details",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "score": {
            "$ref": "#/components/schemas/OpportunityScore"
          }
        }
      },
      "CreateToken": {
        "title": "CreateToken",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "DNSScan": {
        "title": "DNSScan",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "dns.whois"
            ],
            "type": "string",
            "default": "dns.whois"
          }
        }
      },
      "DNSScanReverse": {
        "title": "DNSScanReverse",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "dns.reverse-whois"
            ],
            "type": "string",
            "default": "dns.reverse-whois"
          }
        }
      },
      "DisclosurePolicyAnswer": {
        "title": "DisclosurePolicyAnswer",
        "enum": [
          "yes",
          "no"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Domain": {
        "title": "Domain",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "activeScanFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanFrequency"
              }
            ],
            "default": "NEVER"
          }
        }
      },
      "DomainEntity": {
        "title": "DomainEntity",
        "required": [
          "name",
          "sourceInformation",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "activeScanFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanFrequency"
              }
            ],
            "default": "NEVER"
          },
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "dnsVerified": {
            "title": "Dnsverified",
            "type": "boolean",
            "default": false
          },
          "adminVerified": {
            "title": "Adminverified",
            "type": "boolean",
            "default": false
          },
          "metadata": {
            "$ref": "#/components/schemas/DomainMetadata"
          },
          "txtRecord": {
            "title": "Txtrecord",
            "type": "string"
          },
          "sourceInformation": {
            "title": "Sourceinformation",
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserEntry"
              },
              {
                "$ref": "#/components/schemas/GitRepo"
              },
              {
                "$ref": "#/components/schemas/WebCrawl"
              },
              {
                "$ref": "#/components/schemas/AmassIntel"
              },
              {
                "$ref": "#/components/schemas/AmassEnum"
              },
              {
                "$ref": "#/components/schemas/PassDB"
              },
              {
                "$ref": "#/components/schemas/DNSScan"
              },
              {
                "$ref": "#/components/schemas/DNSScanReverse"
              },
              {
                "$ref": "#/components/schemas/SubdomainEnumerationScan"
              },
              {
                "$ref": "#/components/schemas/MicrosoftIntegration"
              },
              {
                "$ref": "#/components/schemas/GoogleIntegration"
              },
              {
                "$ref": "#/components/schemas/GithubIntegration"
              },
              {
                "$ref": "#/components/schemas/GitLabIntegration"
              },
              {
                "$ref": "#/components/schemas/BitBucketIntegration"
              },
              {
                "$ref": "#/components/schemas/AWSIntegration"
              }
            ]
          }
        }
      },
      "DomainMetadata": {
        "title": "DomainMetadata",
        "type": "object",
        "properties": {
          "subdomainCount": {
            "title": "Subdomaincount",
            "type": "integer",
            "default": 0
          },
          "saasServices": {
            "title": "Saasservices",
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": []
          }
        }
      },
      "DomainScreenshot": {
        "title": "DomainScreenshot",
        "type": "object",
        "properties": {
          "http_screenshot": {
            "title": "Http Screenshot",
            "type": "string"
          },
          "https_screenshot": {
            "title": "Https Screenshot",
            "type": "string"
          }
        }
      },
      "DomainWithAssets": {
        "title": "DomainWithAssets",
        "required": [
          "assets",
          "entity"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PaginatedEntityCollection_MetaEntity_"
          },
          "entity": {
            "$ref": "#/components/schemas/DomainEntity"
          }
        }
      },
      "EmailBody": {
        "title": "EmailBody",
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          }
        }
      },
      "EnvironmentInfo": {
        "title": "EnvironmentInfo",
        "required": [
          "externalIps",
          "wasCidrs",
          "vulnCidrs",
          "env"
        ],
        "type": "object",
        "properties": {
          "externalIps": {
            "title": "Externalips",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "wasCidrs": {
            "title": "Wascidrs",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vulnCidrs": {
            "title": "Vulncidrs",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "title": "Env",
            "type": "string"
          }
        }
      },
      "ExposedFileSecrets": {
        "title": "ExposedFileSecrets",
        "required": [
          "company",
          "uid",
          "entity",
          "name",
          "filename",
          "secrets"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "exposed_secret"
            ],
            "type": "string",
            "default": "exposed_secret"
          },
          "group": {
            "title": "Group",
            "enum": [
              "vulnerabilities"
            ],
            "type": "string",
            "default": "vulnerabilities"
          },
          "entity": {
            "title": "Entity",
            "pattern": "^Repository-",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "secrets": {
            "title": "Secrets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Secret"
            }
          }
        }
      },
      "ExposedServices": {
        "title": "ExposedServices",
        "required": [
          "company",
          "uid",
          "entity",
          "name",
          "exposure"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "exposed_service"
            ],
            "type": "string",
            "default": "exposed_service"
          },
          "group": {
            "title": "Group",
            "enum": [
              "human_exposure"
            ],
            "type": "string",
            "default": "human_exposure"
          },
          "entity": {
            "title": "Entity",
            "pattern": "^Account-",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "exposure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Exposure"
            }
          }
        }
      },
      "Exposure": {
        "title": "Exposure",
        "enum": [
          "too-many-services",
          "high-risk-services"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "GitLabIntegration": {
        "title": "GitLabIntegration",
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string",
            "default": ""
          },
          "type": {
            "title": "Type",
            "enum": [
              "integration.gitlab"
            ],
            "type": "string",
            "default": "integration.gitlab"
          }
        }
      },
      "GitRepo": {
        "title": "GitRepo",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "scan.git"
            ],
            "type": "string",
            "default": "scan.git"
          }
        }
      },
      "GithubIntegration": {
        "title": "GithubIntegration",
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string",
            "default": ""
          },
          "type": {
            "title": "Type",
            "enum": [
              "integration.github"
            ],
            "type": "string",
            "default": "integration.github"
          }
        }
      },
      "GlobalStats": {
        "title": "GlobalStats",
        "required": [
          "date",
          "global_mean",
          "by_sector"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "enum": [
              "GLOBAL_STATS"
            ],
            "type": "string",
            "default": "GLOBAL_STATS"
          },
          "company": {
            "title": "Company",
            "enum": [
              "GLOBAL-STATS"
            ],
            "type": "string",
            "default": "GLOBAL-STATS"
          },
          "date": {
            "title": "Date",
            "type": "string",
            "format": "date"
          },
          "global_mean": {
            "title": "Global Mean",
            "maximum": 100.0,
            "minimum": 0.0,
            "type": "integer"
          },
          "by_sector": {
            "title": "By Sector",
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CompanySectorScore"
            }
          }
        }
      },
      "GoogleIntegration": {
        "title": "GoogleIntegration",
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string",
            "default": ""
          },
          "type": {
            "title": "Type",
            "enum": [
              "integration.google"
            ],
            "type": "string",
            "default": "integration.google"
          }
        }
      },
      "GreenboneVulnerability": {
        "title": "GreenboneVulnerability",
        "required": [
          "company",
          "uid",
          "entity",
          "name",
          "description",
          "references",
          "host"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "greenbone_vulnerability"
            ],
            "type": "string",
            "default": "greenbone_vulnerability"
          },
          "group": {
            "title": "Group",
            "enum": [
              "vulnerabilities"
            ],
            "type": "string",
            "default": "vulnerabilities"
          },
          "entity": {
            "title": "Entity",
            "pattern": "^(Sub)?[Dd]omain-",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "affected": {
            "title": "Affected",
            "type": "string"
          },
          "summary": {
            "title": "Summary",
            "type": "string"
          },
          "description": {
            "title": "Description",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "solution": {
            "title": "Solution",
            "type": "string"
          },
          "solution_type": {
            "title": "Solution Type",
            "type": "string"
          },
          "insight": {
            "title": "Insight",
            "type": "string"
          },
          "references": {
            "title": "References",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "host": {
            "title": "Host",
            "type": "string"
          },
          "hostname": {
            "title": "Hostname",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "HistoricalScores": {
        "title": "HistoricalScores",
        "required": [
          "companyScores",
          "globalScores"
        ],
        "type": "object",
        "properties": {
          "companyScores": {
            "title": "Companyscores",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyScore"
            }
          },
          "globalScores": {
            "title": "Globalscores",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalStats"
            }
          }
        }
      },
      "IndividualScore": {
        "title": "IndividualScore",
        "required": [
          "score",
          "reason"
        ],
        "type": "object",
        "properties": {
          "score": {
            "$ref": "#/components/schemas/ScoreLevel"
          },
          "reason": {
            "title": "Reason",
            "type": "string"
          }
        }
      },
      "IntegrationEntity": {
        "title": "IntegrationEntity",
        "required": [
          "installationId",
          "integrationType",
          "user",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "installationId": {
            "title": "Installationid",
            "type": "string"
          },
          "integrationType": {
            "$ref": "#/components/schemas/IntegrationTypeEnum"
          },
          "user": {
            "title": "User",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "default": ""
          },
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "IntegrationTypeEnum": {
        "title": "IntegrationTypeEnum",
        "enum": [
          "github",
          "gitlab",
          "google-workspace",
          "microsoft-azure-ad",
          "bitbucket",
          "aws"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "IntegrationWithAssets": {
        "title": "IntegrationWithAssets",
        "required": [
          "assets",
          "entity"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PaginatedEntityCollection_MetaEntity_"
          },
          "entity": {
            "$ref": "#/components/schemas/IntegrationEntity"
          }
        }
      },
      "InternalOpportunity": {
        "title": "InternalOpportunity",
        "required": [
          "company",
          "uid",
          "name",
          "details"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "internal"
            ],
            "type": "string",
            "default": "internal"
          },
          "group": {
            "title": "Group",
            "enum": [
              "internal"
            ],
            "type": "string",
            "default": "internal"
          },
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "details": {
            "title": "Details",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "Invite": {
        "title": "Invite",
        "required": [
          "name",
          "accessType"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "accessType": {
            "$ref": "#/components/schemas/CompanyAccessEnum"
          }
        }
      },
      "InviteEntity": {
        "title": "InviteEntity",
        "required": [
          "name",
          "accessType",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "accessType": {
            "$ref": "#/components/schemas/CompanyAccessEnum"
          }
        }
      },
      "InviteWithAssets": {
        "title": "InviteWithAssets",
        "required": [
          "assets",
          "entity"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PaginatedEntityCollection_MetaEntity_"
          },
          "entity": {
            "$ref": "#/components/schemas/InviteEntity"
          }
        }
      },
      "LeakData": {
        "title": "LeakData",
        "type": "object",
        "properties": {
          "is_hash": {
            "title": "Is Hash",
            "type": "boolean"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "type": "string"
          },
          "year": {
            "title": "Year",
            "type": "integer"
          }
        }
      },
      "LeakInfo": {
        "title": "LeakInfo",
        "required": [
          "leaks"
        ],
        "type": "object",
        "properties": {
          "leaks": {
            "title": "Leaks",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeakData"
            }
          }
        }
      },
      "LeakedPassword": {
        "title": "LeakedPassword",
        "required": [
          "company",
          "uid",
          "entity",
          "name",
          "password_hint",
          "leak_name",
          "leak_year"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "leaked_password"
            ],
            "type": "string",
            "default": "leaked_password"
          },
          "group": {
            "title": "Group",
            "enum": [
              "human_exposure"
            ],
            "type": "string",
            "default": "human_exposure"
          },
          "entity": {
            "title": "Entity",
            "pattern": "^Account-",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "password_hint": {
            "title": "Password Hint",
            "type": "string"
          },
          "leak_name": {
            "title": "Leak Name",
            "type": "string"
          },
          "leak_year": {
            "title": "Leak Year",
            "type": "integer"
          }
        }
      },
      "LoginRequest": {
        "title": "LoginRequest",
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "password": {
            "title": "Password",
            "type": "string",
            "format": "password",
            "writeOnly": true
          }
        }
      },
      "LoginResponseMfaChallenge": {
        "title": "LoginResponseMfaChallenge",
        "required": [
          "challenge"
        ],
        "type": "object",
        "properties": {
          "challenge": {
            "$ref": "#/components/schemas/ChallengeTypes"
          },
          "setupSecret": {
            "title": "Setupsecret",
            "type": "string"
          },
          "session": {
            "title": "Session",
            "type": "string"
          }
        }
      },
      "MFAAnswer": {
        "title": "MFAAnswer",
        "enum": [
          "always",
          "often",
          "sometimes",
          "never"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "MFALoginChallengeRequest": {
        "title": "MFALoginChallengeRequest",
        "required": [
          "email",
          "token",
          "session"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "token": {
            "title": "Token",
            "type": "string"
          },
          "session": {
            "title": "Session",
            "type": "string"
          }
        }
      },
      "MFASetupChallengeRequest": {
        "title": "MFASetupChallengeRequest",
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "title": "Token",
            "type": "string"
          }
        }
      },
      "MaskedToken": {
        "title": "MaskedToken",
        "required": [
          "name",
          "id",
          "company"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "company": {
            "title": "Company",
            "type": "string"
          }
        }
      },
      "MetaEntity": {
        "title": "MetaEntity",
        "required": [
          "name",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object"
          }
        }
      },
      "MicrosoftIntegration": {
        "title": "MicrosoftIntegration",
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string",
            "default": ""
          },
          "type": {
            "title": "Type",
            "enum": [
              "integration.microsoft"
            ],
            "type": "string",
            "default": "integration.microsoft"
          }
        }
      },
      "ModelType": {
        "title": "ModelType",
        "enum": [
          "exposed_secret",
          "exposed_service",
          "leaked_password",
          "web_app_vulnerability",
          "burp_vulnerability",
          "account_discoverability",
          "suspicious_domain",
          "greenbone_vulnerability",
          "internal"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "Opportunity": {
        "title": "Opportunity",
        "required": [
          "company",
          "uid",
          "type",
          "group"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ModelType"
          },
          "group": {
            "$ref": "#/components/schemas/OpportunityGroup"
          },
          "entity": {
            "title": "Entity",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "OpportunityDetails": {
        "title": "OpportunityDetails",
        "required": [
          "context_description",
          "opportunity"
        ],
        "type": "object",
        "properties": {
          "context_description": {
            "title": "Context Description",
            "type": "string"
          },
          "opportunity": {
            "title": "Opportunity",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AccountDiscoverability"
              },
              {
                "$ref": "#/components/schemas/BurpVulnerability"
              },
              {
                "$ref": "#/components/schemas/ExposedFileSecrets"
              },
              {
                "$ref": "#/components/schemas/ExposedServices"
              },
              {
                "$ref": "#/components/schemas/GreenboneVulnerability"
              },
              {
                "$ref": "#/components/schemas/LeakedPassword"
              },
              {
                "$ref": "#/components/schemas/WebApplicationVulnerability"
              },
              {
                "$ref": "#/components/schemas/SuspiciousDomain"
              },
              {
                "$ref": "#/components/schemas/InternalOpportunity"
              }
            ],
            "discriminator": {
              "propertyName": "type",
              "mapping": {
                "account_discoverability": "#/components/schemas/AccountDiscoverability",
                "burp_vulnerability": "#/components/schemas/BurpVulnerability",
                "exposed_secret": "#/components/schemas/ExposedFileSecrets",
                "exposed_service": "#/components/schemas/ExposedServices",
                "greenbone_vulnerability": "#/components/schemas/GreenboneVulnerability",
                "leaked_password": "#/components/schemas/LeakedPassword",
                "web_app_vulnerability": "#/components/schemas/WebApplicationVulnerability",
                "suspicious_domain": "#/components/schemas/SuspiciousDomain",
                "internal": "#/components/schemas/InternalOpportunity"
              }
            }
          }
        }
      },
      "OpportunityGroup": {
        "title": "OpportunityGroup",
        "enum": [
          "domains",
          "vulnerabilities",
          "tech_profile",
          "human_exposure",
          "security_maturity",
          "internal"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "OpportunityResolution": {
        "title": "OpportunityResolution",
        "enum": [
          "unacknowledged",
          "accepted_risk",
          "resolved",
          "false_positive"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "OpportunityScore": {
        "title": "OpportunityScore",
        "enum": [
          "none",
          "info",
          "low",
          "medium",
          "high",
          "critical",
          "unknown"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "PaginatedEntityCollection_AccountEntity_": {
        "title": "PaginatedEntityCollection[AccountEntity]",
        "required": [
          "entities"
        ],
        "type": "object",
        "properties": {
          "entities": {
            "title": "Entities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountEntity"
            }
          },
          "marker": {
            "title": "Marker",
            "type": "string"
          }
        }
      },
      "PaginatedEntityCollection_DomainEntity_": {
        "title": "PaginatedEntityCollection[DomainEntity]",
        "required": [
          "entities"
        ],
        "type": "object",
        "properties": {
          "entities": {
            "title": "Entities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DomainEntity"
            }
          },
          "marker": {
            "title": "Marker",
            "type": "string"
          }
        }
      },
      "PaginatedEntityCollection_IntegrationEntity_": {
        "title": "PaginatedEntityCollection[IntegrationEntity]",
        "required": [
          "entities"
        ],
        "type": "object",
        "properties": {
          "entities": {
            "title": "Entities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationEntity"
            }
          },
          "marker": {
            "title": "Marker",
            "type": "string"
          }
        }
      },
      "PaginatedEntityCollection_InviteEntity_": {
        "title": "PaginatedEntityCollection[InviteEntity]",
        "required": [
          "entities"
        ],
        "type": "object",
        "properties": {
          "entities": {
            "title": "Entities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InviteEntity"
            }
          },
          "marker": {
            "title": "Marker",
            "type": "string"
          }
        }
      },
      "PaginatedEntityCollection_MetaEntity_": {
        "title": "PaginatedEntityCollection[MetaEntity]",
        "required": [
          "entities"
        ],
        "type": "object",
        "properties": {
          "entities": {
            "title": "Entities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaEntity"
            }
          },
          "marker": {
            "title": "Marker",
            "type": "string"
          }
        }
      },
      "PaginatedEntityCollection_RepositoryEntity_": {
        "title": "PaginatedEntityCollection[RepositoryEntity]",
        "required": [
          "entities"
        ],
        "type": "object",
        "properties": {
          "entities": {
            "title": "Entities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepositoryEntity"
            }
          },
          "marker": {
            "title": "Marker",
            "type": "string"
          }
        }
      },
      "PaginatedEntityCollection_SubdomainEntity_": {
        "title": "PaginatedEntityCollection[SubdomainEntity]",
        "required": [
          "entities"
        ],
        "type": "object",
        "properties": {
          "entities": {
            "title": "Entities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubdomainEntity"
            }
          },
          "marker": {
            "title": "Marker",
            "type": "string"
          }
        }
      },
      "PassDB": {
        "title": "PassDB",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "scan.passdb"
            ],
            "type": "string",
            "default": "scan.passdb"
          }
        }
      },
      "PasswordLengthAnswer": {
        "title": "PasswordLengthAnswer",
        "enum": [
          "long",
          "short",
          "none"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "PasswordManagerAnswer": {
        "title": "PasswordManagerAnswer",
        "enum": [
          "provided",
          "advised",
          "none"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "PasswordScreenAnswer": {
        "title": "PasswordScreenAnswer",
        "enum": [
          "yes",
          "no"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "RepositoryEntity": {
        "title": "RepositoryEntity",
        "required": [
          "name",
          "installation",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "installation": {
            "title": "Installation",
            "type": "string"
          },
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object"
          }
        }
      },
      "RepositoryWithAssets": {
        "title": "RepositoryWithAssets",
        "required": [
          "assets",
          "entity"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PaginatedEntityCollection_MetaEntity_"
          },
          "entity": {
            "$ref": "#/components/schemas/RepositoryEntity"
          }
        }
      },
      "ResetPasswordRequest": {
        "title": "ResetPasswordRequest",
        "required": [
          "email",
          "code",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "code": {
            "title": "Code",
            "type": "string"
          },
          "password": {
            "title": "Password",
            "minLength": 12,
            "type": "string",
            "format": "password",
            "writeOnly": true
          }
        }
      },
      "ResetPasswordResponse": {
        "title": "ResetPasswordResponse",
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "title": "Success",
            "type": "boolean"
          },
          "reason": {
            "title": "Reason",
            "type": "string"
          }
        }
      },
      "ResolutionUpdate": {
        "title": "ResolutionUpdate",
        "required": [
          "resolution"
        ],
        "type": "object",
        "properties": {
          "resolution": {
            "title": "Resolution",
            "type": "string"
          }
        }
      },
      "ScanFrequency": {
        "title": "ScanFrequency",
        "enum": [
          "NEVER",
          "WEEKLY",
          "BIWEEKLY",
          "MONTHLY"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ScoreLevel": {
        "title": "ScoreLevel",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "An enumeration."
      },
      "Secret": {
        "title": "Secret",
        "required": [
          "type",
          "secret",
          "filename",
          "commit_hash",
          "line_number",
          "branch"
        ],
        "type": "object",
        "properties": {
          "type": {
            "title": "Type",
            "type": "string"
          },
          "secret": {
            "title": "Secret",
            "type": "string"
          },
          "filename": {
            "title": "Filename",
            "type": "string"
          },
          "commit_hash": {
            "title": "Commit Hash",
            "type": "string"
          },
          "line_number": {
            "title": "Line Number",
            "type": "string"
          },
          "repo_url": {
            "title": "Repo Url",
            "type": "string",
            "default": ""
          },
          "branch": {
            "title": "Branch",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          }
        }
      },
      "ServiceRunningCount": {
        "title": "ServiceRunningCount",
        "type": "object",
        "properties": {},
        "additionalProperties": {
          "type": "integer"
        }
      },
      "SignupRequest": {
        "title": "SignupRequest",
        "required": [
          "email",
          "password",
          "name"
        ],
        "type": "object",
        "properties": {
          "email": {
            "title": "Email",
            "type": "string",
            "format": "email"
          },
          "password": {
            "title": "Password",
            "minLength": 12,
            "type": "string",
            "format": "password",
            "writeOnly": true
          },
          "name": {
            "title": "Name",
            "minLength": 4,
            "type": "string"
          }
        }
      },
      "SignupResponse": {
        "title": "SignupResponse",
        "required": [
          "confirmed"
        ],
        "type": "object",
        "properties": {
          "confirmed": {
            "title": "Confirmed",
            "type": "boolean"
          }
        }
      },
      "SubdomainEntity": {
        "title": "SubdomainEntity",
        "required": [
          "name",
          "sourceInformation",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "activeScanFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanFrequency"
              }
            ],
            "default": "NEVER"
          },
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "title": "Metadata",
            "type": "object"
          },
          "sourceInformation": {
            "title": "Sourceinformation",
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserEntry"
              },
              {
                "$ref": "#/components/schemas/GitRepo"
              },
              {
                "$ref": "#/components/schemas/WebCrawl"
              },
              {
                "$ref": "#/components/schemas/AmassIntel"
              },
              {
                "$ref": "#/components/schemas/AmassEnum"
              },
              {
                "$ref": "#/components/schemas/PassDB"
              },
              {
                "$ref": "#/components/schemas/DNSScan"
              },
              {
                "$ref": "#/components/schemas/DNSScanReverse"
              },
              {
                "$ref": "#/components/schemas/SubdomainEnumerationScan"
              },
              {
                "$ref": "#/components/schemas/MicrosoftIntegration"
              },
              {
                "$ref": "#/components/schemas/GoogleIntegration"
              },
              {
                "$ref": "#/components/schemas/GithubIntegration"
              },
              {
                "$ref": "#/components/schemas/GitLabIntegration"
              },
              {
                "$ref": "#/components/schemas/BitBucketIntegration"
              },
              {
                "$ref": "#/components/schemas/AWSIntegration"
              }
            ]
          }
        }
      },
      "SubdomainEnumerationScan": {
        "title": "SubdomainEnumerationScan",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "scan.subdomain"
            ],
            "type": "string",
            "default": "scan.subdomain"
          }
        }
      },
      "SubdomainWithAssets": {
        "title": "SubdomainWithAssets",
        "required": [
          "assets",
          "entity"
        ],
        "type": "object",
        "properties": {
          "assets": {
            "$ref": "#/components/schemas/PaginatedEntityCollection_MetaEntity_"
          },
          "entity": {
            "$ref": "#/components/schemas/SubdomainEntity"
          }
        }
      },
      "SuccessResponse": {
        "title": "SuccessResponse",
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "title": "Success",
            "type": "boolean"
          }
        }
      },
      "Suggestion": {
        "title": "Suggestion",
        "required": [
          "data",
          "name",
          "entityType",
          "pk",
          "id"
        ],
        "type": "object",
        "properties": {
          "data": {
            "title": "Data",
            "type": "object"
          },
          "id": {
            "title": "Id",
            "type": "string",
            "default": ""
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "entityType": {
            "$ref": "#/components/schemas/SuggestionEntityTypes"
          },
          "pk": {
            "title": "Pk",
            "type": "string"
          }
        }
      },
      "SuggestionEntityTypes": {
        "title": "SuggestionEntityTypes",
        "enum": [
          "Domain",
          "Subdomain",
          "Account",
          "Repository"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "SuspiciousDomain": {
        "title": "SuspiciousDomain",
        "required": [
          "company",
          "uid",
          "entity",
          "name",
          "score_details"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "suspicious_domain"
            ],
            "type": "string",
            "default": "suspicious_domain"
          },
          "group": {
            "title": "Group",
            "enum": [
              "domains"
            ],
            "type": "string",
            "default": "domains"
          },
          "entity": {
            "title": "Entity",
            "pattern": "^Domain-",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "score_details": {
            "title": "Score Details",
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IndividualScore"
              }
            }
          }
        }
      },
      "Token": {
        "title": "Token",
        "required": [
          "name",
          "id",
          "token",
          "company"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "id": {
            "title": "Id",
            "type": "string"
          },
          "token": {
            "title": "Token",
            "type": "string"
          },
          "company": {
            "title": "Company",
            "type": "string"
          }
        }
      },
      "UploadFailure": {
        "title": "UploadFailure",
        "required": [
          "line",
          "reason"
        ],
        "type": "object",
        "properties": {
          "line": {
            "title": "Line",
            "type": "string"
          },
          "reason": {
            "$ref": "#/components/schemas/UploadFailureReasonEnum"
          }
        }
      },
      "UploadFailureReasonEnum": {
        "title": "UploadFailureReasonEnum",
        "enum": [
          "internal-error",
          "decode-error",
          "invalid-domain-name",
          "already-exists"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "UploadResponse": {
        "title": "UploadResponse",
        "required": [
          "success_count",
          "failed_count",
          "failures"
        ],
        "type": "object",
        "properties": {
          "success_count": {
            "title": "Success Count",
            "type": "integer"
          },
          "failed_count": {
            "title": "Failed Count",
            "type": "integer"
          },
          "failures": {
            "title": "Failures",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UploadFailure"
            }
          }
        }
      },
      "UserCompanyAccessEntity": {
        "title": "UserCompanyAccessEntity",
        "required": [
          "name",
          "accessType",
          "email",
          "pk",
          "sk"
        ],
        "type": "object",
        "properties": {
          "pk": {
            "title": "Pk",
            "type": "string"
          },
          "sk": {
            "title": "Sk",
            "type": "string"
          },
          "entityType": {
            "title": "Entitytype",
            "type": "string"
          },
          "created": {
            "title": "Created",
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "title": "Updated",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "accessType": {
            "$ref": "#/components/schemas/CompanyAccessEnum"
          },
          "email": {
            "title": "Email",
            "type": "string"
          }
        }
      },
      "UserEntry": {
        "title": "UserEntry",
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string",
            "default": ""
          },
          "type": {
            "title": "Type",
            "enum": [
              "user"
            ],
            "type": "string",
            "default": "user"
          }
        }
      },
      "VDPAnswer": {
        "title": "VDPAnswer",
        "enum": [
          "managed",
          "self_hosted",
          "exploring",
          "none"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "VIPAnswer": {
        "title": "VIPAnswer",
        "enum": [
          "yes",
          "no"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "VerificationResult": {
        "title": "VerificationResult",
        "required": [
          "verified"
        ],
        "type": "object",
        "properties": {
          "verified": {
            "title": "Verified",
            "type": "boolean"
          }
        }
      },
      "VulnScanAnswer": {
        "title": "VulnScanAnswer",
        "enum": [
          "quarterly",
          "yearly",
          "none"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "WebApplicationVulnerability": {
        "title": "WebApplicationVulnerability",
        "required": [
          "company",
          "uid",
          "entity",
          "name",
          "nuclei_template_id"
        ],
        "type": "object",
        "properties": {
          "company": {
            "title": "Company",
            "type": "string"
          },
          "uid": {
            "title": "Uid",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "web_app_vulnerability"
            ],
            "type": "string",
            "default": "web_app_vulnerability"
          },
          "group": {
            "title": "Group",
            "enum": [
              "vulnerabilities"
            ],
            "type": "string",
            "default": "vulnerabilities"
          },
          "entity": {
            "title": "Entity",
            "pattern": "^(Sub)?[Dd]omain-",
            "type": "string"
          },
          "score": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityScore"
              }
            ],
            "default": "unknown"
          },
          "resolution": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OpportunityResolution"
              }
            ],
            "default": "unacknowledged"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "nuclei_template_id": {
            "title": "Nuclei Template Id",
            "type": "string"
          }
        }
      },
      "WebCrawl": {
        "title": "WebCrawl",
        "required": [
          "source_lookup"
        ],
        "type": "object",
        "properties": {
          "source_lookup": {
            "title": "Source Lookup",
            "type": "string"
          },
          "type": {
            "title": "Type",
            "enum": [
              "scan.webpage"
            ],
            "type": "string",
            "default": "scan.webpage"
          }
        }
      },
      "WhoisData": {
        "title": "WhoisData",
        "required": [
          "rawText"
        ],
        "type": "object",
        "properties": {
          "success": {
            "title": "Success",
            "enum": [
              true
            ],
            "type": "boolean",
            "default": true
          },
          "address": {
            "title": "Address",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "creationDate": {
            "title": "Creationdate",
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "dnssec": {
            "title": "Dnssec",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "domainName": {
            "title": "Domainname",
            "type": "string"
          },
          "email": {
            "title": "Email",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expirationDate": {
            "title": "Expirationdate",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nameServers": {
            "title": "Nameservers",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "registrantName": {
            "title": "Registrantname",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rawText": {
            "title": "Rawtext",
            "type": "string"
          }
        }
      },
      "WhoisError": {
        "title": "WhoisError",
        "required": [
          "error"
        ],
        "type": "object",
        "properties": {
          "success": {
            "title": "Success",
            "enum": [
              false
            ],
            "type": "boolean",
            "default": false
          },
          "error": {
            "title": "Error",
            "maxItems": 1,
            "minItems": 1,
            "type": "array",
            "items": [
              {
                "type": "string"
              }
            ]
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      },
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}